'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ds_tranfer"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ds_tranfer
    Inherits Global.System.Data.DataSet
    
    Private tableVIEW_tranfer_Header As VIEW_tranfer_HeaderDataTable
    
    Private tableVIEW_tranfer_Detail As VIEW_tranfer_DetailDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VIEW_tranfer_Header")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_tranfer_HeaderDataTable(ds.Tables("VIEW_tranfer_Header")))
            End If
            If (Not (ds.Tables("VIEW_tranfer_Detail")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_tranfer_DetailDataTable(ds.Tables("VIEW_tranfer_Detail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_tranfer_Header() As VIEW_tranfer_HeaderDataTable
        Get
            Return Me.tableVIEW_tranfer_Header
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_tranfer_Detail() As VIEW_tranfer_DetailDataTable
        Get
            Return Me.tableVIEW_tranfer_Detail
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ds_tranfer = CType(MyBase.Clone,ds_tranfer)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("VIEW_tranfer_Header")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_tranfer_HeaderDataTable(ds.Tables("VIEW_tranfer_Header")))
            End If
            If (Not (ds.Tables("VIEW_tranfer_Detail")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_tranfer_DetailDataTable(ds.Tables("VIEW_tranfer_Detail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVIEW_tranfer_Header = CType(MyBase.Tables("VIEW_tranfer_Header"),VIEW_tranfer_HeaderDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_tranfer_Header) Is Nothing) Then
                Me.tableVIEW_tranfer_Header.InitVars
            End If
        End If
        Me.tableVIEW_tranfer_Detail = CType(MyBase.Tables("VIEW_tranfer_Detail"),VIEW_tranfer_DetailDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_tranfer_Detail) Is Nothing) Then
                Me.tableVIEW_tranfer_Detail.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "ds_tranfer"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ds_tranfer.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVIEW_tranfer_Header = New VIEW_tranfer_HeaderDataTable
        MyBase.Tables.Add(Me.tableVIEW_tranfer_Header)
        Me.tableVIEW_tranfer_Detail = New VIEW_tranfer_DetailDataTable
        MyBase.Tables.Add(Me.tableVIEW_tranfer_Detail)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_tranfer_Header() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_tranfer_Detail() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ds_tranfer = New ds_tranfer
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub VIEW_tranfer_HeaderRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_tranfer_HeaderRowChangeEvent)
    
    Public Delegate Sub VIEW_tranfer_DetailRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_tranfer_DetailRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_tranfer_HeaderDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTransferStatus_Index As Global.System.Data.DataColumn
        
        Private columnTransferStatus_No As Global.System.Data.DataColumn
        
        Private columnTransferStatus_Date As Global.System.Data.DataColumn
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnTimes As Global.System.Data.DataColumn
        
        Private columnRef_No1 As Global.System.Data.DataColumn
        
        Private columnDocumentType_Index As Global.System.Data.DataColumn
        
        Private columnStr1 As Global.System.Data.DataColumn
        
        Private columnStr2 As Global.System.Data.DataColumn
        
        Private columnStr3 As Global.System.Data.DataColumn
        
        Private columnStr4 As Global.System.Data.DataColumn
        
        Private columnStr5 As Global.System.Data.DataColumn
        
        Private columnFlo1 As Global.System.Data.DataColumn
        
        Private columnFlo2 As Global.System.Data.DataColumn
        
        Private columnFlo3 As Global.System.Data.DataColumn
        
        Private columnFlo4 As Global.System.Data.DataColumn
        
        Private columnFlo5 As Global.System.Data.DataColumn
        
        Private columnComment As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_tranfer_Header"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatus_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatus_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatus_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatus_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatus_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatus_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TimesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DocumentType_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CommentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_tranfer_HeaderRow
            Get
                Return CType(Me.Rows(index),VIEW_tranfer_HeaderRow)
            End Get
        End Property
        
        Public Event VIEW_tranfer_HeaderRowChanging As VIEW_tranfer_HeaderRowChangeEventHandler
        
        Public Event VIEW_tranfer_HeaderRowChanged As VIEW_tranfer_HeaderRowChangeEventHandler
        
        Public Event VIEW_tranfer_HeaderRowDeleting As VIEW_tranfer_HeaderRowChangeEventHandler
        
        Public Event VIEW_tranfer_HeaderRowDeleted As VIEW_tranfer_HeaderRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_tranfer_HeaderRow(ByVal row As VIEW_tranfer_HeaderRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_tranfer_HeaderRow( _
                    ByVal TransferStatus_Index As String,  _
                    ByVal TransferStatus_No As String,  _
                    ByVal TransferStatus_Date As Date,  _
                    ByVal Customer_Index As String,  _
                    ByVal Times As String,  _
                    ByVal Ref_No1 As String,  _
                    ByVal DocumentType_Index As String,  _
                    ByVal Str1 As String,  _
                    ByVal Str2 As String,  _
                    ByVal Str3 As String,  _
                    ByVal Str4 As String,  _
                    ByVal Str5 As String,  _
                    ByVal Flo1 As Double,  _
                    ByVal Flo2 As Double,  _
                    ByVal Flo3 As Double,  _
                    ByVal Flo4 As Double,  _
                    ByVal Flo5 As Double,  _
                    ByVal Comment As String) As VIEW_tranfer_HeaderRow
            Dim rowVIEW_tranfer_HeaderRow As VIEW_tranfer_HeaderRow = CType(Me.NewRow,VIEW_tranfer_HeaderRow)
            Dim columnValuesArray() As Object = New Object() {TransferStatus_Index, TransferStatus_No, TransferStatus_Date, Customer_Index, Times, Ref_No1, DocumentType_Index, Str1, Str2, Str3, Str4, Str5, Flo1, Flo2, Flo3, Flo4, Flo5, Comment}
            rowVIEW_tranfer_HeaderRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_tranfer_HeaderRow)
            Return rowVIEW_tranfer_HeaderRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByTransferStatus_Index(ByVal TransferStatus_Index As String) As VIEW_tranfer_HeaderRow
            Return CType(Me.Rows.Find(New Object() {TransferStatus_Index}),VIEW_tranfer_HeaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_tranfer_HeaderDataTable = CType(MyBase.Clone,VIEW_tranfer_HeaderDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_tranfer_HeaderDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTransferStatus_Index = MyBase.Columns("TransferStatus_Index")
            Me.columnTransferStatus_No = MyBase.Columns("TransferStatus_No")
            Me.columnTransferStatus_Date = MyBase.Columns("TransferStatus_Date")
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnTimes = MyBase.Columns("Times")
            Me.columnRef_No1 = MyBase.Columns("Ref_No1")
            Me.columnDocumentType_Index = MyBase.Columns("DocumentType_Index")
            Me.columnStr1 = MyBase.Columns("Str1")
            Me.columnStr2 = MyBase.Columns("Str2")
            Me.columnStr3 = MyBase.Columns("Str3")
            Me.columnStr4 = MyBase.Columns("Str4")
            Me.columnStr5 = MyBase.Columns("Str5")
            Me.columnFlo1 = MyBase.Columns("Flo1")
            Me.columnFlo2 = MyBase.Columns("Flo2")
            Me.columnFlo3 = MyBase.Columns("Flo3")
            Me.columnFlo4 = MyBase.Columns("Flo4")
            Me.columnFlo5 = MyBase.Columns("Flo5")
            Me.columnComment = MyBase.Columns("Comment")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTransferStatus_Index = New Global.System.Data.DataColumn("TransferStatus_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatus_Index)
            Me.columnTransferStatus_No = New Global.System.Data.DataColumn("TransferStatus_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatus_No)
            Me.columnTransferStatus_Date = New Global.System.Data.DataColumn("TransferStatus_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatus_Date)
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnTimes = New Global.System.Data.DataColumn("Times", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimes)
            Me.columnRef_No1 = New Global.System.Data.DataColumn("Ref_No1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No1)
            Me.columnDocumentType_Index = New Global.System.Data.DataColumn("DocumentType_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_Index)
            Me.columnStr1 = New Global.System.Data.DataColumn("Str1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr1)
            Me.columnStr2 = New Global.System.Data.DataColumn("Str2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr2)
            Me.columnStr3 = New Global.System.Data.DataColumn("Str3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr3)
            Me.columnStr4 = New Global.System.Data.DataColumn("Str4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr4)
            Me.columnStr5 = New Global.System.Data.DataColumn("Str5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr5)
            Me.columnFlo1 = New Global.System.Data.DataColumn("Flo1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo1)
            Me.columnFlo2 = New Global.System.Data.DataColumn("Flo2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo2)
            Me.columnFlo3 = New Global.System.Data.DataColumn("Flo3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo3)
            Me.columnFlo4 = New Global.System.Data.DataColumn("Flo4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo4)
            Me.columnFlo5 = New Global.System.Data.DataColumn("Flo5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo5)
            Me.columnComment = New Global.System.Data.DataColumn("Comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComment)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTransferStatus_Index}, true))
            Me.columnTransferStatus_Index.AllowDBNull = false
            Me.columnTransferStatus_Index.Unique = true
            Me.columnTransferStatus_Index.MaxLength = 13
            Me.columnTransferStatus_No.MaxLength = 50
            Me.columnCustomer_Index.MaxLength = 13
            Me.columnTimes.MaxLength = 50
            Me.columnRef_No1.MaxLength = 50
            Me.columnDocumentType_Index.MaxLength = 13
            Me.columnStr1.MaxLength = 100
            Me.columnStr2.MaxLength = 100
            Me.columnStr3.MaxLength = 100
            Me.columnStr4.MaxLength = 100
            Me.columnStr5.MaxLength = 100
            Me.columnComment.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_tranfer_HeaderRow() As VIEW_tranfer_HeaderRow
            Return CType(Me.NewRow,VIEW_tranfer_HeaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_tranfer_HeaderRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_tranfer_HeaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_tranfer_HeaderRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_tranfer_HeaderRowChanged(Me, New VIEW_tranfer_HeaderRowChangeEvent(CType(e.Row,VIEW_tranfer_HeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_tranfer_HeaderRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_tranfer_HeaderRowChanging(Me, New VIEW_tranfer_HeaderRowChangeEvent(CType(e.Row,VIEW_tranfer_HeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_tranfer_HeaderRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_tranfer_HeaderRowDeleted(Me, New VIEW_tranfer_HeaderRowChangeEvent(CType(e.Row,VIEW_tranfer_HeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_tranfer_HeaderRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_tranfer_HeaderRowDeleting(Me, New VIEW_tranfer_HeaderRowChangeEvent(CType(e.Row,VIEW_tranfer_HeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_tranfer_HeaderRow(ByVal row As VIEW_tranfer_HeaderRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ds_tranfer = New ds_tranfer
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_tranfer_HeaderDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_tranfer_DetailDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTransferStatus_Index As Global.System.Data.DataColumn
        
        Private columnTransferStatus_No As Global.System.Data.DataColumn
        
        Private columnTransferStatus_Date As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnPlot As Global.System.Data.DataColumn
        
        Private columnSerial_No As Global.System.Data.DataColumn
        
        Private columnPackage_Description As Global.System.Data.DataColumn
        
        Private columnTotal_Qty As Global.System.Data.DataColumn
        
        Private columnSku_Description As Global.System.Data.DataColumn
        
        Private columnTag_No As Global.System.Data.DataColumn
        
        Private columnOrder_Date As Global.System.Data.DataColumn
        
        Private columnFrom_Location_Index As Global.System.Data.DataColumn
        
        Private columnTo_Location_Index As Global.System.Data.DataColumn
        
        Private columnLocation_Alias_From As Global.System.Data.DataColumn
        
        Private columnLocation_Alias_To As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnDes_New As Global.System.Data.DataColumn
        
        Private columnOrder_No As Global.System.Data.DataColumn
        
        Private columnPallNo As Global.System.Data.DataColumn
        
        Private columnMfgDate As Global.System.Data.DataColumn
        
        Private columnExpDate As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnVolume As Global.System.Data.DataColumn
        
        Private columnDes_Old As Global.System.Data.DataColumn
        
        Private columnComment As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_tranfer_Detail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatus_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatus_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatus_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatus_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatus_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatus_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PlotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Serial_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerial_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Package_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tag_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTag_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Order_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrder_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property From_Location_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrom_Location_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property To_Location_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTo_Location_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Location_Alias_FromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocation_Alias_From
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Location_Alias_ToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocation_Alias_To
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Des_NewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDes_New
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Order_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrder_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PallNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPallNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MfgDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMfgDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExpDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Des_OldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDes_Old
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CommentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_tranfer_DetailRow
            Get
                Return CType(Me.Rows(index),VIEW_tranfer_DetailRow)
            End Get
        End Property
        
        Public Event VIEW_tranfer_DetailRowChanging As VIEW_tranfer_DetailRowChangeEventHandler
        
        Public Event VIEW_tranfer_DetailRowChanged As VIEW_tranfer_DetailRowChangeEventHandler
        
        Public Event VIEW_tranfer_DetailRowDeleting As VIEW_tranfer_DetailRowChangeEventHandler
        
        Public Event VIEW_tranfer_DetailRowDeleted As VIEW_tranfer_DetailRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_tranfer_DetailRow(ByVal row As VIEW_tranfer_DetailRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_tranfer_DetailRow( _
                    ByVal TransferStatus_Index As String,  _
                    ByVal TransferStatus_No As String,  _
                    ByVal TransferStatus_Date As Date,  _
                    ByVal Sku_Id As String,  _
                    ByVal Plot As String,  _
                    ByVal Serial_No As String,  _
                    ByVal Package_Description As String,  _
                    ByVal Total_Qty As Double,  _
                    ByVal Sku_Description As String,  _
                    ByVal Tag_No As String,  _
                    ByVal Order_Date As Date,  _
                    ByVal From_Location_Index As String,  _
                    ByVal To_Location_Index As String,  _
                    ByVal Location_Alias_From As String,  _
                    ByVal Location_Alias_To As String,  _
                    ByVal Status As Integer,  _
                    ByVal Description As String,  _
                    ByVal Des_New As String,  _
                    ByVal Order_No As String,  _
                    ByVal PallNo As String,  _
                    ByVal MfgDate As String,  _
                    ByVal ExpDate As String,  _
                    ByVal Weight As Double,  _
                    ByVal Volume As Double,  _
                    ByVal Des_Old As String,  _
                    ByVal Comment As String) As VIEW_tranfer_DetailRow
            Dim rowVIEW_tranfer_DetailRow As VIEW_tranfer_DetailRow = CType(Me.NewRow,VIEW_tranfer_DetailRow)
            Dim columnValuesArray() As Object = New Object() {TransferStatus_Index, TransferStatus_No, TransferStatus_Date, Sku_Id, Plot, Serial_No, Package_Description, Total_Qty, Sku_Description, Tag_No, Order_Date, From_Location_Index, To_Location_Index, Location_Alias_From, Location_Alias_To, Status, Description, Des_New, Order_No, PallNo, MfgDate, ExpDate, Weight, Volume, Des_Old, Comment}
            rowVIEW_tranfer_DetailRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_tranfer_DetailRow)
            Return rowVIEW_tranfer_DetailRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByTransferStatus_Index(ByVal TransferStatus_Index As String) As VIEW_tranfer_DetailRow
            Return CType(Me.Rows.Find(New Object() {TransferStatus_Index}),VIEW_tranfer_DetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_tranfer_DetailDataTable = CType(MyBase.Clone,VIEW_tranfer_DetailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_tranfer_DetailDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTransferStatus_Index = MyBase.Columns("TransferStatus_Index")
            Me.columnTransferStatus_No = MyBase.Columns("TransferStatus_No")
            Me.columnTransferStatus_Date = MyBase.Columns("TransferStatus_Date")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnPlot = MyBase.Columns("Plot")
            Me.columnSerial_No = MyBase.Columns("Serial_No")
            Me.columnPackage_Description = MyBase.Columns("Package_Description")
            Me.columnTotal_Qty = MyBase.Columns("Total_Qty")
            Me.columnSku_Description = MyBase.Columns("Sku_Description")
            Me.columnTag_No = MyBase.Columns("Tag_No")
            Me.columnOrder_Date = MyBase.Columns("Order_Date")
            Me.columnFrom_Location_Index = MyBase.Columns("From_Location_Index")
            Me.columnTo_Location_Index = MyBase.Columns("To_Location_Index")
            Me.columnLocation_Alias_From = MyBase.Columns("Location_Alias_From")
            Me.columnLocation_Alias_To = MyBase.Columns("Location_Alias_To")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnDes_New = MyBase.Columns("Des_New")
            Me.columnOrder_No = MyBase.Columns("Order_No")
            Me.columnPallNo = MyBase.Columns("PallNo")
            Me.columnMfgDate = MyBase.Columns("MfgDate")
            Me.columnExpDate = MyBase.Columns("ExpDate")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnVolume = MyBase.Columns("Volume")
            Me.columnDes_Old = MyBase.Columns("Des_Old")
            Me.columnComment = MyBase.Columns("Comment")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTransferStatus_Index = New Global.System.Data.DataColumn("TransferStatus_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatus_Index)
            Me.columnTransferStatus_No = New Global.System.Data.DataColumn("TransferStatus_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatus_No)
            Me.columnTransferStatus_Date = New Global.System.Data.DataColumn("TransferStatus_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatus_Date)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnPlot = New Global.System.Data.DataColumn("Plot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlot)
            Me.columnSerial_No = New Global.System.Data.DataColumn("Serial_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerial_No)
            Me.columnPackage_Description = New Global.System.Data.DataColumn("Package_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Description)
            Me.columnTotal_Qty = New Global.System.Data.DataColumn("Total_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Qty)
            Me.columnSku_Description = New Global.System.Data.DataColumn("Sku_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Description)
            Me.columnTag_No = New Global.System.Data.DataColumn("Tag_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTag_No)
            Me.columnOrder_Date = New Global.System.Data.DataColumn("Order_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrder_Date)
            Me.columnFrom_Location_Index = New Global.System.Data.DataColumn("From_Location_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrom_Location_Index)
            Me.columnTo_Location_Index = New Global.System.Data.DataColumn("To_Location_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTo_Location_Index)
            Me.columnLocation_Alias_From = New Global.System.Data.DataColumn("Location_Alias_From", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation_Alias_From)
            Me.columnLocation_Alias_To = New Global.System.Data.DataColumn("Location_Alias_To", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation_Alias_To)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnDes_New = New Global.System.Data.DataColumn("Des_New", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDes_New)
            Me.columnOrder_No = New Global.System.Data.DataColumn("Order_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrder_No)
            Me.columnPallNo = New Global.System.Data.DataColumn("PallNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPallNo)
            Me.columnMfgDate = New Global.System.Data.DataColumn("MfgDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMfgDate)
            Me.columnExpDate = New Global.System.Data.DataColumn("ExpDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpDate)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnVolume = New Global.System.Data.DataColumn("Volume", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume)
            Me.columnDes_Old = New Global.System.Data.DataColumn("Des_Old", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDes_Old)
            Me.columnComment = New Global.System.Data.DataColumn("Comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComment)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTransferStatus_Index}, true))
            Me.columnTransferStatus_Index.AllowDBNull = false
            Me.columnTransferStatus_Index.Unique = true
            Me.columnTransferStatus_Index.MaxLength = 13
            Me.columnTransferStatus_No.MaxLength = 50
            Me.columnSku_Id.MaxLength = 50
            Me.columnPlot.MaxLength = 50
            Me.columnSerial_No.MaxLength = 50
            Me.columnPackage_Description.MaxLength = 100
            Me.columnSku_Description.MaxLength = 100
            Me.columnTag_No.MaxLength = 50
            Me.columnFrom_Location_Index.MaxLength = 13
            Me.columnTo_Location_Index.MaxLength = 13
            Me.columnLocation_Alias_From.MaxLength = 50
            Me.columnLocation_Alias_To.MaxLength = 50
            Me.columnDescription.MaxLength = 100
            Me.columnDes_New.MaxLength = 100
            Me.columnOrder_No.MaxLength = 50
            Me.columnPallNo.MaxLength = 100
            Me.columnMfgDate.ReadOnly = true
            Me.columnMfgDate.MaxLength = 30
            Me.columnExpDate.ReadOnly = true
            Me.columnExpDate.MaxLength = 30
            Me.columnDes_Old.MaxLength = 100
            Me.columnComment.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_tranfer_DetailRow() As VIEW_tranfer_DetailRow
            Return CType(Me.NewRow,VIEW_tranfer_DetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_tranfer_DetailRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_tranfer_DetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_tranfer_DetailRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_tranfer_DetailRowChanged(Me, New VIEW_tranfer_DetailRowChangeEvent(CType(e.Row,VIEW_tranfer_DetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_tranfer_DetailRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_tranfer_DetailRowChanging(Me, New VIEW_tranfer_DetailRowChangeEvent(CType(e.Row,VIEW_tranfer_DetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_tranfer_DetailRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_tranfer_DetailRowDeleted(Me, New VIEW_tranfer_DetailRowChangeEvent(CType(e.Row,VIEW_tranfer_DetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_tranfer_DetailRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_tranfer_DetailRowDeleting(Me, New VIEW_tranfer_DetailRowChangeEvent(CType(e.Row,VIEW_tranfer_DetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_tranfer_DetailRow(ByVal row As VIEW_tranfer_DetailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ds_tranfer = New ds_tranfer
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_tranfer_DetailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_tranfer_HeaderRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_tranfer_Header As VIEW_tranfer_HeaderDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_tranfer_Header = CType(Me.Table,VIEW_tranfer_HeaderDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatus_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_tranfer_Header.TransferStatus_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.TransferStatus_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatus_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.TransferStatus_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferStatus_No' in table 'VIEW_tranfer_Header' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.TransferStatus_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatus_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.TransferStatus_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferStatus_Date' in table 'VIEW_tranfer_Header' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.TransferStatus_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Customer_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Index' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Times() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.TimesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Times' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.TimesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Ref_No1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No1' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Ref_No1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocumentType_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.DocumentType_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentType_Index' in table 'VIEW_tranfer_Header' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.DocumentType_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Str1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str1' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Str1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Str2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str2' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Str2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Str3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str3' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Str3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str4() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Str4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str4' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Str4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str5() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Str5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str5' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Str5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Flo1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo1' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Flo1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Flo2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo2' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Flo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Flo3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo3' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Flo3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Flo4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo4' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Flo4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo5() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.Flo5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo5' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.Flo5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Comment() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Header.CommentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comment' in table 'VIEW_tranfer_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Header.CommentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransferStatus_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.TransferStatus_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransferStatus_NoNull()
            Me(Me.tableVIEW_tranfer_Header.TransferStatus_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransferStatus_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.TransferStatus_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransferStatus_DateNull()
            Me(Me.tableVIEW_tranfer_Header.TransferStatus_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Customer_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IndexNull()
            Me(Me.tableVIEW_tranfer_Header.Customer_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTimesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.TimesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTimesNull()
            Me(Me.tableVIEW_tranfer_Header.TimesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Ref_No1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No1Null()
            Me(Me.tableVIEW_tranfer_Header.Ref_No1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocumentType_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.DocumentType_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocumentType_IndexNull()
            Me(Me.tableVIEW_tranfer_Header.DocumentType_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Str1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr1Null()
            Me(Me.tableVIEW_tranfer_Header.Str1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr2Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Str2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr2Null()
            Me(Me.tableVIEW_tranfer_Header.Str2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr3Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Str3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr3Null()
            Me(Me.tableVIEW_tranfer_Header.Str3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr4Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Str4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr4Null()
            Me(Me.tableVIEW_tranfer_Header.Str4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr5Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Str5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr5Null()
            Me(Me.tableVIEW_tranfer_Header.Str5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Flo1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo1Null()
            Me(Me.tableVIEW_tranfer_Header.Flo1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo2Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Flo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo2Null()
            Me(Me.tableVIEW_tranfer_Header.Flo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo3Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Flo3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo3Null()
            Me(Me.tableVIEW_tranfer_Header.Flo3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo4Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Flo4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo4Null()
            Me(Me.tableVIEW_tranfer_Header.Flo4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo5Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.Flo5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo5Null()
            Me(Me.tableVIEW_tranfer_Header.Flo5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCommentNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Header.CommentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCommentNull()
            Me(Me.tableVIEW_tranfer_Header.CommentColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_tranfer_DetailRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_tranfer_Detail As VIEW_tranfer_DetailDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_tranfer_Detail = CType(Me.Table,VIEW_tranfer_DetailDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatus_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_tranfer_Detail.TransferStatus_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.TransferStatus_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatus_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.TransferStatus_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferStatus_No' in table 'VIEW_tranfer_Detail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.TransferStatus_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatus_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.TransferStatus_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferStatus_Date' in table 'VIEW_tranfer_Detail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.TransferStatus_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Plot() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.PlotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Plot' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.PlotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Serial_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Serial_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Serial_No' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Serial_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Package_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Package_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package_Description' in table 'VIEW_tranfer_Detail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Package_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Total_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Qty' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Total_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Sku_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Description' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Sku_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tag_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Tag_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tag_No' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Tag_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Order_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Order_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Order_Date' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Order_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property From_Location_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.From_Location_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'From_Location_Index' in table 'VIEW_tranfer_Detail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.From_Location_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property To_Location_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.To_Location_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'To_Location_Index' in table 'VIEW_tranfer_Detail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.To_Location_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location_Alias_From() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Location_Alias_FromColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Location_Alias_From' in table 'VIEW_tranfer_Detail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Location_Alias_FromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location_Alias_To() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Location_Alias_ToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Location_Alias_To' in table 'VIEW_tranfer_Detail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Location_Alias_ToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.StatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Des_New() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Des_NewColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Des_New' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Des_NewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Order_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Order_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Order_No' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Order_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PallNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.PallNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PallNo' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.PallNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MfgDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.MfgDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MfgDate' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.MfgDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExpDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.ExpDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpDate' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.ExpDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.WeightColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.VolumeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volume' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Des_Old() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.Des_OldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Des_Old' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.Des_OldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Comment() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_tranfer_Detail.CommentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comment' in table 'VIEW_tranfer_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_tranfer_Detail.CommentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransferStatus_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.TransferStatus_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransferStatus_NoNull()
            Me(Me.tableVIEW_tranfer_Detail.TransferStatus_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransferStatus_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.TransferStatus_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransferStatus_DateNull()
            Me(Me.tableVIEW_tranfer_Detail.TransferStatus_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableVIEW_tranfer_Detail.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPlotNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.PlotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPlotNull()
            Me(Me.tableVIEW_tranfer_Detail.PlotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSerial_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Serial_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSerial_NoNull()
            Me(Me.tableVIEW_tranfer_Detail.Serial_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackage_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Package_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackage_DescriptionNull()
            Me(Me.tableVIEW_tranfer_Detail.Package_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Total_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_QtyNull()
            Me(Me.tableVIEW_tranfer_Detail.Total_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Sku_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_DescriptionNull()
            Me(Me.tableVIEW_tranfer_Detail.Sku_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTag_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Tag_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTag_NoNull()
            Me(Me.tableVIEW_tranfer_Detail.Tag_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOrder_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Order_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOrder_DateNull()
            Me(Me.tableVIEW_tranfer_Detail.Order_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFrom_Location_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.From_Location_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFrom_Location_IndexNull()
            Me(Me.tableVIEW_tranfer_Detail.From_Location_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTo_Location_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.To_Location_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTo_Location_IndexNull()
            Me(Me.tableVIEW_tranfer_Detail.To_Location_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocation_Alias_FromNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Location_Alias_FromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocation_Alias_FromNull()
            Me(Me.tableVIEW_tranfer_Detail.Location_Alias_FromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocation_Alias_ToNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Location_Alias_ToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocation_Alias_ToNull()
            Me(Me.tableVIEW_tranfer_Detail.Location_Alias_ToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNull()
            Me(Me.tableVIEW_tranfer_Detail.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableVIEW_tranfer_Detail.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDes_NewNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Des_NewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDes_NewNull()
            Me(Me.tableVIEW_tranfer_Detail.Des_NewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOrder_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Order_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOrder_NoNull()
            Me(Me.tableVIEW_tranfer_Detail.Order_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPallNoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.PallNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPallNoNull()
            Me(Me.tableVIEW_tranfer_Detail.PallNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMfgDateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.MfgDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMfgDateNull()
            Me(Me.tableVIEW_tranfer_Detail.MfgDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpDateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.ExpDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpDateNull()
            Me(Me.tableVIEW_tranfer_Detail.ExpDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeightNull()
            Me(Me.tableVIEW_tranfer_Detail.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolumeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolumeNull()
            Me(Me.tableVIEW_tranfer_Detail.VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDes_OldNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.Des_OldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDes_OldNull()
            Me(Me.tableVIEW_tranfer_Detail.Des_OldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCommentNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_tranfer_Detail.CommentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCommentNull()
            Me(Me.tableVIEW_tranfer_Detail.CommentColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_tranfer_HeaderRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_tranfer_HeaderRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_tranfer_HeaderRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_tranfer_HeaderRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_tranfer_DetailRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_tranfer_DetailRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_tranfer_DetailRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_tranfer_DetailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
