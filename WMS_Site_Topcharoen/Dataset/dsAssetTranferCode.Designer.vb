'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsAssetTranferCode"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsAssetTranferCode
    Inherits Global.System.Data.DataSet
    
    Private tabletb_TransferCode As tb_TransferCodeDataTable
    
    Private tableVIEW_RPT_TranferCodeDetail As VIEW_RPT_TranferCodeDetailDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tb_TransferCode")) Is Nothing) Then
                MyBase.Tables.Add(New tb_TransferCodeDataTable(ds.Tables("tb_TransferCode")))
            End If
            If (Not (ds.Tables("VIEW_RPT_TranferCodeDetail")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_TranferCodeDetailDataTable(ds.Tables("VIEW_RPT_TranferCodeDetail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tb_TransferCode() As tb_TransferCodeDataTable
        Get
            Return Me.tabletb_TransferCode
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_RPT_TranferCodeDetail() As VIEW_RPT_TranferCodeDetailDataTable
        Get
            Return Me.tableVIEW_RPT_TranferCodeDetail
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsAssetTranferCode = CType(MyBase.Clone,dsAssetTranferCode)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("tb_TransferCode")) Is Nothing) Then
                MyBase.Tables.Add(New tb_TransferCodeDataTable(ds.Tables("tb_TransferCode")))
            End If
            If (Not (ds.Tables("VIEW_RPT_TranferCodeDetail")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_TranferCodeDetailDataTable(ds.Tables("VIEW_RPT_TranferCodeDetail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletb_TransferCode = CType(MyBase.Tables("tb_TransferCode"),tb_TransferCodeDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletb_TransferCode) Is Nothing) Then
                Me.tabletb_TransferCode.InitVars
            End If
        End If
        Me.tableVIEW_RPT_TranferCodeDetail = CType(MyBase.Tables("VIEW_RPT_TranferCodeDetail"),VIEW_RPT_TranferCodeDetailDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_RPT_TranferCodeDetail) Is Nothing) Then
                Me.tableVIEW_RPT_TranferCodeDetail.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsAssetTranferCode"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsAssetTranferCode.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletb_TransferCode = New tb_TransferCodeDataTable
        MyBase.Tables.Add(Me.tabletb_TransferCode)
        Me.tableVIEW_RPT_TranferCodeDetail = New VIEW_RPT_TranferCodeDetailDataTable
        MyBase.Tables.Add(Me.tableVIEW_RPT_TranferCodeDetail)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetb_TransferCode() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_RPT_TranferCodeDetail() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsAssetTranferCode = New dsAssetTranferCode
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub tb_TransferCodeRowChangeEventHandler(ByVal sender As Object, ByVal e As tb_TransferCodeRowChangeEvent)
    
    Public Delegate Sub VIEW_RPT_TranferCodeDetailRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_RPT_TranferCodeDetailRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tb_TransferCodeDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTransferCode_Index As Global.System.Data.DataColumn
        
        Private columnTransferCode_No As Global.System.Data.DataColumn
        
        Private columnTransferCode_Date As Global.System.Data.DataColumn
        
        Private columnDocumentType_Index As Global.System.Data.DataColumn
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnTimes As Global.System.Data.DataColumn
        
        Private columnRef_No1 As Global.System.Data.DataColumn
        
        Private columnRef_No2 As Global.System.Data.DataColumn
        
        Private columnComment As Global.System.Data.DataColumn
        
        Private columnStr1 As Global.System.Data.DataColumn
        
        Private columnStr2 As Global.System.Data.DataColumn
        
        Private columnStr3 As Global.System.Data.DataColumn
        
        Private columnStr4 As Global.System.Data.DataColumn
        
        Private columnStr5 As Global.System.Data.DataColumn
        
        Private columnFlo1 As Global.System.Data.DataColumn
        
        Private columnFlo2 As Global.System.Data.DataColumn
        
        Private columnFlo3 As Global.System.Data.DataColumn
        
        Private columnFlo4 As Global.System.Data.DataColumn
        
        Private columnFlo5 As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnadd_by As Global.System.Data.DataColumn
        
        Private columnadd_date As Global.System.Data.DataColumn
        
        Private columnadd_branch As Global.System.Data.DataColumn
        
        Private columnupdate_by As Global.System.Data.DataColumn
        
        Private columnupdate_date As Global.System.Data.DataColumn
        
        Private columnupdate_branch As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tb_TransferCode"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferCode_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferCode_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferCode_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferCode_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferCode_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferCode_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DocumentType_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TimesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CommentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_branchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_branch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property update_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdate_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property update_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdate_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property update_branchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdate_branch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tb_TransferCodeRow
            Get
                Return CType(Me.Rows(index),tb_TransferCodeRow)
            End Get
        End Property
        
        Public Event tb_TransferCodeRowChanging As tb_TransferCodeRowChangeEventHandler
        
        Public Event tb_TransferCodeRowChanged As tb_TransferCodeRowChangeEventHandler
        
        Public Event tb_TransferCodeRowDeleting As tb_TransferCodeRowChangeEventHandler
        
        Public Event tb_TransferCodeRowDeleted As tb_TransferCodeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtb_TransferCodeRow(ByVal row As tb_TransferCodeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtb_TransferCodeRow( _
                    ByVal TransferCode_Index As String,  _
                    ByVal TransferCode_No As String,  _
                    ByVal TransferCode_Date As Date,  _
                    ByVal DocumentType_Index As String,  _
                    ByVal Customer_Index As String,  _
                    ByVal Times As String,  _
                    ByVal Ref_No1 As String,  _
                    ByVal Ref_No2 As String,  _
                    ByVal Comment As String,  _
                    ByVal Str1 As String,  _
                    ByVal Str2 As String,  _
                    ByVal Str3 As String,  _
                    ByVal Str4 As String,  _
                    ByVal Str5 As String,  _
                    ByVal Flo1 As Double,  _
                    ByVal Flo2 As Double,  _
                    ByVal Flo3 As Double,  _
                    ByVal Flo4 As Double,  _
                    ByVal Flo5 As Double,  _
                    ByVal Status As Integer,  _
                    ByVal add_by As String,  _
                    ByVal add_date As Date,  _
                    ByVal add_branch As Integer,  _
                    ByVal update_by As String,  _
                    ByVal update_date As Date,  _
                    ByVal update_branch As Integer) As tb_TransferCodeRow
            Dim rowtb_TransferCodeRow As tb_TransferCodeRow = CType(Me.NewRow,tb_TransferCodeRow)
            Dim columnValuesArray() As Object = New Object() {TransferCode_Index, TransferCode_No, TransferCode_Date, DocumentType_Index, Customer_Index, Times, Ref_No1, Ref_No2, Comment, Str1, Str2, Str3, Str4, Str5, Flo1, Flo2, Flo3, Flo4, Flo5, Status, add_by, add_date, add_branch, update_by, update_date, update_branch}
            rowtb_TransferCodeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtb_TransferCodeRow)
            Return rowtb_TransferCodeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByTransferCode_Index(ByVal TransferCode_Index As String) As tb_TransferCodeRow
            Return CType(Me.Rows.Find(New Object() {TransferCode_Index}),tb_TransferCodeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tb_TransferCodeDataTable = CType(MyBase.Clone,tb_TransferCodeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tb_TransferCodeDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTransferCode_Index = MyBase.Columns("TransferCode_Index")
            Me.columnTransferCode_No = MyBase.Columns("TransferCode_No")
            Me.columnTransferCode_Date = MyBase.Columns("TransferCode_Date")
            Me.columnDocumentType_Index = MyBase.Columns("DocumentType_Index")
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnTimes = MyBase.Columns("Times")
            Me.columnRef_No1 = MyBase.Columns("Ref_No1")
            Me.columnRef_No2 = MyBase.Columns("Ref_No2")
            Me.columnComment = MyBase.Columns("Comment")
            Me.columnStr1 = MyBase.Columns("Str1")
            Me.columnStr2 = MyBase.Columns("Str2")
            Me.columnStr3 = MyBase.Columns("Str3")
            Me.columnStr4 = MyBase.Columns("Str4")
            Me.columnStr5 = MyBase.Columns("Str5")
            Me.columnFlo1 = MyBase.Columns("Flo1")
            Me.columnFlo2 = MyBase.Columns("Flo2")
            Me.columnFlo3 = MyBase.Columns("Flo3")
            Me.columnFlo4 = MyBase.Columns("Flo4")
            Me.columnFlo5 = MyBase.Columns("Flo5")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnadd_by = MyBase.Columns("add_by")
            Me.columnadd_date = MyBase.Columns("add_date")
            Me.columnadd_branch = MyBase.Columns("add_branch")
            Me.columnupdate_by = MyBase.Columns("update_by")
            Me.columnupdate_date = MyBase.Columns("update_date")
            Me.columnupdate_branch = MyBase.Columns("update_branch")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTransferCode_Index = New Global.System.Data.DataColumn("TransferCode_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferCode_Index)
            Me.columnTransferCode_No = New Global.System.Data.DataColumn("TransferCode_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferCode_No)
            Me.columnTransferCode_Date = New Global.System.Data.DataColumn("TransferCode_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferCode_Date)
            Me.columnDocumentType_Index = New Global.System.Data.DataColumn("DocumentType_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_Index)
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnTimes = New Global.System.Data.DataColumn("Times", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimes)
            Me.columnRef_No1 = New Global.System.Data.DataColumn("Ref_No1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No1)
            Me.columnRef_No2 = New Global.System.Data.DataColumn("Ref_No2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No2)
            Me.columnComment = New Global.System.Data.DataColumn("Comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComment)
            Me.columnStr1 = New Global.System.Data.DataColumn("Str1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr1)
            Me.columnStr2 = New Global.System.Data.DataColumn("Str2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr2)
            Me.columnStr3 = New Global.System.Data.DataColumn("Str3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr3)
            Me.columnStr4 = New Global.System.Data.DataColumn("Str4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr4)
            Me.columnStr5 = New Global.System.Data.DataColumn("Str5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr5)
            Me.columnFlo1 = New Global.System.Data.DataColumn("Flo1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo1)
            Me.columnFlo2 = New Global.System.Data.DataColumn("Flo2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo2)
            Me.columnFlo3 = New Global.System.Data.DataColumn("Flo3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo3)
            Me.columnFlo4 = New Global.System.Data.DataColumn("Flo4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo4)
            Me.columnFlo5 = New Global.System.Data.DataColumn("Flo5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo5)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnadd_by = New Global.System.Data.DataColumn("add_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_by)
            Me.columnadd_date = New Global.System.Data.DataColumn("add_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_date)
            Me.columnadd_branch = New Global.System.Data.DataColumn("add_branch", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_branch)
            Me.columnupdate_by = New Global.System.Data.DataColumn("update_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdate_by)
            Me.columnupdate_date = New Global.System.Data.DataColumn("update_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdate_date)
            Me.columnupdate_branch = New Global.System.Data.DataColumn("update_branch", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdate_branch)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTransferCode_Index}, true))
            Me.columnTransferCode_Index.AllowDBNull = false
            Me.columnTransferCode_Index.Unique = true
            Me.columnTransferCode_Index.MaxLength = 13
            Me.columnTransferCode_No.MaxLength = 50
            Me.columnDocumentType_Index.MaxLength = 13
            Me.columnCustomer_Index.MaxLength = 13
            Me.columnTimes.MaxLength = 50
            Me.columnRef_No1.MaxLength = 50
            Me.columnRef_No2.MaxLength = 50
            Me.columnComment.MaxLength = 255
            Me.columnStr1.MaxLength = 100
            Me.columnStr2.MaxLength = 100
            Me.columnStr3.MaxLength = 100
            Me.columnStr4.MaxLength = 100
            Me.columnStr5.MaxLength = 100
            Me.columnadd_by.MaxLength = 50
            Me.columnupdate_by.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtb_TransferCodeRow() As tb_TransferCodeRow
            Return CType(Me.NewRow,tb_TransferCodeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tb_TransferCodeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tb_TransferCodeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tb_TransferCodeRowChangedEvent) Is Nothing) Then
                RaiseEvent tb_TransferCodeRowChanged(Me, New tb_TransferCodeRowChangeEvent(CType(e.Row,tb_TransferCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tb_TransferCodeRowChangingEvent) Is Nothing) Then
                RaiseEvent tb_TransferCodeRowChanging(Me, New tb_TransferCodeRowChangeEvent(CType(e.Row,tb_TransferCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tb_TransferCodeRowDeletedEvent) Is Nothing) Then
                RaiseEvent tb_TransferCodeRowDeleted(Me, New tb_TransferCodeRowChangeEvent(CType(e.Row,tb_TransferCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tb_TransferCodeRowDeletingEvent) Is Nothing) Then
                RaiseEvent tb_TransferCodeRowDeleting(Me, New tb_TransferCodeRowChangeEvent(CType(e.Row,tb_TransferCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetb_TransferCodeRow(ByVal row As tb_TransferCodeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAssetTranferCode = New dsAssetTranferCode
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tb_TransferCodeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_RPT_TranferCodeDetailDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTransferCode_Index As Global.System.Data.DataColumn
        
        Private columnSku_Index As Global.System.Data.DataColumn
        
        Private columnSku_Des As Global.System.Data.DataColumn
        
        Private columnNew_Sku_Index As Global.System.Data.DataColumn
        
        Private columnNew_Sku_Id As Global.System.Data.DataColumn
        
        Private columnNew_Product_Name_th As Global.System.Data.DataColumn
        
        Private columnOld_ItemStatus_Index As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnTransferCodeLocation_Index As Global.System.Data.DataColumn
        
        Private columnItemStatus_Index As Global.System.Data.DataColumn
        
        Private columnNew_ItemStatus_Index As Global.System.Data.DataColumn
        
        Private columnFrom_Location As Global.System.Data.DataColumn
        
        Private columnFrom_Location_Index As Global.System.Data.DataColumn
        
        Private columnTo_Location_Index As Global.System.Data.DataColumn
        
        Private columnTo_Location As Global.System.Data.DataColumn
        
        Private columnBrand_Des As Global.System.Data.DataColumn
        
        Private columnBrand_Index As Global.System.Data.DataColumn
        
        Private columnModel_Index As Global.System.Data.DataColumn
        
        Private columnModel_Des As Global.System.Data.DataColumn
        
        Private columnAssetLocationBalance_Index As Global.System.Data.DataColumn
        
        Private columnAsset_No As Global.System.Data.DataColumn
        
        Private columnSerial_No As Global.System.Data.DataColumn
        
        Private columnOrder_Index As Global.System.Data.DataColumn
        
        Private columnOrderItem_Index As Global.System.Data.DataColumn
        
        Private columnPlot As Global.System.Data.DataColumn
        
        Private columnMfgDate As Global.System.Data.DataColumn
        
        Private columnExpDate As Global.System.Data.DataColumn
        
        Private columnStr1 As Global.System.Data.DataColumn
        
        Private columnStr2 As Global.System.Data.DataColumn
        
        Private columnTotal_Qty As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnVolume As Global.System.Data.DataColumn
        
        Private columnSku_Package As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnPallNo As Global.System.Data.DataColumn
        
        Private columnPallet_Qty As Global.System.Data.DataColumn
        
        Private columnTag_No As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnLot_No As Global.System.Data.DataColumn
        
        Private columnFrom_LocationBalance_Index As Global.System.Data.DataColumn
        
        Private columnTo_LocationBalance_Index As Global.System.Data.DataColumn
        
        Private columnPalletType_Index As Global.System.Data.DataColumn
        
        Private columnNew_ItemStatus_Des As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_RPT_TranferCodeDetail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferCode_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferCode_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_DesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property New_Sku_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNew_Sku_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property New_Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNew_Sku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property New_Product_Name_thColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNew_Product_Name_th
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Old_ItemStatus_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOld_ItemStatus_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferCodeLocation_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferCodeLocation_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemStatus_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemStatus_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property New_ItemStatus_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNew_ItemStatus_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property From_LocationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrom_Location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property From_Location_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrom_Location_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property To_Location_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTo_Location_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property To_LocationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTo_Location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Brand_DesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand_Des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Brand_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Model_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModel_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Model_DesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModel_Des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AssetLocationBalance_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAssetLocationBalance_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Asset_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAsset_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Serial_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerial_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Order_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrder_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OrderItem_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderItem_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PlotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MfgDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMfgDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExpDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_PackageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Package
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PallNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPallNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Pallet_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPallet_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tag_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTag_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Lot_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLot_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property From_LocationBalance_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrom_LocationBalance_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property To_LocationBalance_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTo_LocationBalance_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PalletType_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPalletType_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property New_ItemStatus_DesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNew_ItemStatus_Des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_RPT_TranferCodeDetailRow
            Get
                Return CType(Me.Rows(index),VIEW_RPT_TranferCodeDetailRow)
            End Get
        End Property
        
        Public Event VIEW_RPT_TranferCodeDetailRowChanging As VIEW_RPT_TranferCodeDetailRowChangeEventHandler
        
        Public Event VIEW_RPT_TranferCodeDetailRowChanged As VIEW_RPT_TranferCodeDetailRowChangeEventHandler
        
        Public Event VIEW_RPT_TranferCodeDetailRowDeleting As VIEW_RPT_TranferCodeDetailRowChangeEventHandler
        
        Public Event VIEW_RPT_TranferCodeDetailRowDeleted As VIEW_RPT_TranferCodeDetailRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_RPT_TranferCodeDetailRow(ByVal row As VIEW_RPT_TranferCodeDetailRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_RPT_TranferCodeDetailRow( _
                    ByVal TransferCode_Index As String,  _
                    ByVal Sku_Index As String,  _
                    ByVal Sku_Des As String,  _
                    ByVal New_Sku_Index As String,  _
                    ByVal New_Sku_Id As String,  _
                    ByVal New_Product_Name_th As String,  _
                    ByVal Old_ItemStatus_Index As String,  _
                    ByVal Description As String,  _
                    ByVal TransferCodeLocation_Index As String,  _
                    ByVal ItemStatus_Index As String,  _
                    ByVal New_ItemStatus_Index As String,  _
                    ByVal From_Location As String,  _
                    ByVal From_Location_Index As String,  _
                    ByVal To_Location_Index As String,  _
                    ByVal To_Location As String,  _
                    ByVal Brand_Des As String,  _
                    ByVal Brand_Index As String,  _
                    ByVal Model_Index As String,  _
                    ByVal Model_Des As String,  _
                    ByVal AssetLocationBalance_Index As String,  _
                    ByVal Asset_No As String,  _
                    ByVal Serial_No As String,  _
                    ByVal Order_Index As String,  _
                    ByVal OrderItem_Index As String,  _
                    ByVal Plot As String,  _
                    ByVal MfgDate As Date,  _
                    ByVal ExpDate As Date,  _
                    ByVal Str1 As String,  _
                    ByVal Str2 As String,  _
                    ByVal Total_Qty As Double,  _
                    ByVal Weight As Double,  _
                    ByVal Volume As Double,  _
                    ByVal Sku_Package As String,  _
                    ByVal Sku_Id As String,  _
                    ByVal PallNo As String,  _
                    ByVal Pallet_Qty As Double,  _
                    ByVal Tag_No As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal Customer_Index As String,  _
                    ByVal Lot_No As String,  _
                    ByVal From_LocationBalance_Index As String,  _
                    ByVal To_LocationBalance_Index As String,  _
                    ByVal PalletType_Index As String,  _
                    ByVal New_ItemStatus_Des As String) As VIEW_RPT_TranferCodeDetailRow
            Dim rowVIEW_RPT_TranferCodeDetailRow As VIEW_RPT_TranferCodeDetailRow = CType(Me.NewRow,VIEW_RPT_TranferCodeDetailRow)
            Dim columnValuesArray() As Object = New Object() {TransferCode_Index, Sku_Index, Sku_Des, New_Sku_Index, New_Sku_Id, New_Product_Name_th, Old_ItemStatus_Index, Description, TransferCodeLocation_Index, ItemStatus_Index, New_ItemStatus_Index, From_Location, From_Location_Index, To_Location_Index, To_Location, Brand_Des, Brand_Index, Model_Index, Model_Des, AssetLocationBalance_Index, Asset_No, Serial_No, Order_Index, OrderItem_Index, Plot, MfgDate, ExpDate, Str1, Str2, Total_Qty, Weight, Volume, Sku_Package, Sku_Id, PallNo, Pallet_Qty, Tag_No, Customer_Name, Customer_Index, Lot_No, From_LocationBalance_Index, To_LocationBalance_Index, PalletType_Index, New_ItemStatus_Des}
            rowVIEW_RPT_TranferCodeDetailRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_RPT_TranferCodeDetailRow)
            Return rowVIEW_RPT_TranferCodeDetailRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_RPT_TranferCodeDetailDataTable = CType(MyBase.Clone,VIEW_RPT_TranferCodeDetailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_RPT_TranferCodeDetailDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTransferCode_Index = MyBase.Columns("TransferCode_Index")
            Me.columnSku_Index = MyBase.Columns("Sku_Index")
            Me.columnSku_Des = MyBase.Columns("Sku_Des")
            Me.columnNew_Sku_Index = MyBase.Columns("New_Sku_Index")
            Me.columnNew_Sku_Id = MyBase.Columns("New_Sku_Id")
            Me.columnNew_Product_Name_th = MyBase.Columns("New_Product_Name_th")
            Me.columnOld_ItemStatus_Index = MyBase.Columns("Old_ItemStatus_Index")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnTransferCodeLocation_Index = MyBase.Columns("TransferCodeLocation_Index")
            Me.columnItemStatus_Index = MyBase.Columns("ItemStatus_Index")
            Me.columnNew_ItemStatus_Index = MyBase.Columns("New_ItemStatus_Index")
            Me.columnFrom_Location = MyBase.Columns("From_Location")
            Me.columnFrom_Location_Index = MyBase.Columns("From_Location_Index")
            Me.columnTo_Location_Index = MyBase.Columns("To_Location_Index")
            Me.columnTo_Location = MyBase.Columns("To_Location")
            Me.columnBrand_Des = MyBase.Columns("Brand_Des")
            Me.columnBrand_Index = MyBase.Columns("Brand_Index")
            Me.columnModel_Index = MyBase.Columns("Model_Index")
            Me.columnModel_Des = MyBase.Columns("Model_Des")
            Me.columnAssetLocationBalance_Index = MyBase.Columns("AssetLocationBalance_Index")
            Me.columnAsset_No = MyBase.Columns("Asset_No")
            Me.columnSerial_No = MyBase.Columns("Serial_No")
            Me.columnOrder_Index = MyBase.Columns("Order_Index")
            Me.columnOrderItem_Index = MyBase.Columns("OrderItem_Index")
            Me.columnPlot = MyBase.Columns("Plot")
            Me.columnMfgDate = MyBase.Columns("MfgDate")
            Me.columnExpDate = MyBase.Columns("ExpDate")
            Me.columnStr1 = MyBase.Columns("Str1")
            Me.columnStr2 = MyBase.Columns("Str2")
            Me.columnTotal_Qty = MyBase.Columns("Total_Qty")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnVolume = MyBase.Columns("Volume")
            Me.columnSku_Package = MyBase.Columns("Sku_Package")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnPallNo = MyBase.Columns("PallNo")
            Me.columnPallet_Qty = MyBase.Columns("Pallet_Qty")
            Me.columnTag_No = MyBase.Columns("Tag_No")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnLot_No = MyBase.Columns("Lot_No")
            Me.columnFrom_LocationBalance_Index = MyBase.Columns("From_LocationBalance_Index")
            Me.columnTo_LocationBalance_Index = MyBase.Columns("To_LocationBalance_Index")
            Me.columnPalletType_Index = MyBase.Columns("PalletType_Index")
            Me.columnNew_ItemStatus_Des = MyBase.Columns("New_ItemStatus_Des")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTransferCode_Index = New Global.System.Data.DataColumn("TransferCode_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferCode_Index)
            Me.columnSku_Index = New Global.System.Data.DataColumn("Sku_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Index)
            Me.columnSku_Des = New Global.System.Data.DataColumn("Sku_Des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Des)
            Me.columnNew_Sku_Index = New Global.System.Data.DataColumn("New_Sku_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNew_Sku_Index)
            Me.columnNew_Sku_Id = New Global.System.Data.DataColumn("New_Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNew_Sku_Id)
            Me.columnNew_Product_Name_th = New Global.System.Data.DataColumn("New_Product_Name_th", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNew_Product_Name_th)
            Me.columnOld_ItemStatus_Index = New Global.System.Data.DataColumn("Old_ItemStatus_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOld_ItemStatus_Index)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnTransferCodeLocation_Index = New Global.System.Data.DataColumn("TransferCodeLocation_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferCodeLocation_Index)
            Me.columnItemStatus_Index = New Global.System.Data.DataColumn("ItemStatus_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemStatus_Index)
            Me.columnNew_ItemStatus_Index = New Global.System.Data.DataColumn("New_ItemStatus_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNew_ItemStatus_Index)
            Me.columnFrom_Location = New Global.System.Data.DataColumn("From_Location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrom_Location)
            Me.columnFrom_Location_Index = New Global.System.Data.DataColumn("From_Location_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrom_Location_Index)
            Me.columnTo_Location_Index = New Global.System.Data.DataColumn("To_Location_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTo_Location_Index)
            Me.columnTo_Location = New Global.System.Data.DataColumn("To_Location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTo_Location)
            Me.columnBrand_Des = New Global.System.Data.DataColumn("Brand_Des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand_Des)
            Me.columnBrand_Index = New Global.System.Data.DataColumn("Brand_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand_Index)
            Me.columnModel_Index = New Global.System.Data.DataColumn("Model_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModel_Index)
            Me.columnModel_Des = New Global.System.Data.DataColumn("Model_Des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModel_Des)
            Me.columnAssetLocationBalance_Index = New Global.System.Data.DataColumn("AssetLocationBalance_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAssetLocationBalance_Index)
            Me.columnAsset_No = New Global.System.Data.DataColumn("Asset_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAsset_No)
            Me.columnSerial_No = New Global.System.Data.DataColumn("Serial_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerial_No)
            Me.columnOrder_Index = New Global.System.Data.DataColumn("Order_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrder_Index)
            Me.columnOrderItem_Index = New Global.System.Data.DataColumn("OrderItem_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderItem_Index)
            Me.columnPlot = New Global.System.Data.DataColumn("Plot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlot)
            Me.columnMfgDate = New Global.System.Data.DataColumn("MfgDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMfgDate)
            Me.columnExpDate = New Global.System.Data.DataColumn("ExpDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpDate)
            Me.columnStr1 = New Global.System.Data.DataColumn("Str1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr1)
            Me.columnStr2 = New Global.System.Data.DataColumn("Str2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr2)
            Me.columnTotal_Qty = New Global.System.Data.DataColumn("Total_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Qty)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnVolume = New Global.System.Data.DataColumn("Volume", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume)
            Me.columnSku_Package = New Global.System.Data.DataColumn("Sku_Package", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Package)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnPallNo = New Global.System.Data.DataColumn("PallNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPallNo)
            Me.columnPallet_Qty = New Global.System.Data.DataColumn("Pallet_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPallet_Qty)
            Me.columnTag_No = New Global.System.Data.DataColumn("Tag_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTag_No)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnLot_No = New Global.System.Data.DataColumn("Lot_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLot_No)
            Me.columnFrom_LocationBalance_Index = New Global.System.Data.DataColumn("From_LocationBalance_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrom_LocationBalance_Index)
            Me.columnTo_LocationBalance_Index = New Global.System.Data.DataColumn("To_LocationBalance_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTo_LocationBalance_Index)
            Me.columnPalletType_Index = New Global.System.Data.DataColumn("PalletType_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPalletType_Index)
            Me.columnNew_ItemStatus_Des = New Global.System.Data.DataColumn("New_ItemStatus_Des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNew_ItemStatus_Des)
            Me.columnTransferCode_Index.AllowDBNull = false
            Me.columnTransferCode_Index.MaxLength = 13
            Me.columnSku_Index.MaxLength = 13
            Me.columnSku_Des.MaxLength = 255
            Me.columnNew_Sku_Index.MaxLength = 13
            Me.columnNew_Sku_Id.MaxLength = 50
            Me.columnNew_Product_Name_th.MaxLength = 255
            Me.columnOld_ItemStatus_Index.MaxLength = 13
            Me.columnDescription.MaxLength = 100
            Me.columnTransferCodeLocation_Index.AllowDBNull = false
            Me.columnTransferCodeLocation_Index.MaxLength = 13
            Me.columnItemStatus_Index.AllowDBNull = false
            Me.columnItemStatus_Index.MaxLength = 13
            Me.columnNew_ItemStatus_Index.MaxLength = 13
            Me.columnFrom_Location.MaxLength = 50
            Me.columnFrom_Location_Index.MaxLength = 13
            Me.columnTo_Location_Index.MaxLength = 13
            Me.columnTo_Location.MaxLength = 50
            Me.columnBrand_Des.MaxLength = 100
            Me.columnBrand_Index.MaxLength = 13
            Me.columnModel_Index.MaxLength = 13
            Me.columnModel_Des.MaxLength = 100
            Me.columnAssetLocationBalance_Index.MaxLength = 13
            Me.columnAsset_No.MaxLength = 50
            Me.columnSerial_No.MaxLength = 50
            Me.columnOrder_Index.MaxLength = 13
            Me.columnOrderItem_Index.MaxLength = 13
            Me.columnPlot.MaxLength = 50
            Me.columnStr1.MaxLength = 100
            Me.columnStr2.MaxLength = 100
            Me.columnSku_Package.MaxLength = 100
            Me.columnSku_Id.MaxLength = 50
            Me.columnPallNo.MaxLength = 100
            Me.columnTag_No.MaxLength = 50
            Me.columnCustomer_Name.MaxLength = 100
            Me.columnCustomer_Index.AllowDBNull = false
            Me.columnCustomer_Index.MaxLength = 13
            Me.columnLot_No.MaxLength = 50
            Me.columnFrom_LocationBalance_Index.MaxLength = 13
            Me.columnTo_LocationBalance_Index.MaxLength = 13
            Me.columnPalletType_Index.MaxLength = 13
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_RPT_TranferCodeDetailRow() As VIEW_RPT_TranferCodeDetailRow
            Return CType(Me.NewRow,VIEW_RPT_TranferCodeDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_RPT_TranferCodeDetailRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_RPT_TranferCodeDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_RPT_TranferCodeDetailRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_TranferCodeDetailRowChanged(Me, New VIEW_RPT_TranferCodeDetailRowChangeEvent(CType(e.Row,VIEW_RPT_TranferCodeDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_RPT_TranferCodeDetailRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_TranferCodeDetailRowChanging(Me, New VIEW_RPT_TranferCodeDetailRowChangeEvent(CType(e.Row,VIEW_RPT_TranferCodeDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_RPT_TranferCodeDetailRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_TranferCodeDetailRowDeleted(Me, New VIEW_RPT_TranferCodeDetailRowChangeEvent(CType(e.Row,VIEW_RPT_TranferCodeDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_RPT_TranferCodeDetailRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_TranferCodeDetailRowDeleting(Me, New VIEW_RPT_TranferCodeDetailRowChangeEvent(CType(e.Row,VIEW_RPT_TranferCodeDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_RPT_TranferCodeDetailRow(ByVal row As VIEW_RPT_TranferCodeDetailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAssetTranferCode = New dsAssetTranferCode
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_RPT_TranferCodeDetailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tb_TransferCodeRow
        Inherits Global.System.Data.DataRow
        
        Private tabletb_TransferCode As tb_TransferCodeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletb_TransferCode = CType(Me.Table,tb_TransferCodeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferCode_Index() As String
            Get
                Return CType(Me(Me.tabletb_TransferCode.TransferCode_IndexColumn),String)
            End Get
            Set
                Me(Me.tabletb_TransferCode.TransferCode_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferCode_No() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.TransferCode_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferCode_No' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.TransferCode_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferCode_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.TransferCode_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferCode_Date' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.TransferCode_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocumentType_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.DocumentType_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentType_Index' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.DocumentType_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Customer_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Index' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Times() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.TimesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Times' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.TimesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Ref_No1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No1' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Ref_No1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Ref_No2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No2' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Ref_No2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Comment() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.CommentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comment' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.CommentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Str1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str1' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Str1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Str2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str2' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Str2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str3() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Str3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str3' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Str3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str4() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Str4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str4' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Str4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str5() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Str5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str5' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Str5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo1() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Flo1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo1' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Flo1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo2() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Flo2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo2' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Flo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo3() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Flo3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo3' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Flo3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo4() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Flo4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo4' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Flo4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo5() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.Flo5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo5' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.Flo5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.StatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_by() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.add_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_by' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.add_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.add_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_date' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.add_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_branch() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.add_branchColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_branch' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.add_branchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property update_by() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.update_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'update_by' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.update_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property update_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.update_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'update_date' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.update_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property update_branch() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletb_TransferCode.update_branchColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'update_branch' in table 'tb_TransferCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_TransferCode.update_branchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransferCode_NoNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.TransferCode_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransferCode_NoNull()
            Me(Me.tabletb_TransferCode.TransferCode_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransferCode_DateNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.TransferCode_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransferCode_DateNull()
            Me(Me.tabletb_TransferCode.TransferCode_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocumentType_IndexNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.DocumentType_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocumentType_IndexNull()
            Me(Me.tabletb_TransferCode.DocumentType_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IndexNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Customer_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IndexNull()
            Me(Me.tabletb_TransferCode.Customer_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTimesNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.TimesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTimesNull()
            Me(Me.tabletb_TransferCode.TimesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No1Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Ref_No1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No1Null()
            Me(Me.tabletb_TransferCode.Ref_No1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No2Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Ref_No2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No2Null()
            Me(Me.tabletb_TransferCode.Ref_No2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCommentNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.CommentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCommentNull()
            Me(Me.tabletb_TransferCode.CommentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr1Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Str1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr1Null()
            Me(Me.tabletb_TransferCode.Str1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr2Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Str2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr2Null()
            Me(Me.tabletb_TransferCode.Str2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr3Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Str3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr3Null()
            Me(Me.tabletb_TransferCode.Str3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr4Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Str4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr4Null()
            Me(Me.tabletb_TransferCode.Str4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr5Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Str5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr5Null()
            Me(Me.tabletb_TransferCode.Str5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo1Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Flo1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo1Null()
            Me(Me.tabletb_TransferCode.Flo1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo2Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Flo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo2Null()
            Me(Me.tabletb_TransferCode.Flo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo3Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Flo3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo3Null()
            Me(Me.tabletb_TransferCode.Flo3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo4Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Flo4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo4Null()
            Me(Me.tabletb_TransferCode.Flo4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo5Null() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.Flo5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo5Null()
            Me(Me.tabletb_TransferCode.Flo5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNull()
            Me(Me.tabletb_TransferCode.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_byNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.add_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_byNull()
            Me(Me.tabletb_TransferCode.add_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_dateNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.add_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_dateNull()
            Me(Me.tabletb_TransferCode.add_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_branchNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.add_branchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_branchNull()
            Me(Me.tabletb_TransferCode.add_branchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupdate_byNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.update_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupdate_byNull()
            Me(Me.tabletb_TransferCode.update_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupdate_dateNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.update_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupdate_dateNull()
            Me(Me.tabletb_TransferCode.update_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupdate_branchNull() As Boolean
            Return Me.IsNull(Me.tabletb_TransferCode.update_branchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupdate_branchNull()
            Me(Me.tabletb_TransferCode.update_branchColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_RPT_TranferCodeDetailRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_RPT_TranferCodeDetail As VIEW_RPT_TranferCodeDetailDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_RPT_TranferCodeDetail = CType(Me.Table,VIEW_RPT_TranferCodeDetailDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferCode_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.TransferCode_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.TransferCode_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Index' in table 'VIEW_RPT_TranferCodeDetail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Des() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_DesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Des' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_DesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property New_Sku_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.New_Sku_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'New_Sku_Index' in table 'VIEW_RPT_TranferCodeDetail' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.New_Sku_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property New_Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.New_Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'New_Sku_Id' in table 'VIEW_RPT_TranferCodeDetail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.New_Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property New_Product_Name_th() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.New_Product_Name_thColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'New_Product_Name_th' in table 'VIEW_RPT_TranferCodeDetail' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.New_Product_Name_thColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Old_ItemStatus_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Old_ItemStatus_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Old_ItemStatus_Index' in table 'VIEW_RPT_TranferCodeDetail'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Old_ItemStatus_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'VIEW_RPT_TranferCodeDetail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferCodeLocation_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.TransferCodeLocation_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.TransferCodeLocation_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemStatus_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.ItemStatus_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.ItemStatus_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property New_ItemStatus_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.New_ItemStatus_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'New_ItemStatus_Index' in table 'VIEW_RPT_TranferCodeDetail'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.New_ItemStatus_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property From_Location() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.From_LocationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'From_Location' in table 'VIEW_RPT_TranferCodeDetail' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.From_LocationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property From_Location_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.From_Location_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'From_Location_Index' in table 'VIEW_RPT_TranferCodeDetail' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.From_Location_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property To_Location_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.To_Location_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'To_Location_Index' in table 'VIEW_RPT_TranferCodeDetail' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.To_Location_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property To_Location() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.To_LocationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'To_Location' in table 'VIEW_RPT_TranferCodeDetail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.To_LocationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Brand_Des() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Brand_DesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand_Des' in table 'VIEW_RPT_TranferCodeDetail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Brand_DesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Brand_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Brand_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand_Index' in table 'VIEW_RPT_TranferCodeDetail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Brand_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Model_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Model_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Model_Index' in table 'VIEW_RPT_TranferCodeDetail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Model_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Model_Des() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Model_DesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Model_Des' in table 'VIEW_RPT_TranferCodeDetail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Model_DesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AssetLocationBalance_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.AssetLocationBalance_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AssetLocationBalance_Index' in table 'VIEW_RPT_TranferCodeD"& _ 
                            "etail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.AssetLocationBalance_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Asset_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Asset_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Asset_No' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Asset_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Serial_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Serial_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Serial_No' in table 'VIEW_RPT_TranferCodeDetail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Serial_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Order_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Order_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Order_Index' in table 'VIEW_RPT_TranferCodeDetail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Order_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OrderItem_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.OrderItem_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderItem_Index' in table 'VIEW_RPT_TranferCodeDetail' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.OrderItem_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Plot() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.PlotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Plot' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.PlotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MfgDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.MfgDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MfgDate' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.MfgDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExpDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.ExpDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpDate' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.ExpDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Str1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str1' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Str1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Str2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str2' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Str2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Total_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Qty' in table 'VIEW_RPT_TranferCodeDetail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Total_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.WeightColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.VolumeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volume' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Package() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_PackageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Package' in table 'VIEW_RPT_TranferCodeDetail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_PackageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PallNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.PallNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PallNo' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.PallNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pallet_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Pallet_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pallet_Qty' in table 'VIEW_RPT_TranferCodeDetail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Pallet_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tag_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Tag_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tag_No' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Tag_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'VIEW_RPT_TranferCodeDetail' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Customer_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Lot_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.Lot_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Lot_No' in table 'VIEW_RPT_TranferCodeDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.Lot_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property From_LocationBalance_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.From_LocationBalance_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'From_LocationBalance_Index' in table 'VIEW_RPT_TranferCodeD"& _ 
                            "etail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.From_LocationBalance_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property To_LocationBalance_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.To_LocationBalance_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'To_LocationBalance_Index' in table 'VIEW_RPT_TranferCodeDet"& _ 
                            "ail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.To_LocationBalance_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PalletType_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.PalletType_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType_Index' in table 'VIEW_RPT_TranferCodeDetail' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.PalletType_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property New_ItemStatus_Des() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_TranferCodeDetail.New_ItemStatus_DesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'New_ItemStatus_Des' in table 'VIEW_RPT_TranferCodeDetail' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_TranferCodeDetail.New_ItemStatus_DesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Sku_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_DesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Sku_DesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_DesNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_DesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNew_Sku_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.New_Sku_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNew_Sku_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.New_Sku_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNew_Sku_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.New_Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNew_Sku_IdNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.New_Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNew_Product_Name_thNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.New_Product_Name_thColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNew_Product_Name_thNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.New_Product_Name_thColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOld_ItemStatus_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Old_ItemStatus_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOld_ItemStatus_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Old_ItemStatus_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNew_ItemStatus_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.New_ItemStatus_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNew_ItemStatus_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.New_ItemStatus_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFrom_LocationNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.From_LocationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFrom_LocationNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.From_LocationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFrom_Location_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.From_Location_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFrom_Location_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.From_Location_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTo_Location_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.To_Location_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTo_Location_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.To_Location_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTo_LocationNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.To_LocationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTo_LocationNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.To_LocationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBrand_DesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Brand_DesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBrand_DesNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Brand_DesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBrand_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Brand_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBrand_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Brand_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsModel_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Model_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetModel_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Model_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsModel_DesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Model_DesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetModel_DesNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Model_DesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAssetLocationBalance_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.AssetLocationBalance_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAssetLocationBalance_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.AssetLocationBalance_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAsset_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Asset_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAsset_NoNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Asset_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSerial_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Serial_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSerial_NoNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Serial_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOrder_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Order_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOrder_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Order_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOrderItem_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.OrderItem_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOrderItem_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.OrderItem_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPlotNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.PlotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPlotNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.PlotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMfgDateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.MfgDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMfgDateNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.MfgDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpDateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.ExpDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpDateNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.ExpDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Str1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr1Null()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Str1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr2Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Str2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr2Null()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Str2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Total_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_QtyNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Total_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeightNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolumeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolumeNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_PackageNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Sku_PackageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_PackageNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_PackageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPallNoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.PallNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPallNoNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.PallNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPallet_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Pallet_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPallet_QtyNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Pallet_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTag_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Tag_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTag_NoNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Tag_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLot_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.Lot_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLot_NoNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.Lot_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFrom_LocationBalance_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.From_LocationBalance_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFrom_LocationBalance_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.From_LocationBalance_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTo_LocationBalance_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.To_LocationBalance_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTo_LocationBalance_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.To_LocationBalance_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPalletType_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.PalletType_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPalletType_IndexNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.PalletType_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNew_ItemStatus_DesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_TranferCodeDetail.New_ItemStatus_DesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNew_ItemStatus_DesNull()
            Me(Me.tableVIEW_RPT_TranferCodeDetail.New_ItemStatus_DesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tb_TransferCodeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tb_TransferCodeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tb_TransferCodeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tb_TransferCodeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_RPT_TranferCodeDetailRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_RPT_TranferCodeDetailRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_RPT_TranferCodeDetailRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_RPT_TranferCodeDetailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
