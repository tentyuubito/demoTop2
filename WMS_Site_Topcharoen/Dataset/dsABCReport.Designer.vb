'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsABCReport"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsABCReport
    Inherits Global.System.Data.DataSet
    
    Private tableVIEW_RPT_ABC_Value As VIEW_RPT_ABC_ValueDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VIEW_RPT_ABC_Value")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_ABC_ValueDataTable(ds.Tables("VIEW_RPT_ABC_Value")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_RPT_ABC_Value() As VIEW_RPT_ABC_ValueDataTable
        Get
            Return Me.tableVIEW_RPT_ABC_Value
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsABCReport = CType(MyBase.Clone,dsABCReport)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("VIEW_RPT_ABC_Value")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_ABC_ValueDataTable(ds.Tables("VIEW_RPT_ABC_Value")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVIEW_RPT_ABC_Value = CType(MyBase.Tables("VIEW_RPT_ABC_Value"),VIEW_RPT_ABC_ValueDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_RPT_ABC_Value) Is Nothing) Then
                Me.tableVIEW_RPT_ABC_Value.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsABCReport"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsABCReport.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVIEW_RPT_ABC_Value = New VIEW_RPT_ABC_ValueDataTable
        MyBase.Tables.Add(Me.tableVIEW_RPT_ABC_Value)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_RPT_ABC_Value() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsABCReport = New dsABCReport
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub VIEW_RPT_ABC_ValueRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_RPT_ABC_ValueRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_RPT_ABC_ValueDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSku_Index As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnSeq As Global.System.Data.DataColumn
        
        Private columnSum_Qty As Global.System.Data.DataColumn
        
        Private columnSum_Value0 As Global.System.Data.DataColumn
        
        Private columnSum_Value1 As Global.System.Data.DataColumn
        
        Private columnSum_Value2 As Global.System.Data.DataColumn
        
        Private columnSum_Value3 As Global.System.Data.DataColumn
        
        Private columnSKU_Name_th As Global.System.Data.DataColumn
        
        Private columnSKU_Name_en As Global.System.Data.DataColumn
        
        Private columnAggr_Value As Global.System.Data.DataColumn
        
        Private columnAggr_Value_Percent As Global.System.Data.DataColumn
        
        Private columnCountSKU_Percent As Global.System.Data.DataColumn
        
        Private columnSession_Id As Global.System.Data.DataColumn
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnCustomer_Id As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnsum_aggr_value As Global.System.Data.DataColumn
        
        Private columnsum_sum_qty As Global.System.Data.DataColumn
        
        Private columncount_sku As Global.System.Data.DataColumn
        
        Private columnPackage_Sku As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_RPT_ABC_Value"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_Value0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_Value0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_Value1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_Value1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_Value2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_Value2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_Value3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_Value3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SKU_Name_thColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU_Name_th
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SKU_Name_enColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU_Name_en
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Aggr_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAggr_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Aggr_Value_PercentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAggr_Value_Percent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CountSKU_PercentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountSKU_Percent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Session_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSession_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sum_aggr_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsum_aggr_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sum_sum_qtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsum_sum_qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property count_skuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncount_sku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Package_SkuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Sku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_RPT_ABC_ValueRow
            Get
                Return CType(Me.Rows(index),VIEW_RPT_ABC_ValueRow)
            End Get
        End Property
        
        Public Event VIEW_RPT_ABC_ValueRowChanging As VIEW_RPT_ABC_ValueRowChangeEventHandler
        
        Public Event VIEW_RPT_ABC_ValueRowChanged As VIEW_RPT_ABC_ValueRowChangeEventHandler
        
        Public Event VIEW_RPT_ABC_ValueRowDeleting As VIEW_RPT_ABC_ValueRowChangeEventHandler
        
        Public Event VIEW_RPT_ABC_ValueRowDeleted As VIEW_RPT_ABC_ValueRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_RPT_ABC_ValueRow(ByVal row As VIEW_RPT_ABC_ValueRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_RPT_ABC_ValueRow( _
                    ByVal Sku_Index As String,  _
                    ByVal Sku_Id As String,  _
                    ByVal Seq As Integer,  _
                    ByVal Sum_Qty As Double,  _
                    ByVal Sum_Value0 As Double,  _
                    ByVal Sum_Value1 As Double,  _
                    ByVal Sum_Value2 As Double,  _
                    ByVal Sum_Value3 As Double,  _
                    ByVal SKU_Name_th As String,  _
                    ByVal SKU_Name_en As String,  _
                    ByVal Aggr_Value As Double,  _
                    ByVal Aggr_Value_Percent As Double,  _
                    ByVal CountSKU_Percent As Double,  _
                    ByVal Session_Id As String,  _
                    ByVal Code As String,  _
                    ByVal Customer_Index As String,  _
                    ByVal Customer_Id As String,  _
                    ByVal Title As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal sum_aggr_value As String,  _
                    ByVal sum_sum_qty As String,  _
                    ByVal count_sku As String,  _
                    ByVal Package_Sku As String) As VIEW_RPT_ABC_ValueRow
            Dim rowVIEW_RPT_ABC_ValueRow As VIEW_RPT_ABC_ValueRow = CType(Me.NewRow,VIEW_RPT_ABC_ValueRow)
            Dim columnValuesArray() As Object = New Object() {Sku_Index, Sku_Id, Seq, Sum_Qty, Sum_Value0, Sum_Value1, Sum_Value2, Sum_Value3, SKU_Name_th, SKU_Name_en, Aggr_Value, Aggr_Value_Percent, CountSKU_Percent, Session_Id, Code, Customer_Index, Customer_Id, Title, Customer_Name, sum_aggr_value, sum_sum_qty, count_sku, Package_Sku}
            rowVIEW_RPT_ABC_ValueRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_RPT_ABC_ValueRow)
            Return rowVIEW_RPT_ABC_ValueRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySku_Index(ByVal Sku_Index As String) As VIEW_RPT_ABC_ValueRow
            Return CType(Me.Rows.Find(New Object() {Sku_Index}),VIEW_RPT_ABC_ValueRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_RPT_ABC_ValueDataTable = CType(MyBase.Clone,VIEW_RPT_ABC_ValueDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_RPT_ABC_ValueDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSku_Index = MyBase.Columns("Sku_Index")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnSeq = MyBase.Columns("Seq")
            Me.columnSum_Qty = MyBase.Columns("Sum_Qty")
            Me.columnSum_Value0 = MyBase.Columns("Sum_Value0")
            Me.columnSum_Value1 = MyBase.Columns("Sum_Value1")
            Me.columnSum_Value2 = MyBase.Columns("Sum_Value2")
            Me.columnSum_Value3 = MyBase.Columns("Sum_Value3")
            Me.columnSKU_Name_th = MyBase.Columns("SKU_Name_th")
            Me.columnSKU_Name_en = MyBase.Columns("SKU_Name_en")
            Me.columnAggr_Value = MyBase.Columns("Aggr_Value")
            Me.columnAggr_Value_Percent = MyBase.Columns("Aggr_Value_Percent")
            Me.columnCountSKU_Percent = MyBase.Columns("CountSKU_Percent")
            Me.columnSession_Id = MyBase.Columns("Session_Id")
            Me.columnCode = MyBase.Columns("Code")
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnCustomer_Id = MyBase.Columns("Customer_Id")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnsum_aggr_value = MyBase.Columns("sum_aggr_value")
            Me.columnsum_sum_qty = MyBase.Columns("sum_sum_qty")
            Me.columncount_sku = MyBase.Columns("count_sku")
            Me.columnPackage_Sku = MyBase.Columns("Package_Sku")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSku_Index = New Global.System.Data.DataColumn("Sku_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Index)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnSeq = New Global.System.Data.DataColumn("Seq", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeq)
            Me.columnSum_Qty = New Global.System.Data.DataColumn("Sum_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_Qty)
            Me.columnSum_Value0 = New Global.System.Data.DataColumn("Sum_Value0", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_Value0)
            Me.columnSum_Value1 = New Global.System.Data.DataColumn("Sum_Value1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_Value1)
            Me.columnSum_Value2 = New Global.System.Data.DataColumn("Sum_Value2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_Value2)
            Me.columnSum_Value3 = New Global.System.Data.DataColumn("Sum_Value3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_Value3)
            Me.columnSKU_Name_th = New Global.System.Data.DataColumn("SKU_Name_th", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU_Name_th)
            Me.columnSKU_Name_en = New Global.System.Data.DataColumn("SKU_Name_en", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU_Name_en)
            Me.columnAggr_Value = New Global.System.Data.DataColumn("Aggr_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAggr_Value)
            Me.columnAggr_Value_Percent = New Global.System.Data.DataColumn("Aggr_Value_Percent", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAggr_Value_Percent)
            Me.columnCountSKU_Percent = New Global.System.Data.DataColumn("CountSKU_Percent", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountSKU_Percent)
            Me.columnSession_Id = New Global.System.Data.DataColumn("Session_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSession_Id)
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnCustomer_Id = New Global.System.Data.DataColumn("Customer_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Id)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnsum_aggr_value = New Global.System.Data.DataColumn("sum_aggr_value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsum_aggr_value)
            Me.columnsum_sum_qty = New Global.System.Data.DataColumn("sum_sum_qty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsum_sum_qty)
            Me.columncount_sku = New Global.System.Data.DataColumn("count_sku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncount_sku)
            Me.columnPackage_Sku = New Global.System.Data.DataColumn("Package_Sku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Sku)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSku_Index}, true))
            Me.columnSku_Index.AllowDBNull = false
            Me.columnSku_Index.Unique = true
            Me.columnSku_Index.MaxLength = 13
            Me.columnSku_Id.AllowDBNull = false
            Me.columnSku_Id.MaxLength = 50
            Me.columnSKU_Name_th.MaxLength = 100
            Me.columnSKU_Name_en.MaxLength = 100
            Me.columnSession_Id.MaxLength = 36
            Me.columnCode.MaxLength = 2
            Me.columnCustomer_Index.MaxLength = 50
            Me.columnCustomer_Id.AllowDBNull = false
            Me.columnCustomer_Id.MaxLength = 13
            Me.columnTitle.MaxLength = 50
            Me.columnCustomer_Name.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_RPT_ABC_ValueRow() As VIEW_RPT_ABC_ValueRow
            Return CType(Me.NewRow,VIEW_RPT_ABC_ValueRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_RPT_ABC_ValueRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_RPT_ABC_ValueRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_RPT_ABC_ValueRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_ABC_ValueRowChanged(Me, New VIEW_RPT_ABC_ValueRowChangeEvent(CType(e.Row,VIEW_RPT_ABC_ValueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_RPT_ABC_ValueRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_ABC_ValueRowChanging(Me, New VIEW_RPT_ABC_ValueRowChangeEvent(CType(e.Row,VIEW_RPT_ABC_ValueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_RPT_ABC_ValueRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_ABC_ValueRowDeleted(Me, New VIEW_RPT_ABC_ValueRowChangeEvent(CType(e.Row,VIEW_RPT_ABC_ValueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_RPT_ABC_ValueRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_ABC_ValueRowDeleting(Me, New VIEW_RPT_ABC_ValueRowChangeEvent(CType(e.Row,VIEW_RPT_ABC_ValueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_RPT_ABC_ValueRow(ByVal row As VIEW_RPT_ABC_ValueRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsABCReport = New dsABCReport
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_RPT_ABC_ValueDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_RPT_ABC_ValueRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_RPT_ABC_Value As VIEW_RPT_ABC_ValueDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_RPT_ABC_Value = CType(Me.Table,VIEW_RPT_ABC_ValueDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Sku_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Sku_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Sku_IdColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Seq() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.SeqColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Seq' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.SeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Sum_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_Qty' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Sum_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_Value0() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value0Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_Value0' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_Value1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_Value1' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_Value2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_Value2' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_Value3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_Value3' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SKU_Name_th() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.SKU_Name_thColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SKU_Name_th' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.SKU_Name_thColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SKU_Name_en() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.SKU_Name_enColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SKU_Name_en' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.SKU_Name_enColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Aggr_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Aggr_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Aggr_Value' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Aggr_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Aggr_Value_Percent() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Aggr_Value_PercentColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Aggr_Value_Percent' in table 'VIEW_RPT_ABC_Value' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Aggr_Value_PercentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CountSKU_Percent() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.CountSKU_PercentColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CountSKU_Percent' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.CountSKU_PercentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Session_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Session_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Session_Id' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Session_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Customer_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Index' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Id() As String
            Get
                Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Customer_IdColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Customer_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Title' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sum_aggr_value() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.sum_aggr_valueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sum_aggr_value' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.sum_aggr_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sum_sum_qty() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.sum_sum_qtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sum_sum_qty' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.sum_sum_qtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property count_sku() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.count_skuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'count_sku' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.count_skuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Package_Sku() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_ABC_Value.Package_SkuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package_Sku' in table 'VIEW_RPT_ABC_Value' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_ABC_Value.Package_SkuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSeqNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.SeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSeqNull()
            Me(Me.tableVIEW_RPT_ABC_Value.SeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Sum_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_QtyNull()
            Me(Me.tableVIEW_RPT_ABC_Value.Sum_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_Value0Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Sum_Value0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_Value0Null()
            Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_Value1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Sum_Value1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_Value1Null()
            Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_Value2Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Sum_Value2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_Value2Null()
            Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_Value3Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Sum_Value3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_Value3Null()
            Me(Me.tableVIEW_RPT_ABC_Value.Sum_Value3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSKU_Name_thNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.SKU_Name_thColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSKU_Name_thNull()
            Me(Me.tableVIEW_RPT_ABC_Value.SKU_Name_thColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSKU_Name_enNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.SKU_Name_enColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSKU_Name_enNull()
            Me(Me.tableVIEW_RPT_ABC_Value.SKU_Name_enColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAggr_ValueNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Aggr_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAggr_ValueNull()
            Me(Me.tableVIEW_RPT_ABC_Value.Aggr_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAggr_Value_PercentNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Aggr_Value_PercentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAggr_Value_PercentNull()
            Me(Me.tableVIEW_RPT_ABC_Value.Aggr_Value_PercentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCountSKU_PercentNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.CountSKU_PercentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCountSKU_PercentNull()
            Me(Me.tableVIEW_RPT_ABC_Value.CountSKU_PercentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSession_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Session_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSession_IdNull()
            Me(Me.tableVIEW_RPT_ABC_Value.Session_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodeNull()
            Me(Me.tableVIEW_RPT_ABC_Value.CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Customer_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IndexNull()
            Me(Me.tableVIEW_RPT_ABC_Value.Customer_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTitleNull()
            Me(Me.tableVIEW_RPT_ABC_Value.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableVIEW_RPT_ABC_Value.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issum_aggr_valueNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.sum_aggr_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsum_aggr_valueNull()
            Me(Me.tableVIEW_RPT_ABC_Value.sum_aggr_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issum_sum_qtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.sum_sum_qtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsum_sum_qtyNull()
            Me(Me.tableVIEW_RPT_ABC_Value.sum_sum_qtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscount_skuNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.count_skuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcount_skuNull()
            Me(Me.tableVIEW_RPT_ABC_Value.count_skuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackage_SkuNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_ABC_Value.Package_SkuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackage_SkuNull()
            Me(Me.tableVIEW_RPT_ABC_Value.Package_SkuColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_RPT_ABC_ValueRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_RPT_ABC_ValueRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_RPT_ABC_ValueRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_RPT_ABC_ValueRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
