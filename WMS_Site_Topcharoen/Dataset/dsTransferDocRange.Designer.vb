'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsTransferDocRange"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTransferDocRange
    Inherits Global.System.Data.DataSet
    
    Private tableview_rpt_TransferDocRange As view_rpt_TransferDocRangeDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("view_rpt_TransferDocRange")) Is Nothing) Then
                MyBase.Tables.Add(New view_rpt_TransferDocRangeDataTable(ds.Tables("view_rpt_TransferDocRange")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_rpt_TransferDocRange() As view_rpt_TransferDocRangeDataTable
        Get
            Return Me.tableview_rpt_TransferDocRange
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsTransferDocRange = CType(MyBase.Clone,dsTransferDocRange)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("view_rpt_TransferDocRange")) Is Nothing) Then
                MyBase.Tables.Add(New view_rpt_TransferDocRangeDataTable(ds.Tables("view_rpt_TransferDocRange")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableview_rpt_TransferDocRange = CType(MyBase.Tables("view_rpt_TransferDocRange"),view_rpt_TransferDocRangeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableview_rpt_TransferDocRange) Is Nothing) Then
                Me.tableview_rpt_TransferDocRange.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTransferDocRange"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTransferDocRange.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableview_rpt_TransferDocRange = New view_rpt_TransferDocRangeDataTable
        MyBase.Tables.Add(Me.tableview_rpt_TransferDocRange)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeview_rpt_TransferDocRange() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTransferDocRange = New dsTransferDocRange
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub view_rpt_TransferDocRangeRowChangeEventHandler(ByVal sender As Object, ByVal e As view_rpt_TransferDocRangeRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class view_rpt_TransferDocRangeDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTransportRegion_Id As Global.System.Data.DataColumn
        
        Private columnTransportRegion_Desc As Global.System.Data.DataColumn
        
        Private columnRoute_Id As Global.System.Data.DataColumn
        
        Private columnRoute_Desc As Global.System.Data.DataColumn
        
        Private columnSubRoute_Id As Global.System.Data.DataColumn
        
        Private columnSubRoute_Desc As Global.System.Data.DataColumn
        
        Private columnBarcode_BAG As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        Private columnDocument_No As Global.System.Data.DataColumn
        
        Private columnDocument_Date As Global.System.Data.DataColumn
        
        Private columnDocument_Type As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnSeq As Global.System.Data.DataColumn
        
        Private columnProductType_Id As Global.System.Data.DataColumn
        
        Private columnProductType_Desc As Global.System.Data.DataColumn
        
        Private columnTotal_Qty As Global.System.Data.DataColumn
        
        Private columnPackage_Desc As Global.System.Data.DataColumn
        
        Private columnStr1 As Global.System.Data.DataColumn
        
        Private columnStr2 As Global.System.Data.DataColumn
        
        Private columnStr3 As Global.System.Data.DataColumn
        
        Private columnStr4 As Global.System.Data.DataColumn
        
        Private columnStr5 As Global.System.Data.DataColumn
        
        Private columnStr6 As Global.System.Data.DataColumn
        
        Private columnStr7 As Global.System.Data.DataColumn
        
        Private columnStr8 As Global.System.Data.DataColumn
        
        Private columnStr9 As Global.System.Data.DataColumn
        
        Private columnStr10 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "view_rpt_TransferDocRange"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransportRegion_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransportRegion_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransportRegion_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransportRegion_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Route_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoute_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Route_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoute_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubRoute_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubRoute_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubRoute_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubRoute_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Barcode_BAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcode_BAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Document_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Document_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Document_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductType_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductType_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductType_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductType_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Package_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_rpt_TransferDocRangeRow
            Get
                Return CType(Me.Rows(index),view_rpt_TransferDocRangeRow)
            End Get
        End Property
        
        Public Event view_rpt_TransferDocRangeRowChanging As view_rpt_TransferDocRangeRowChangeEventHandler
        
        Public Event view_rpt_TransferDocRangeRowChanged As view_rpt_TransferDocRangeRowChangeEventHandler
        
        Public Event view_rpt_TransferDocRangeRowDeleting As view_rpt_TransferDocRangeRowChangeEventHandler
        
        Public Event view_rpt_TransferDocRangeRowDeleted As view_rpt_TransferDocRangeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addview_rpt_TransferDocRangeRow(ByVal row As view_rpt_TransferDocRangeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addview_rpt_TransferDocRangeRow( _
                    ByVal TransportRegion_Id As String,  _
                    ByVal TransportRegion_Desc As String,  _
                    ByVal Route_Id As String,  _
                    ByVal Route_Desc As String,  _
                    ByVal SubRoute_Id As String,  _
                    ByVal SubRoute_Desc As String,  _
                    ByVal Barcode_BAG As String,  _
                    ByVal Remark As String,  _
                    ByVal Document_No As String,  _
                    ByVal Document_Date As Date,  _
                    ByVal Document_Type As String,  _
                    ByVal Address As String,  _
                    ByVal Seq As String,  _
                    ByVal ProductType_Id As String,  _
                    ByVal ProductType_Desc As String,  _
                    ByVal Total_Qty As Double,  _
                    ByVal Package_Desc As String,  _
                    ByVal Str1 As String,  _
                    ByVal Str2 As String,  _
                    ByVal Str3 As String,  _
                    ByVal Str4 As String,  _
                    ByVal Str5 As String,  _
                    ByVal Str6 As String,  _
                    ByVal Str7 As String,  _
                    ByVal Str8 As String,  _
                    ByVal Str9 As String,  _
                    ByVal Str10 As String) As view_rpt_TransferDocRangeRow
            Dim rowview_rpt_TransferDocRangeRow As view_rpt_TransferDocRangeRow = CType(Me.NewRow,view_rpt_TransferDocRangeRow)
            Dim columnValuesArray() As Object = New Object() {TransportRegion_Id, TransportRegion_Desc, Route_Id, Route_Desc, SubRoute_Id, SubRoute_Desc, Barcode_BAG, Remark, Document_No, Document_Date, Document_Type, Address, Seq, ProductType_Id, ProductType_Desc, Total_Qty, Package_Desc, Str1, Str2, Str3, Str4, Str5, Str6, Str7, Str8, Str9, Str10}
            rowview_rpt_TransferDocRangeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowview_rpt_TransferDocRangeRow)
            Return rowview_rpt_TransferDocRangeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As view_rpt_TransferDocRangeDataTable = CType(MyBase.Clone,view_rpt_TransferDocRangeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New view_rpt_TransferDocRangeDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTransportRegion_Id = MyBase.Columns("TransportRegion_Id")
            Me.columnTransportRegion_Desc = MyBase.Columns("TransportRegion_Desc")
            Me.columnRoute_Id = MyBase.Columns("Route_Id")
            Me.columnRoute_Desc = MyBase.Columns("Route_Desc")
            Me.columnSubRoute_Id = MyBase.Columns("SubRoute_Id")
            Me.columnSubRoute_Desc = MyBase.Columns("SubRoute_Desc")
            Me.columnBarcode_BAG = MyBase.Columns("Barcode_BAG")
            Me.columnRemark = MyBase.Columns("Remark")
            Me.columnDocument_No = MyBase.Columns("Document_No")
            Me.columnDocument_Date = MyBase.Columns("Document_Date")
            Me.columnDocument_Type = MyBase.Columns("Document_Type")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnSeq = MyBase.Columns("Seq")
            Me.columnProductType_Id = MyBase.Columns("ProductType_Id")
            Me.columnProductType_Desc = MyBase.Columns("ProductType_Desc")
            Me.columnTotal_Qty = MyBase.Columns("Total_Qty")
            Me.columnPackage_Desc = MyBase.Columns("Package_Desc")
            Me.columnStr1 = MyBase.Columns("Str1")
            Me.columnStr2 = MyBase.Columns("Str2")
            Me.columnStr3 = MyBase.Columns("Str3")
            Me.columnStr4 = MyBase.Columns("Str4")
            Me.columnStr5 = MyBase.Columns("Str5")
            Me.columnStr6 = MyBase.Columns("Str6")
            Me.columnStr7 = MyBase.Columns("Str7")
            Me.columnStr8 = MyBase.Columns("Str8")
            Me.columnStr9 = MyBase.Columns("Str9")
            Me.columnStr10 = MyBase.Columns("Str10")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTransportRegion_Id = New Global.System.Data.DataColumn("TransportRegion_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransportRegion_Id)
            Me.columnTransportRegion_Desc = New Global.System.Data.DataColumn("TransportRegion_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransportRegion_Desc)
            Me.columnRoute_Id = New Global.System.Data.DataColumn("Route_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoute_Id)
            Me.columnRoute_Desc = New Global.System.Data.DataColumn("Route_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoute_Desc)
            Me.columnSubRoute_Id = New Global.System.Data.DataColumn("SubRoute_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubRoute_Id)
            Me.columnSubRoute_Desc = New Global.System.Data.DataColumn("SubRoute_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubRoute_Desc)
            Me.columnBarcode_BAG = New Global.System.Data.DataColumn("Barcode_BAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcode_BAG)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.columnDocument_No = New Global.System.Data.DataColumn("Document_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_No)
            Me.columnDocument_Date = New Global.System.Data.DataColumn("Document_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_Date)
            Me.columnDocument_Type = New Global.System.Data.DataColumn("Document_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_Type)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnSeq = New Global.System.Data.DataColumn("Seq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeq)
            Me.columnProductType_Id = New Global.System.Data.DataColumn("ProductType_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductType_Id)
            Me.columnProductType_Desc = New Global.System.Data.DataColumn("ProductType_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductType_Desc)
            Me.columnTotal_Qty = New Global.System.Data.DataColumn("Total_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Qty)
            Me.columnPackage_Desc = New Global.System.Data.DataColumn("Package_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Desc)
            Me.columnStr1 = New Global.System.Data.DataColumn("Str1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr1)
            Me.columnStr2 = New Global.System.Data.DataColumn("Str2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr2)
            Me.columnStr3 = New Global.System.Data.DataColumn("Str3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr3)
            Me.columnStr4 = New Global.System.Data.DataColumn("Str4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr4)
            Me.columnStr5 = New Global.System.Data.DataColumn("Str5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr5)
            Me.columnStr6 = New Global.System.Data.DataColumn("Str6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr6)
            Me.columnStr7 = New Global.System.Data.DataColumn("Str7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr7)
            Me.columnStr8 = New Global.System.Data.DataColumn("Str8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr8)
            Me.columnStr9 = New Global.System.Data.DataColumn("Str9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr9)
            Me.columnStr10 = New Global.System.Data.DataColumn("Str10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr10)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newview_rpt_TransferDocRangeRow() As view_rpt_TransferDocRangeRow
            Return CType(Me.NewRow,view_rpt_TransferDocRangeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New view_rpt_TransferDocRangeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(view_rpt_TransferDocRangeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_rpt_TransferDocRangeRowChangedEvent) Is Nothing) Then
                RaiseEvent view_rpt_TransferDocRangeRowChanged(Me, New view_rpt_TransferDocRangeRowChangeEvent(CType(e.Row,view_rpt_TransferDocRangeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_rpt_TransferDocRangeRowChangingEvent) Is Nothing) Then
                RaiseEvent view_rpt_TransferDocRangeRowChanging(Me, New view_rpt_TransferDocRangeRowChangeEvent(CType(e.Row,view_rpt_TransferDocRangeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_rpt_TransferDocRangeRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_rpt_TransferDocRangeRowDeleted(Me, New view_rpt_TransferDocRangeRowChangeEvent(CType(e.Row,view_rpt_TransferDocRangeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_rpt_TransferDocRangeRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_rpt_TransferDocRangeRowDeleting(Me, New view_rpt_TransferDocRangeRowChangeEvent(CType(e.Row,view_rpt_TransferDocRangeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeview_rpt_TransferDocRangeRow(ByVal row As view_rpt_TransferDocRangeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTransferDocRange = New dsTransferDocRange
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "view_rpt_TransferDocRangeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class view_rpt_TransferDocRangeRow
        Inherits Global.System.Data.DataRow
        
        Private tableview_rpt_TransferDocRange As view_rpt_TransferDocRangeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_rpt_TransferDocRange = CType(Me.Table,view_rpt_TransferDocRangeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransportRegion_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.TransportRegion_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransportRegion_Id' in table 'view_rpt_TransferDocRange' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.TransportRegion_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransportRegion_Desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.TransportRegion_DescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransportRegion_Desc' in table 'view_rpt_TransferDocRange' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.TransportRegion_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Route_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Route_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Route_Id' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Route_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Route_Desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Route_DescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Route_Desc' in table 'view_rpt_TransferDocRange' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Route_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubRoute_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.SubRoute_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubRoute_Id' in table 'view_rpt_TransferDocRange' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.SubRoute_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubRoute_Desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.SubRoute_DescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubRoute_Desc' in table 'view_rpt_TransferDocRange' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.SubRoute_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Barcode_BAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Barcode_BAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode_BAG' in table 'view_rpt_TransferDocRange' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Barcode_BAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remark' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Document_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Document_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_No' in table 'view_rpt_TransferDocRange' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Document_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Document_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Document_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_Date' in table 'view_rpt_TransferDocRange' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Document_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Document_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Document_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_Type' in table 'view_rpt_TransferDocRange' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Document_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Seq() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.SeqColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Seq' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.SeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductType_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.ProductType_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductType_Id' in table 'view_rpt_TransferDocRange' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.ProductType_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductType_Desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.ProductType_DescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductType_Desc' in table 'view_rpt_TransferDocRange' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.ProductType_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Total_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Qty' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Total_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Package_Desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Package_DescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package_Desc' in table 'view_rpt_TransferDocRange' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Package_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str1() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str1' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str2() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str2' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str3() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str3' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str4() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str4' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str5() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str5' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str6() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str6' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str7() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str7' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str8() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str8' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str9() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str9' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str10() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_rpt_TransferDocRange.Str10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str10' in table 'view_rpt_TransferDocRange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_rpt_TransferDocRange.Str10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransportRegion_IdNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.TransportRegion_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransportRegion_IdNull()
            Me(Me.tableview_rpt_TransferDocRange.TransportRegion_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransportRegion_DescNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.TransportRegion_DescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransportRegion_DescNull()
            Me(Me.tableview_rpt_TransferDocRange.TransportRegion_DescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRoute_IdNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Route_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRoute_IdNull()
            Me(Me.tableview_rpt_TransferDocRange.Route_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRoute_DescNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Route_DescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRoute_DescNull()
            Me(Me.tableview_rpt_TransferDocRange.Route_DescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubRoute_IdNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.SubRoute_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubRoute_IdNull()
            Me(Me.tableview_rpt_TransferDocRange.SubRoute_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubRoute_DescNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.SubRoute_DescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubRoute_DescNull()
            Me(Me.tableview_rpt_TransferDocRange.SubRoute_DescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBarcode_BAGNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Barcode_BAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBarcode_BAGNull()
            Me(Me.tableview_rpt_TransferDocRange.Barcode_BAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRemarkNull()
            Me(Me.tableview_rpt_TransferDocRange.RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocument_NoNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Document_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocument_NoNull()
            Me(Me.tableview_rpt_TransferDocRange.Document_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocument_DateNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Document_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocument_DateNull()
            Me(Me.tableview_rpt_TransferDocRange.Document_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocument_TypeNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Document_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocument_TypeNull()
            Me(Me.tableview_rpt_TransferDocRange.Document_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddressNull()
            Me(Me.tableview_rpt_TransferDocRange.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSeqNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.SeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSeqNull()
            Me(Me.tableview_rpt_TransferDocRange.SeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductType_IdNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.ProductType_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductType_IdNull()
            Me(Me.tableview_rpt_TransferDocRange.ProductType_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductType_DescNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.ProductType_DescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductType_DescNull()
            Me(Me.tableview_rpt_TransferDocRange.ProductType_DescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_QtyNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Total_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_QtyNull()
            Me(Me.tableview_rpt_TransferDocRange.Total_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackage_DescNull() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Package_DescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackage_DescNull()
            Me(Me.tableview_rpt_TransferDocRange.Package_DescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr1Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr1Null()
            Me(Me.tableview_rpt_TransferDocRange.Str1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr2Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr2Null()
            Me(Me.tableview_rpt_TransferDocRange.Str2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr3Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr3Null()
            Me(Me.tableview_rpt_TransferDocRange.Str3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr4Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr4Null()
            Me(Me.tableview_rpt_TransferDocRange.Str4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr5Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr5Null()
            Me(Me.tableview_rpt_TransferDocRange.Str5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr6Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr6Null()
            Me(Me.tableview_rpt_TransferDocRange.Str6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr7Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr7Null()
            Me(Me.tableview_rpt_TransferDocRange.Str7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr8Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr8Null()
            Me(Me.tableview_rpt_TransferDocRange.Str8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr9Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr9Null()
            Me(Me.tableview_rpt_TransferDocRange.Str9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr10Null() As Boolean
            Return Me.IsNull(Me.tableview_rpt_TransferDocRange.Str10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr10Null()
            Me(Me.tableview_rpt_TransferDocRange.Str10Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class view_rpt_TransferDocRangeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As view_rpt_TransferDocRangeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As view_rpt_TransferDocRangeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As view_rpt_TransferDocRangeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
