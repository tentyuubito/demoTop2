'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsTran_Sku"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTran_Sku
    Inherits Global.System.Data.DataSet
    
    Private tableView_Tran_Card As View_Tran_CardDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("View_Tran_Card")) Is Nothing) Then
                MyBase.Tables.Add(New View_Tran_CardDataTable(ds.Tables("View_Tran_Card")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_Tran_Card() As View_Tran_CardDataTable
        Get
            Return Me.tableView_Tran_Card
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsTran_Sku = CType(MyBase.Clone,dsTran_Sku)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("View_Tran_Card")) Is Nothing) Then
                MyBase.Tables.Add(New View_Tran_CardDataTable(ds.Tables("View_Tran_Card")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableView_Tran_Card = CType(MyBase.Tables("View_Tran_Card"),View_Tran_CardDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_Tran_Card) Is Nothing) Then
                Me.tableView_Tran_Card.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTran_Sku"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTran_Sku.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableView_Tran_Card = New View_Tran_CardDataTable
        MyBase.Tables.Add(Me.tableView_Tran_Card)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeView_Tran_Card() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTran_Sku = New dsTran_Sku
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub View_Tran_CardRowChangeEventHandler(ByVal sender As Object, ByVal e As View_Tran_CardRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_Tran_CardDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTransaction_Index As Global.System.Data.DataColumn
        
        Private columnTransaction_Id As Global.System.Data.DataColumn
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnDocumentType_Index As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnItemDefinition_Index As Global.System.Data.DataColumn
        
        Private columnSku_Index As Global.System.Data.DataColumn
        
        Private columnLot_No As Global.System.Data.DataColumn
        
        Private columnPLot As Global.System.Data.DataColumn
        
        Private columnItemStatus_Index As Global.System.Data.DataColumn
        
        Private columnNew_ItemStatus_Index As Global.System.Data.DataColumn
        
        Private columnProcess_Id As Global.System.Data.DataColumn
        
        Private columnTransation_Date As Global.System.Data.DataColumn
        
        Private columnTag_No As Global.System.Data.DataColumn
        
        Private columnFrom_Location_Index As Global.System.Data.DataColumn
        
        Private columnTo_Location_Index As Global.System.Data.DataColumn
        
        Private columnLocation_Alias_To As Global.System.Data.DataColumn
        
        Private columnLocation_Alias_From As Global.System.Data.DataColumn
        
        Private columnQty_In As Global.System.Data.DataColumn
        
        Private columnWeight_In As Global.System.Data.DataColumn
        
        Private columnVolume_In As Global.System.Data.DataColumn
        
        Private columnQty_Out As Global.System.Data.DataColumn
        
        Private columnWeight_Out As Global.System.Data.DataColumn
        
        Private columnVolume_Out As Global.System.Data.DataColumn
        
        Private columnQty_Sku_Bal As Global.System.Data.DataColumn
        
        Private columnWeight_Sku_Bal As Global.System.Data.DataColumn
        
        Private columnVolume_Sku_Bal As Global.System.Data.DataColumn
        
        Private columnQty_PLot_Bal As Global.System.Data.DataColumn
        
        Private columnWeight_PLot_Bal As Global.System.Data.DataColumn
        
        Private columnVolume_PLot_Bal As Global.System.Data.DataColumn
        
        Private columnQty_ItemStatus_Bal As Global.System.Data.DataColumn
        
        Private columnWeight_ItemStatus_Bal As Global.System.Data.DataColumn
        
        Private columnVolume_ItemStatus_Bal As Global.System.Data.DataColumn
        
        Private columnMove_Qty As Global.System.Data.DataColumn
        
        Private columnQty_Variance As Global.System.Data.DataColumn
        
        Private columnadd_by As Global.System.Data.DataColumn
        
        Private columnadd_date As Global.System.Data.DataColumn
        
        Private columnadd_branch As Global.System.Data.DataColumn
        
        Private columnupdate_by As Global.System.Data.DataColumn
        
        Private columnupdate_date As Global.System.Data.DataColumn
        
        Private columnupdate_branch As Global.System.Data.DataColumn
        
        Private columnReferent_1 As Global.System.Data.DataColumn
        
        Private columnReferent_2 As Global.System.Data.DataColumn
        
        Private columnSku_name_th As Global.System.Data.DataColumn
        
        Private columnSku_name_en As Global.System.Data.DataColumn
        
        Private columnStatusName As Global.System.Data.DataColumn
        
        Private columnTo_Location As Global.System.Data.DataColumn
        
        Private columnFrom_Location As Global.System.Data.DataColumn
        
        Private columnpackage_id As Global.System.Data.DataColumn
        
        Private columnpackage_Name As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnItemDefinition_Name1 As Global.System.Data.DataColumn
        
        Private columnCustomer_Id As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnDocuDes As Global.System.Data.DataColumn
        
        Private columnLastQty As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_Tran_Card"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Transaction_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransaction_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Transaction_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransaction_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DocumentType_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemDefinition_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemDefinition_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Lot_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLot_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PLotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemStatus_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemStatus_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property New_ItemStatus_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNew_ItemStatus_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Process_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcess_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Transation_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransation_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tag_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTag_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property From_Location_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrom_Location_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property To_Location_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTo_Location_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Location_Alias_ToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocation_Alias_To
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Location_Alias_FromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocation_Alias_From
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_InColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_In
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Weight_InColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight_In
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Volume_InColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume_In
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_OutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_Out
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Weight_OutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight_Out
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Volume_OutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume_Out
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_Sku_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_Sku_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Weight_Sku_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight_Sku_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Volume_Sku_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume_Sku_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_PLot_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_PLot_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Weight_PLot_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight_PLot_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Volume_PLot_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume_PLot_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_ItemStatus_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_ItemStatus_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Weight_ItemStatus_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight_ItemStatus_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Volume_ItemStatus_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume_ItemStatus_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Move_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMove_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_VarianceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_Variance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_branchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_branch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property update_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdate_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property update_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdate_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property update_branchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdate_branch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Referent_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferent_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Referent_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferent_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_name_thColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_name_th
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_name_enColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_name_en
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property To_LocationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTo_Location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property From_LocationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrom_Location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property package_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpackage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property package_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpackage_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemDefinition_Name1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemDefinition_Name1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DocuDesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocuDes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_Tran_CardRow
            Get
                Return CType(Me.Rows(index),View_Tran_CardRow)
            End Get
        End Property
        
        Public Event View_Tran_CardRowChanging As View_Tran_CardRowChangeEventHandler
        
        Public Event View_Tran_CardRowChanged As View_Tran_CardRowChangeEventHandler
        
        Public Event View_Tran_CardRowDeleting As View_Tran_CardRowChangeEventHandler
        
        Public Event View_Tran_CardRowDeleted As View_Tran_CardRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddView_Tran_CardRow(ByVal row As View_Tran_CardRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddView_Tran_CardRow( _
                    ByVal Transaction_Index As String,  _
                    ByVal Transaction_Id As String,  _
                    ByVal Customer_Index As String,  _
                    ByVal DocumentType_Index As String,  _
                    ByVal Description As String,  _
                    ByVal ItemDefinition_Index As String,  _
                    ByVal Sku_Index As String,  _
                    ByVal Lot_No As String,  _
                    ByVal PLot As String,  _
                    ByVal ItemStatus_Index As String,  _
                    ByVal New_ItemStatus_Index As String,  _
                    ByVal Process_Id As Integer,  _
                    ByVal Transation_Date As Date,  _
                    ByVal Tag_No As String,  _
                    ByVal From_Location_Index As String,  _
                    ByVal To_Location_Index As String,  _
                    ByVal Location_Alias_To As String,  _
                    ByVal Location_Alias_From As String,  _
                    ByVal Qty_In As Double,  _
                    ByVal Weight_In As Double,  _
                    ByVal Volume_In As Double,  _
                    ByVal Qty_Out As Double,  _
                    ByVal Weight_Out As Double,  _
                    ByVal Volume_Out As Double,  _
                    ByVal Qty_Sku_Bal As Double,  _
                    ByVal Weight_Sku_Bal As Double,  _
                    ByVal Volume_Sku_Bal As Double,  _
                    ByVal Qty_PLot_Bal As Double,  _
                    ByVal Weight_PLot_Bal As Double,  _
                    ByVal Volume_PLot_Bal As Double,  _
                    ByVal Qty_ItemStatus_Bal As Double,  _
                    ByVal Weight_ItemStatus_Bal As Double,  _
                    ByVal Volume_ItemStatus_Bal As Double,  _
                    ByVal Move_Qty As Double,  _
                    ByVal Qty_Variance As Double,  _
                    ByVal add_by As String,  _
                    ByVal add_date As Date,  _
                    ByVal add_branch As Integer,  _
                    ByVal update_by As String,  _
                    ByVal update_date As Date,  _
                    ByVal update_branch As Integer,  _
                    ByVal Referent_1 As String,  _
                    ByVal Referent_2 As String,  _
                    ByVal Sku_name_th As String,  _
                    ByVal Sku_name_en As String,  _
                    ByVal StatusName As String,  _
                    ByVal To_Location As String,  _
                    ByVal From_Location As String,  _
                    ByVal package_id As String,  _
                    ByVal package_Name As String,  _
                    ByVal Sku_Id As String,  _
                    ByVal ItemDefinition_Name1 As String,  _
                    ByVal Customer_Id As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal DocuDes As String,  _
                    ByVal LastQty As Double) As View_Tran_CardRow
            Dim rowView_Tran_CardRow As View_Tran_CardRow = CType(Me.NewRow,View_Tran_CardRow)
            Dim columnValuesArray() As Object = New Object() {Transaction_Index, Transaction_Id, Customer_Index, DocumentType_Index, Description, ItemDefinition_Index, Sku_Index, Lot_No, PLot, ItemStatus_Index, New_ItemStatus_Index, Process_Id, Transation_Date, Tag_No, From_Location_Index, To_Location_Index, Location_Alias_To, Location_Alias_From, Qty_In, Weight_In, Volume_In, Qty_Out, Weight_Out, Volume_Out, Qty_Sku_Bal, Weight_Sku_Bal, Volume_Sku_Bal, Qty_PLot_Bal, Weight_PLot_Bal, Volume_PLot_Bal, Qty_ItemStatus_Bal, Weight_ItemStatus_Bal, Volume_ItemStatus_Bal, Move_Qty, Qty_Variance, add_by, add_date, add_branch, update_by, update_date, update_branch, Referent_1, Referent_2, Sku_name_th, Sku_name_en, StatusName, To_Location, From_Location, package_id, package_Name, Sku_Id, ItemDefinition_Name1, Customer_Id, Customer_Name, DocuDes, LastQty}
            rowView_Tran_CardRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_Tran_CardRow)
            Return rowView_Tran_CardRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByTransaction_Index(ByVal Transaction_Index As String) As View_Tran_CardRow
            Return CType(Me.Rows.Find(New Object() {Transaction_Index}),View_Tran_CardRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_Tran_CardDataTable = CType(MyBase.Clone,View_Tran_CardDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_Tran_CardDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTransaction_Index = MyBase.Columns("Transaction_Index")
            Me.columnTransaction_Id = MyBase.Columns("Transaction_Id")
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnDocumentType_Index = MyBase.Columns("DocumentType_Index")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnItemDefinition_Index = MyBase.Columns("ItemDefinition_Index")
            Me.columnSku_Index = MyBase.Columns("Sku_Index")
            Me.columnLot_No = MyBase.Columns("Lot_No")
            Me.columnPLot = MyBase.Columns("PLot")
            Me.columnItemStatus_Index = MyBase.Columns("ItemStatus_Index")
            Me.columnNew_ItemStatus_Index = MyBase.Columns("New_ItemStatus_Index")
            Me.columnProcess_Id = MyBase.Columns("Process_Id")
            Me.columnTransation_Date = MyBase.Columns("Transation_Date")
            Me.columnTag_No = MyBase.Columns("Tag_No")
            Me.columnFrom_Location_Index = MyBase.Columns("From_Location_Index")
            Me.columnTo_Location_Index = MyBase.Columns("To_Location_Index")
            Me.columnLocation_Alias_To = MyBase.Columns("Location_Alias_To")
            Me.columnLocation_Alias_From = MyBase.Columns("Location_Alias_From")
            Me.columnQty_In = MyBase.Columns("Qty_In")
            Me.columnWeight_In = MyBase.Columns("Weight_In")
            Me.columnVolume_In = MyBase.Columns("Volume_In")
            Me.columnQty_Out = MyBase.Columns("Qty_Out")
            Me.columnWeight_Out = MyBase.Columns("Weight_Out")
            Me.columnVolume_Out = MyBase.Columns("Volume_Out")
            Me.columnQty_Sku_Bal = MyBase.Columns("Qty_Sku_Bal")
            Me.columnWeight_Sku_Bal = MyBase.Columns("Weight_Sku_Bal")
            Me.columnVolume_Sku_Bal = MyBase.Columns("Volume_Sku_Bal")
            Me.columnQty_PLot_Bal = MyBase.Columns("Qty_PLot_Bal")
            Me.columnWeight_PLot_Bal = MyBase.Columns("Weight_PLot_Bal")
            Me.columnVolume_PLot_Bal = MyBase.Columns("Volume_PLot_Bal")
            Me.columnQty_ItemStatus_Bal = MyBase.Columns("Qty_ItemStatus_Bal")
            Me.columnWeight_ItemStatus_Bal = MyBase.Columns("Weight_ItemStatus_Bal")
            Me.columnVolume_ItemStatus_Bal = MyBase.Columns("Volume_ItemStatus_Bal")
            Me.columnMove_Qty = MyBase.Columns("Move_Qty")
            Me.columnQty_Variance = MyBase.Columns("Qty_Variance")
            Me.columnadd_by = MyBase.Columns("add_by")
            Me.columnadd_date = MyBase.Columns("add_date")
            Me.columnadd_branch = MyBase.Columns("add_branch")
            Me.columnupdate_by = MyBase.Columns("update_by")
            Me.columnupdate_date = MyBase.Columns("update_date")
            Me.columnupdate_branch = MyBase.Columns("update_branch")
            Me.columnReferent_1 = MyBase.Columns("Referent_1")
            Me.columnReferent_2 = MyBase.Columns("Referent_2")
            Me.columnSku_name_th = MyBase.Columns("Sku_name_th")
            Me.columnSku_name_en = MyBase.Columns("Sku_name_en")
            Me.columnStatusName = MyBase.Columns("StatusName")
            Me.columnTo_Location = MyBase.Columns("To_Location")
            Me.columnFrom_Location = MyBase.Columns("From_Location")
            Me.columnpackage_id = MyBase.Columns("package_id")
            Me.columnpackage_Name = MyBase.Columns("package_Name")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnItemDefinition_Name1 = MyBase.Columns("ItemDefinition_Name1")
            Me.columnCustomer_Id = MyBase.Columns("Customer_Id")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnDocuDes = MyBase.Columns("DocuDes")
            Me.columnLastQty = MyBase.Columns("LastQty")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTransaction_Index = New Global.System.Data.DataColumn("Transaction_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransaction_Index)
            Me.columnTransaction_Id = New Global.System.Data.DataColumn("Transaction_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransaction_Id)
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnDocumentType_Index = New Global.System.Data.DataColumn("DocumentType_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_Index)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnItemDefinition_Index = New Global.System.Data.DataColumn("ItemDefinition_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemDefinition_Index)
            Me.columnSku_Index = New Global.System.Data.DataColumn("Sku_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Index)
            Me.columnLot_No = New Global.System.Data.DataColumn("Lot_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLot_No)
            Me.columnPLot = New Global.System.Data.DataColumn("PLot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLot)
            Me.columnItemStatus_Index = New Global.System.Data.DataColumn("ItemStatus_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemStatus_Index)
            Me.columnNew_ItemStatus_Index = New Global.System.Data.DataColumn("New_ItemStatus_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNew_ItemStatus_Index)
            Me.columnProcess_Id = New Global.System.Data.DataColumn("Process_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcess_Id)
            Me.columnTransation_Date = New Global.System.Data.DataColumn("Transation_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransation_Date)
            Me.columnTag_No = New Global.System.Data.DataColumn("Tag_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTag_No)
            Me.columnFrom_Location_Index = New Global.System.Data.DataColumn("From_Location_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrom_Location_Index)
            Me.columnTo_Location_Index = New Global.System.Data.DataColumn("To_Location_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTo_Location_Index)
            Me.columnLocation_Alias_To = New Global.System.Data.DataColumn("Location_Alias_To", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation_Alias_To)
            Me.columnLocation_Alias_From = New Global.System.Data.DataColumn("Location_Alias_From", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation_Alias_From)
            Me.columnQty_In = New Global.System.Data.DataColumn("Qty_In", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_In)
            Me.columnWeight_In = New Global.System.Data.DataColumn("Weight_In", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight_In)
            Me.columnVolume_In = New Global.System.Data.DataColumn("Volume_In", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume_In)
            Me.columnQty_Out = New Global.System.Data.DataColumn("Qty_Out", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_Out)
            Me.columnWeight_Out = New Global.System.Data.DataColumn("Weight_Out", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight_Out)
            Me.columnVolume_Out = New Global.System.Data.DataColumn("Volume_Out", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume_Out)
            Me.columnQty_Sku_Bal = New Global.System.Data.DataColumn("Qty_Sku_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_Sku_Bal)
            Me.columnWeight_Sku_Bal = New Global.System.Data.DataColumn("Weight_Sku_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight_Sku_Bal)
            Me.columnVolume_Sku_Bal = New Global.System.Data.DataColumn("Volume_Sku_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume_Sku_Bal)
            Me.columnQty_PLot_Bal = New Global.System.Data.DataColumn("Qty_PLot_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_PLot_Bal)
            Me.columnWeight_PLot_Bal = New Global.System.Data.DataColumn("Weight_PLot_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight_PLot_Bal)
            Me.columnVolume_PLot_Bal = New Global.System.Data.DataColumn("Volume_PLot_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume_PLot_Bal)
            Me.columnQty_ItemStatus_Bal = New Global.System.Data.DataColumn("Qty_ItemStatus_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_ItemStatus_Bal)
            Me.columnWeight_ItemStatus_Bal = New Global.System.Data.DataColumn("Weight_ItemStatus_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight_ItemStatus_Bal)
            Me.columnVolume_ItemStatus_Bal = New Global.System.Data.DataColumn("Volume_ItemStatus_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume_ItemStatus_Bal)
            Me.columnMove_Qty = New Global.System.Data.DataColumn("Move_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMove_Qty)
            Me.columnQty_Variance = New Global.System.Data.DataColumn("Qty_Variance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_Variance)
            Me.columnadd_by = New Global.System.Data.DataColumn("add_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_by)
            Me.columnadd_date = New Global.System.Data.DataColumn("add_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_date)
            Me.columnadd_branch = New Global.System.Data.DataColumn("add_branch", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_branch)
            Me.columnupdate_by = New Global.System.Data.DataColumn("update_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdate_by)
            Me.columnupdate_date = New Global.System.Data.DataColumn("update_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdate_date)
            Me.columnupdate_branch = New Global.System.Data.DataColumn("update_branch", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdate_branch)
            Me.columnReferent_1 = New Global.System.Data.DataColumn("Referent_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferent_1)
            Me.columnReferent_2 = New Global.System.Data.DataColumn("Referent_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferent_2)
            Me.columnSku_name_th = New Global.System.Data.DataColumn("Sku_name_th", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_name_th)
            Me.columnSku_name_en = New Global.System.Data.DataColumn("Sku_name_en", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_name_en)
            Me.columnStatusName = New Global.System.Data.DataColumn("StatusName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusName)
            Me.columnTo_Location = New Global.System.Data.DataColumn("To_Location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTo_Location)
            Me.columnFrom_Location = New Global.System.Data.DataColumn("From_Location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrom_Location)
            Me.columnpackage_id = New Global.System.Data.DataColumn("package_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpackage_id)
            Me.columnpackage_Name = New Global.System.Data.DataColumn("package_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpackage_Name)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnItemDefinition_Name1 = New Global.System.Data.DataColumn("ItemDefinition_Name1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemDefinition_Name1)
            Me.columnCustomer_Id = New Global.System.Data.DataColumn("Customer_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Id)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnDocuDes = New Global.System.Data.DataColumn("DocuDes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocuDes)
            Me.columnLastQty = New Global.System.Data.DataColumn("LastQty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastQty)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTransaction_Index}, true))
            Me.columnTransaction_Index.AllowDBNull = false
            Me.columnTransaction_Index.Unique = true
            Me.columnTransaction_Index.MaxLength = 13
            Me.columnTransaction_Id.AllowDBNull = false
            Me.columnTransaction_Id.MaxLength = 50
            Me.columnCustomer_Index.MaxLength = 13
            Me.columnDocumentType_Index.MaxLength = 13
            Me.columnDescription.MaxLength = 100
            Me.columnItemDefinition_Index.MaxLength = 13
            Me.columnSku_Index.MaxLength = 50
            Me.columnLot_No.MaxLength = 50
            Me.columnPLot.MaxLength = 50
            Me.columnItemStatus_Index.MaxLength = 13
            Me.columnNew_ItemStatus_Index.MaxLength = 13
            Me.columnProcess_Id.AllowDBNull = false
            Me.columnTag_No.AllowDBNull = false
            Me.columnTag_No.MaxLength = 50
            Me.columnFrom_Location_Index.AllowDBNull = false
            Me.columnFrom_Location_Index.MaxLength = 50
            Me.columnTo_Location_Index.MaxLength = 50
            Me.columnLocation_Alias_To.MaxLength = 50
            Me.columnLocation_Alias_From.MaxLength = 50
            Me.columnQty_In.AllowDBNull = false
            Me.columnWeight_In.AllowDBNull = false
            Me.columnVolume_In.AllowDBNull = false
            Me.columnQty_Out.AllowDBNull = false
            Me.columnadd_by.MaxLength = 50
            Me.columnupdate_by.MaxLength = 50
            Me.columnReferent_1.MaxLength = 100
            Me.columnReferent_2.MaxLength = 100
            Me.columnSku_name_th.MaxLength = 100
            Me.columnSku_name_en.MaxLength = 100
            Me.columnStatusName.MaxLength = 100
            Me.columnTo_Location.MaxLength = 50
            Me.columnFrom_Location.MaxLength = 50
            Me.columnpackage_id.MaxLength = 13
            Me.columnpackage_Name.MaxLength = 100
            Me.columnSku_Id.MaxLength = 50
            Me.columnItemDefinition_Name1.MaxLength = 255
            Me.columnCustomer_Id.MaxLength = 13
            Me.columnCustomer_Name.MaxLength = 100
            Me.columnDocuDes.MaxLength = 100
            Me.columnLastQty.DefaultValue = CType(0,Double)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewView_Tran_CardRow() As View_Tran_CardRow
            Return CType(Me.NewRow,View_Tran_CardRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_Tran_CardRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_Tran_CardRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_Tran_CardRowChangedEvent) Is Nothing) Then
                RaiseEvent View_Tran_CardRowChanged(Me, New View_Tran_CardRowChangeEvent(CType(e.Row,View_Tran_CardRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_Tran_CardRowChangingEvent) Is Nothing) Then
                RaiseEvent View_Tran_CardRowChanging(Me, New View_Tran_CardRowChangeEvent(CType(e.Row,View_Tran_CardRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_Tran_CardRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_Tran_CardRowDeleted(Me, New View_Tran_CardRowChangeEvent(CType(e.Row,View_Tran_CardRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_Tran_CardRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_Tran_CardRowDeleting(Me, New View_Tran_CardRowChangeEvent(CType(e.Row,View_Tran_CardRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveView_Tran_CardRow(ByVal row As View_Tran_CardRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTran_Sku = New dsTran_Sku
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_Tran_CardDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class View_Tran_CardRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_Tran_Card As View_Tran_CardDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_Tran_Card = CType(Me.Table,View_Tran_CardDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Transaction_Index() As String
            Get
                Return CType(Me(Me.tableView_Tran_Card.Transaction_IndexColumn),String)
            End Get
            Set
                Me(Me.tableView_Tran_Card.Transaction_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Transaction_Id() As String
            Get
                Return CType(Me(Me.tableView_Tran_Card.Transaction_IdColumn),String)
            End Get
            Set
                Me(Me.tableView_Tran_Card.Transaction_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Customer_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Index' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocumentType_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.DocumentType_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentType_Index' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.DocumentType_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemDefinition_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.ItemDefinition_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemDefinition_Index' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.ItemDefinition_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Sku_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Index' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Sku_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Lot_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Lot_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Lot_No' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Lot_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PLot() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.PLotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLot' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.PLotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemStatus_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.ItemStatus_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemStatus_Index' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.ItemStatus_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property New_ItemStatus_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.New_ItemStatus_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'New_ItemStatus_Index' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.New_ItemStatus_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Process_Id() As Integer
            Get
                Return CType(Me(Me.tableView_Tran_Card.Process_IdColumn),Integer)
            End Get
            Set
                Me(Me.tableView_Tran_Card.Process_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Transation_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Transation_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Transation_Date' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Transation_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tag_No() As String
            Get
                Return CType(Me(Me.tableView_Tran_Card.Tag_NoColumn),String)
            End Get
            Set
                Me(Me.tableView_Tran_Card.Tag_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property From_Location_Index() As String
            Get
                Return CType(Me(Me.tableView_Tran_Card.From_Location_IndexColumn),String)
            End Get
            Set
                Me(Me.tableView_Tran_Card.From_Location_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property To_Location_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.To_Location_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'To_Location_Index' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.To_Location_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location_Alias_To() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Location_Alias_ToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Location_Alias_To' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Location_Alias_ToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location_Alias_From() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Location_Alias_FromColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Location_Alias_From' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Location_Alias_FromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_In() As Double
            Get
                Return CType(Me(Me.tableView_Tran_Card.Qty_InColumn),Double)
            End Get
            Set
                Me(Me.tableView_Tran_Card.Qty_InColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight_In() As Double
            Get
                Return CType(Me(Me.tableView_Tran_Card.Weight_InColumn),Double)
            End Get
            Set
                Me(Me.tableView_Tran_Card.Weight_InColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume_In() As Double
            Get
                Return CType(Me(Me.tableView_Tran_Card.Volume_InColumn),Double)
            End Get
            Set
                Me(Me.tableView_Tran_Card.Volume_InColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_Out() As Double
            Get
                Return CType(Me(Me.tableView_Tran_Card.Qty_OutColumn),Double)
            End Get
            Set
                Me(Me.tableView_Tran_Card.Qty_OutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight_Out() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Weight_OutColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight_Out' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Weight_OutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume_Out() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Volume_OutColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volume_Out' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Volume_OutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_Sku_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Qty_Sku_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_Sku_Bal' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Qty_Sku_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight_Sku_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Weight_Sku_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight_Sku_Bal' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Weight_Sku_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume_Sku_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Volume_Sku_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volume_Sku_Bal' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Volume_Sku_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_PLot_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Qty_PLot_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_PLot_Bal' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Qty_PLot_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight_PLot_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Weight_PLot_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight_PLot_Bal' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Weight_PLot_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume_PLot_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Volume_PLot_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volume_PLot_Bal' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Volume_PLot_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_ItemStatus_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Qty_ItemStatus_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_ItemStatus_Bal' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Qty_ItemStatus_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight_ItemStatus_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Weight_ItemStatus_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight_ItemStatus_Bal' in table 'View_Tran_Card' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Weight_ItemStatus_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume_ItemStatus_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Volume_ItemStatus_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volume_ItemStatus_Bal' in table 'View_Tran_Card' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Volume_ItemStatus_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Move_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Move_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Move_Qty' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Move_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_Variance() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Qty_VarianceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_Variance' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Qty_VarianceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_by() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.add_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_by' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.add_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.add_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_date' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.add_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_branch() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.add_branchColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_branch' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.add_branchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property update_by() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.update_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'update_by' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.update_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property update_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.update_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'update_date' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.update_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property update_branch() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.update_branchColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'update_branch' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.update_branchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Referent_1() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Referent_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Referent_1' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Referent_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Referent_2() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Referent_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Referent_2' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Referent_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_name_th() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Sku_name_thColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_name_th' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Sku_name_thColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_name_en() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Sku_name_enColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_name_en' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Sku_name_enColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StatusName() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.StatusNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatusName' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.StatusNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property To_Location() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.To_LocationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'To_Location' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.To_LocationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property From_Location() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.From_LocationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'From_Location' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.From_LocationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property package_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.package_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'package_id' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.package_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property package_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.package_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'package_Name' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.package_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemDefinition_Name1() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.ItemDefinition_Name1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemDefinition_Name1' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.ItemDefinition_Name1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Customer_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Id' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Customer_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocuDes() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.DocuDesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocuDes' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.DocuDesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastQty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Tran_Card.LastQtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastQty' in table 'View_Tran_Card' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Tran_Card.LastQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Customer_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IndexNull()
            Me(Me.tableView_Tran_Card.Customer_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocumentType_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.DocumentType_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocumentType_IndexNull()
            Me(Me.tableView_Tran_Card.DocumentType_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableView_Tran_Card.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemDefinition_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.ItemDefinition_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemDefinition_IndexNull()
            Me(Me.tableView_Tran_Card.ItemDefinition_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Sku_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IndexNull()
            Me(Me.tableView_Tran_Card.Sku_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLot_NoNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Lot_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLot_NoNull()
            Me(Me.tableView_Tran_Card.Lot_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPLotNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.PLotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPLotNull()
            Me(Me.tableView_Tran_Card.PLotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemStatus_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.ItemStatus_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemStatus_IndexNull()
            Me(Me.tableView_Tran_Card.ItemStatus_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNew_ItemStatus_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.New_ItemStatus_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNew_ItemStatus_IndexNull()
            Me(Me.tableView_Tran_Card.New_ItemStatus_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransation_DateNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Transation_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransation_DateNull()
            Me(Me.tableView_Tran_Card.Transation_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTo_Location_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.To_Location_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTo_Location_IndexNull()
            Me(Me.tableView_Tran_Card.To_Location_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocation_Alias_ToNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Location_Alias_ToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocation_Alias_ToNull()
            Me(Me.tableView_Tran_Card.Location_Alias_ToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocation_Alias_FromNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Location_Alias_FromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocation_Alias_FromNull()
            Me(Me.tableView_Tran_Card.Location_Alias_FromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeight_OutNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Weight_OutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeight_OutNull()
            Me(Me.tableView_Tran_Card.Weight_OutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolume_OutNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Volume_OutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolume_OutNull()
            Me(Me.tableView_Tran_Card.Volume_OutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_Sku_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Qty_Sku_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_Sku_BalNull()
            Me(Me.tableView_Tran_Card.Qty_Sku_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeight_Sku_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Weight_Sku_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeight_Sku_BalNull()
            Me(Me.tableView_Tran_Card.Weight_Sku_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolume_Sku_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Volume_Sku_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolume_Sku_BalNull()
            Me(Me.tableView_Tran_Card.Volume_Sku_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_PLot_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Qty_PLot_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_PLot_BalNull()
            Me(Me.tableView_Tran_Card.Qty_PLot_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeight_PLot_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Weight_PLot_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeight_PLot_BalNull()
            Me(Me.tableView_Tran_Card.Weight_PLot_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolume_PLot_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Volume_PLot_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolume_PLot_BalNull()
            Me(Me.tableView_Tran_Card.Volume_PLot_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_ItemStatus_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Qty_ItemStatus_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_ItemStatus_BalNull()
            Me(Me.tableView_Tran_Card.Qty_ItemStatus_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeight_ItemStatus_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Weight_ItemStatus_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeight_ItemStatus_BalNull()
            Me(Me.tableView_Tran_Card.Weight_ItemStatus_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolume_ItemStatus_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Volume_ItemStatus_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolume_ItemStatus_BalNull()
            Me(Me.tableView_Tran_Card.Volume_ItemStatus_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMove_QtyNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Move_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMove_QtyNull()
            Me(Me.tableView_Tran_Card.Move_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_VarianceNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Qty_VarianceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_VarianceNull()
            Me(Me.tableView_Tran_Card.Qty_VarianceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_byNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.add_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_byNull()
            Me(Me.tableView_Tran_Card.add_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_dateNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.add_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_dateNull()
            Me(Me.tableView_Tran_Card.add_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_branchNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.add_branchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_branchNull()
            Me(Me.tableView_Tran_Card.add_branchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupdate_byNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.update_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupdate_byNull()
            Me(Me.tableView_Tran_Card.update_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupdate_dateNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.update_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupdate_dateNull()
            Me(Me.tableView_Tran_Card.update_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupdate_branchNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.update_branchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupdate_branchNull()
            Me(Me.tableView_Tran_Card.update_branchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReferent_1Null() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Referent_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReferent_1Null()
            Me(Me.tableView_Tran_Card.Referent_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReferent_2Null() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Referent_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReferent_2Null()
            Me(Me.tableView_Tran_Card.Referent_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_name_thNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Sku_name_thColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_name_thNull()
            Me(Me.tableView_Tran_Card.Sku_name_thColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_name_enNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Sku_name_enColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_name_enNull()
            Me(Me.tableView_Tran_Card.Sku_name_enColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNameNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.StatusNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNameNull()
            Me(Me.tableView_Tran_Card.StatusNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTo_LocationNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.To_LocationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTo_LocationNull()
            Me(Me.tableView_Tran_Card.To_LocationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFrom_LocationNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.From_LocationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFrom_LocationNull()
            Me(Me.tableView_Tran_Card.From_LocationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispackage_idNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.package_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpackage_idNull()
            Me(Me.tableView_Tran_Card.package_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispackage_NameNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.package_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpackage_NameNull()
            Me(Me.tableView_Tran_Card.package_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableView_Tran_Card.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemDefinition_Name1Null() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.ItemDefinition_Name1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemDefinition_Name1Null()
            Me(Me.tableView_Tran_Card.ItemDefinition_Name1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IdNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Customer_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IdNull()
            Me(Me.tableView_Tran_Card.Customer_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableView_Tran_Card.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocuDesNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.DocuDesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocuDesNull()
            Me(Me.tableView_Tran_Card.DocuDesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastQtyNull() As Boolean
            Return Me.IsNull(Me.tableView_Tran_Card.LastQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastQtyNull()
            Me(Me.tableView_Tran_Card.LastQtyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class View_Tran_CardRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_Tran_CardRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As View_Tran_CardRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As View_Tran_CardRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
