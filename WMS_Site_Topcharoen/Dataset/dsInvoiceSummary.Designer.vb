'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsInvoiceSummary"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsInvoiceSummary
    Inherits Global.System.Data.DataSet
    
    Private tableVIEW_RPT_InvoiceSummary As VIEW_RPT_InvoiceSummaryDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VIEW_RPT_InvoiceSummary")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_InvoiceSummaryDataTable(ds.Tables("VIEW_RPT_InvoiceSummary")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_RPT_InvoiceSummary() As VIEW_RPT_InvoiceSummaryDataTable
        Get
            Return Me.tableVIEW_RPT_InvoiceSummary
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsInvoiceSummary = CType(MyBase.Clone,dsInvoiceSummary)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("VIEW_RPT_InvoiceSummary")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_InvoiceSummaryDataTable(ds.Tables("VIEW_RPT_InvoiceSummary")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVIEW_RPT_InvoiceSummary = CType(MyBase.Tables("VIEW_RPT_InvoiceSummary"),VIEW_RPT_InvoiceSummaryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_RPT_InvoiceSummary) Is Nothing) Then
                Me.tableVIEW_RPT_InvoiceSummary.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsInvoiceSummary"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsInvoiceSummary.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVIEW_RPT_InvoiceSummary = New VIEW_RPT_InvoiceSummaryDataTable
        MyBase.Tables.Add(Me.tableVIEW_RPT_InvoiceSummary)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_RPT_InvoiceSummary() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsInvoiceSummary = New dsInvoiceSummary
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub VIEW_RPT_InvoiceSummaryRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_RPT_InvoiceSummaryRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_RPT_InvoiceSummaryDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnInvoice_No As Global.System.Data.DataColumn
        
        Private columnInvoice_Date As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        Private columnRef_No1 As Global.System.Data.DataColumn
        
        Private columnRef_No2 As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnDue_Date As Global.System.Data.DataColumn
        
        Private columnDocumentType_Id As Global.System.Data.DataColumn
        
        Private columnDocument_Des As Global.System.Data.DataColumn
        
        Private columnProcess_Id As Global.System.Data.DataColumn
        
        Private columnProcess_Name As Global.System.Data.DataColumn
        
        Private columnCredit_Term As Global.System.Data.DataColumn
        
        Private columnPaymentMethod_Index As Global.System.Data.DataColumn
        
        Private columnPaymen_Des As Global.System.Data.DataColumn
        
        Private columnStatus_das As Global.System.Data.DataColumn
        
        Private columnCustomer_Id As Global.System.Data.DataColumn
        
        Private columnPayment_Des As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_RPT_InvoiceSummary"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Due_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDue_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DocumentType_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Document_DesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_Des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Process_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcess_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Process_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcess_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Credit_TermColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCredit_Term
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PaymentMethod_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentMethod_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Paymen_DesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymen_Des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Status_dasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus_das
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Payment_DesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment_Des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_RPT_InvoiceSummaryRow
            Get
                Return CType(Me.Rows(index),VIEW_RPT_InvoiceSummaryRow)
            End Get
        End Property
        
        Public Event VIEW_RPT_InvoiceSummaryRowChanging As VIEW_RPT_InvoiceSummaryRowChangeEventHandler
        
        Public Event VIEW_RPT_InvoiceSummaryRowChanged As VIEW_RPT_InvoiceSummaryRowChangeEventHandler
        
        Public Event VIEW_RPT_InvoiceSummaryRowDeleting As VIEW_RPT_InvoiceSummaryRowChangeEventHandler
        
        Public Event VIEW_RPT_InvoiceSummaryRowDeleted As VIEW_RPT_InvoiceSummaryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_RPT_InvoiceSummaryRow(ByVal row As VIEW_RPT_InvoiceSummaryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_RPT_InvoiceSummaryRow( _
                    ByVal Invoice_No As String,  _
                    ByVal Invoice_Date As Date,  _
                    ByVal Remark As String,  _
                    ByVal Ref_No1 As String,  _
                    ByVal Ref_No2 As String,  _
                    ByVal Amount As Double,  _
                    ByVal Customer_Index As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal Due_Date As Date,  _
                    ByVal DocumentType_Id As String,  _
                    ByVal Document_Des As String,  _
                    ByVal Process_Id As Integer,  _
                    ByVal Process_Name As String,  _
                    ByVal Credit_Term As String,  _
                    ByVal PaymentMethod_Index As String,  _
                    ByVal Paymen_Des As String,  _
                    ByVal Status_das As String,  _
                    ByVal Customer_Id As String,  _
                    ByVal Payment_Des As String) As VIEW_RPT_InvoiceSummaryRow
            Dim rowVIEW_RPT_InvoiceSummaryRow As VIEW_RPT_InvoiceSummaryRow = CType(Me.NewRow,VIEW_RPT_InvoiceSummaryRow)
            Dim columnValuesArray() As Object = New Object() {Invoice_No, Invoice_Date, Remark, Ref_No1, Ref_No2, Amount, Customer_Index, Customer_Name, Due_Date, DocumentType_Id, Document_Des, Process_Id, Process_Name, Credit_Term, PaymentMethod_Index, Paymen_Des, Status_das, Customer_Id, Payment_Des}
            rowVIEW_RPT_InvoiceSummaryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_RPT_InvoiceSummaryRow)
            Return rowVIEW_RPT_InvoiceSummaryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_RPT_InvoiceSummaryDataTable = CType(MyBase.Clone,VIEW_RPT_InvoiceSummaryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_RPT_InvoiceSummaryDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnInvoice_No = MyBase.Columns("Invoice_No")
            Me.columnInvoice_Date = MyBase.Columns("Invoice_Date")
            Me.columnRemark = MyBase.Columns("Remark")
            Me.columnRef_No1 = MyBase.Columns("Ref_No1")
            Me.columnRef_No2 = MyBase.Columns("Ref_No2")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnDue_Date = MyBase.Columns("Due_Date")
            Me.columnDocumentType_Id = MyBase.Columns("DocumentType_Id")
            Me.columnDocument_Des = MyBase.Columns("Document_Des")
            Me.columnProcess_Id = MyBase.Columns("Process_Id")
            Me.columnProcess_Name = MyBase.Columns("Process_Name")
            Me.columnCredit_Term = MyBase.Columns("Credit_Term")
            Me.columnPaymentMethod_Index = MyBase.Columns("PaymentMethod_Index")
            Me.columnPaymen_Des = MyBase.Columns("Paymen_Des")
            Me.columnStatus_das = MyBase.Columns("Status_das")
            Me.columnCustomer_Id = MyBase.Columns("Customer_Id")
            Me.columnPayment_Des = MyBase.Columns("Payment_Des")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnInvoice_No = New Global.System.Data.DataColumn("Invoice_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_No)
            Me.columnInvoice_Date = New Global.System.Data.DataColumn("Invoice_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_Date)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.columnRef_No1 = New Global.System.Data.DataColumn("Ref_No1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No1)
            Me.columnRef_No2 = New Global.System.Data.DataColumn("Ref_No2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No2)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnDue_Date = New Global.System.Data.DataColumn("Due_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDue_Date)
            Me.columnDocumentType_Id = New Global.System.Data.DataColumn("DocumentType_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_Id)
            Me.columnDocument_Des = New Global.System.Data.DataColumn("Document_Des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_Des)
            Me.columnProcess_Id = New Global.System.Data.DataColumn("Process_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcess_Id)
            Me.columnProcess_Name = New Global.System.Data.DataColumn("Process_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcess_Name)
            Me.columnCredit_Term = New Global.System.Data.DataColumn("Credit_Term", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCredit_Term)
            Me.columnPaymentMethod_Index = New Global.System.Data.DataColumn("PaymentMethod_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentMethod_Index)
            Me.columnPaymen_Des = New Global.System.Data.DataColumn("Paymen_Des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymen_Des)
            Me.columnStatus_das = New Global.System.Data.DataColumn("Status_das", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus_das)
            Me.columnCustomer_Id = New Global.System.Data.DataColumn("Customer_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Id)
            Me.columnPayment_Des = New Global.System.Data.DataColumn("Payment_Des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment_Des)
            Me.columnInvoice_No.MaxLength = 50
            Me.columnRemark.MaxLength = 255
            Me.columnRef_No1.MaxLength = 50
            Me.columnRef_No2.MaxLength = 50
            Me.columnCustomer_Index.MaxLength = 13
            Me.columnCustomer_Name.MaxLength = 151
            Me.columnDocumentType_Id.MaxLength = 15
            Me.columnDocument_Des.MaxLength = 100
            Me.columnProcess_Name.MaxLength = 100
            Me.columnCredit_Term.MaxLength = 10
            Me.columnPaymentMethod_Index.MaxLength = 13
            Me.columnPaymen_Des.MaxLength = 100
            Me.columnStatus_das.MaxLength = 100
            Me.columnCustomer_Id.MaxLength = 13
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_RPT_InvoiceSummaryRow() As VIEW_RPT_InvoiceSummaryRow
            Return CType(Me.NewRow,VIEW_RPT_InvoiceSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_RPT_InvoiceSummaryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_RPT_InvoiceSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_RPT_InvoiceSummaryRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_InvoiceSummaryRowChanged(Me, New VIEW_RPT_InvoiceSummaryRowChangeEvent(CType(e.Row,VIEW_RPT_InvoiceSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_RPT_InvoiceSummaryRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_InvoiceSummaryRowChanging(Me, New VIEW_RPT_InvoiceSummaryRowChangeEvent(CType(e.Row,VIEW_RPT_InvoiceSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_RPT_InvoiceSummaryRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_InvoiceSummaryRowDeleted(Me, New VIEW_RPT_InvoiceSummaryRowChangeEvent(CType(e.Row,VIEW_RPT_InvoiceSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_RPT_InvoiceSummaryRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_InvoiceSummaryRowDeleting(Me, New VIEW_RPT_InvoiceSummaryRowChangeEvent(CType(e.Row,VIEW_RPT_InvoiceSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_RPT_InvoiceSummaryRow(ByVal row As VIEW_RPT_InvoiceSummaryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsInvoiceSummary = New dsInvoiceSummary
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_RPT_InvoiceSummaryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_RPT_InvoiceSummaryRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_RPT_InvoiceSummary As VIEW_RPT_InvoiceSummaryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_RPT_InvoiceSummary = CType(Me.Table,VIEW_RPT_InvoiceSummaryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Invoice_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_No' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Invoice_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Invoice_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_Date' in table 'VIEW_RPT_InvoiceSummary' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Invoice_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remark' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Ref_No1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No1' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Ref_No1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Ref_No2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No2' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Ref_No2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Customer_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Index' in table 'VIEW_RPT_InvoiceSummary' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'VIEW_RPT_InvoiceSummary' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Due_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Due_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Due_Date' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Due_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocumentType_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.DocumentType_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentType_Id' in table 'VIEW_RPT_InvoiceSummary' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.DocumentType_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Document_Des() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Document_DesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_Des' in table 'VIEW_RPT_InvoiceSummary' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Document_DesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Process_Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Process_IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Process_Id' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Process_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Process_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Process_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Process_Name' in table 'VIEW_RPT_InvoiceSummary' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Process_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Credit_Term() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Credit_TermColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit_Term' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Credit_TermColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PaymentMethod_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.PaymentMethod_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PaymentMethod_Index' in table 'VIEW_RPT_InvoiceSummary' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.PaymentMethod_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Paymen_Des() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Paymen_DesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Paymen_Des' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Paymen_DesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status_das() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Status_dasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status_das' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Status_dasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Customer_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Id' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Customer_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Payment_Des() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_InvoiceSummary.Payment_DesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Payment_Des' in table 'VIEW_RPT_InvoiceSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_InvoiceSummary.Payment_DesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Invoice_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_NoNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Invoice_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Invoice_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_DateNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Invoice_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRemarkNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Ref_No1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No1Null()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Ref_No1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No2Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Ref_No2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No2Null()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Ref_No2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAmountNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Customer_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IndexNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Customer_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDue_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Due_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDue_DateNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Due_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocumentType_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.DocumentType_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocumentType_IdNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.DocumentType_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocument_DesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Document_DesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocument_DesNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Document_DesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProcess_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Process_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProcess_IdNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Process_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProcess_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Process_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProcess_NameNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Process_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCredit_TermNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Credit_TermColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCredit_TermNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Credit_TermColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPaymentMethod_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.PaymentMethod_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPaymentMethod_IndexNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.PaymentMethod_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPaymen_DesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Paymen_DesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPaymen_DesNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Paymen_DesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatus_dasNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Status_dasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatus_dasNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Status_dasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Customer_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IdNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Customer_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPayment_DesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_InvoiceSummary.Payment_DesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPayment_DesNull()
            Me(Me.tableVIEW_RPT_InvoiceSummary.Payment_DesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_RPT_InvoiceSummaryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_RPT_InvoiceSummaryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_RPT_InvoiceSummaryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_RPT_InvoiceSummaryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
