'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsPayment"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPayment
    Inherits Global.System.Data.DataSet
    
    Private tableVIEW_RPT_Payment As VIEW_RPT_PaymentDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VIEW_RPT_Payment")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_PaymentDataTable(ds.Tables("VIEW_RPT_Payment")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_RPT_Payment() As VIEW_RPT_PaymentDataTable
        Get
            Return Me.tableVIEW_RPT_Payment
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsPayment = CType(MyBase.Clone,dsPayment)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("VIEW_RPT_Payment")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_PaymentDataTable(ds.Tables("VIEW_RPT_Payment")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVIEW_RPT_Payment = CType(MyBase.Tables("VIEW_RPT_Payment"),VIEW_RPT_PaymentDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_RPT_Payment) Is Nothing) Then
                Me.tableVIEW_RPT_Payment.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPayment"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsPayment.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVIEW_RPT_Payment = New VIEW_RPT_PaymentDataTable
        MyBase.Tables.Add(Me.tableVIEW_RPT_Payment)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_RPT_Payment() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPayment = New dsPayment
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub VIEW_RPT_PaymentRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_RPT_PaymentRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_RPT_PaymentDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnPayment_No As Global.System.Data.DataColumn
        
        Private columnPayment_Date As Global.System.Data.DataColumn
        
        Private columnPayment_Index As Global.System.Data.DataColumn
        
        Private columnInvoice_Index As Global.System.Data.DataColumn
        
        Private columnInvoice_No As Global.System.Data.DataColumn
        
        Private columnInvoice_Date As Global.System.Data.DataColumn
        
        Private columnPayment_Amount As Global.System.Data.DataColumn
        
        Private columnInvoice_Amount As Global.System.Data.DataColumn
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnaddress As Global.System.Data.DataColumn
        
        Private columntel As Global.System.Data.DataColumn
        
        Private columnfax As Global.System.Data.DataColumn
        
        Private columnComment As Global.System.Data.DataColumn
        
        Private columnadd_by As Global.System.Data.DataColumn
        
        Private columnadd_date As Global.System.Data.DataColumn
        
        Private columnadd_branch As Global.System.Data.DataColumn
        
        Private columnupdate_by As Global.System.Data.DataColumn
        
        Private columnupdate_date As Global.System.Data.DataColumn
        
        Private columnupdate_branch As Global.System.Data.DataColumn
        
        Private columncancel_by As Global.System.Data.DataColumn
        
        Private columncancel_date As Global.System.Data.DataColumn
        
        Private columncancel_branch As Global.System.Data.DataColumn
        
        Private columnStatus_id As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnCustomer_Id As Global.System.Data.DataColumn
        
        Private columnPaymentType_Index As Global.System.Data.DataColumn
        
        Private columnDocumentType_Index As Global.System.Data.DataColumn
        
        Private columnDocumentType_Des As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_RPT_Payment"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Payment_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Payment_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Payment_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Payment_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property telColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CommentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_branchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_branch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property update_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdate_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property update_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdate_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property update_branchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdate_branch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cancel_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncancel_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cancel_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncancel_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cancel_branchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncancel_branch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Status_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PaymentType_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentType_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DocumentType_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DocumentType_DesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_Des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_RPT_PaymentRow
            Get
                Return CType(Me.Rows(index),VIEW_RPT_PaymentRow)
            End Get
        End Property
        
        Public Event VIEW_RPT_PaymentRowChanging As VIEW_RPT_PaymentRowChangeEventHandler
        
        Public Event VIEW_RPT_PaymentRowChanged As VIEW_RPT_PaymentRowChangeEventHandler
        
        Public Event VIEW_RPT_PaymentRowDeleting As VIEW_RPT_PaymentRowChangeEventHandler
        
        Public Event VIEW_RPT_PaymentRowDeleted As VIEW_RPT_PaymentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_RPT_PaymentRow(ByVal row As VIEW_RPT_PaymentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_RPT_PaymentRow( _
                    ByVal Payment_No As String,  _
                    ByVal Payment_Date As Date,  _
                    ByVal Payment_Index As String,  _
                    ByVal Invoice_Index As String,  _
                    ByVal Invoice_No As String,  _
                    ByVal Invoice_Date As Date,  _
                    ByVal Payment_Amount As Double,  _
                    ByVal Invoice_Amount As Double,  _
                    ByVal Customer_Index As String,  _
                    ByVal address As String,  _
                    ByVal tel As String,  _
                    ByVal fax As String,  _
                    ByVal Comment As String,  _
                    ByVal add_by As String,  _
                    ByVal add_date As Date,  _
                    ByVal add_branch As Integer,  _
                    ByVal update_by As String,  _
                    ByVal update_date As Date,  _
                    ByVal update_branch As Integer,  _
                    ByVal cancel_by As String,  _
                    ByVal cancel_date As Date,  _
                    ByVal cancel_branch As Integer,  _
                    ByVal Status_id As Integer,  _
                    ByVal Description As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal Customer_Id As String,  _
                    ByVal PaymentType_Index As String,  _
                    ByVal DocumentType_Index As String,  _
                    ByVal DocumentType_Des As String) As VIEW_RPT_PaymentRow
            Dim rowVIEW_RPT_PaymentRow As VIEW_RPT_PaymentRow = CType(Me.NewRow,VIEW_RPT_PaymentRow)
            Dim columnValuesArray() As Object = New Object() {Payment_No, Payment_Date, Payment_Index, Invoice_Index, Invoice_No, Invoice_Date, Payment_Amount, Invoice_Amount, Customer_Index, address, tel, fax, Comment, add_by, add_date, add_branch, update_by, update_date, update_branch, cancel_by, cancel_date, cancel_branch, Status_id, Description, Customer_Name, Customer_Id, PaymentType_Index, DocumentType_Index, DocumentType_Des}
            rowVIEW_RPT_PaymentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_RPT_PaymentRow)
            Return rowVIEW_RPT_PaymentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_RPT_PaymentDataTable = CType(MyBase.Clone,VIEW_RPT_PaymentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_RPT_PaymentDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPayment_No = MyBase.Columns("Payment_No")
            Me.columnPayment_Date = MyBase.Columns("Payment_Date")
            Me.columnPayment_Index = MyBase.Columns("Payment_Index")
            Me.columnInvoice_Index = MyBase.Columns("Invoice_Index")
            Me.columnInvoice_No = MyBase.Columns("Invoice_No")
            Me.columnInvoice_Date = MyBase.Columns("Invoice_Date")
            Me.columnPayment_Amount = MyBase.Columns("Payment_Amount")
            Me.columnInvoice_Amount = MyBase.Columns("Invoice_Amount")
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnaddress = MyBase.Columns("address")
            Me.columntel = MyBase.Columns("tel")
            Me.columnfax = MyBase.Columns("fax")
            Me.columnComment = MyBase.Columns("Comment")
            Me.columnadd_by = MyBase.Columns("add_by")
            Me.columnadd_date = MyBase.Columns("add_date")
            Me.columnadd_branch = MyBase.Columns("add_branch")
            Me.columnupdate_by = MyBase.Columns("update_by")
            Me.columnupdate_date = MyBase.Columns("update_date")
            Me.columnupdate_branch = MyBase.Columns("update_branch")
            Me.columncancel_by = MyBase.Columns("cancel_by")
            Me.columncancel_date = MyBase.Columns("cancel_date")
            Me.columncancel_branch = MyBase.Columns("cancel_branch")
            Me.columnStatus_id = MyBase.Columns("Status_id")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnCustomer_Id = MyBase.Columns("Customer_Id")
            Me.columnPaymentType_Index = MyBase.Columns("PaymentType_Index")
            Me.columnDocumentType_Index = MyBase.Columns("DocumentType_Index")
            Me.columnDocumentType_Des = MyBase.Columns("DocumentType_Des")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPayment_No = New Global.System.Data.DataColumn("Payment_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment_No)
            Me.columnPayment_Date = New Global.System.Data.DataColumn("Payment_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment_Date)
            Me.columnPayment_Index = New Global.System.Data.DataColumn("Payment_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment_Index)
            Me.columnInvoice_Index = New Global.System.Data.DataColumn("Invoice_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_Index)
            Me.columnInvoice_No = New Global.System.Data.DataColumn("Invoice_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_No)
            Me.columnInvoice_Date = New Global.System.Data.DataColumn("Invoice_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_Date)
            Me.columnPayment_Amount = New Global.System.Data.DataColumn("Payment_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment_Amount)
            Me.columnInvoice_Amount = New Global.System.Data.DataColumn("Invoice_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_Amount)
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnaddress = New Global.System.Data.DataColumn("address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress)
            Me.columntel = New Global.System.Data.DataColumn("tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntel)
            Me.columnfax = New Global.System.Data.DataColumn("fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfax)
            Me.columnComment = New Global.System.Data.DataColumn("Comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComment)
            Me.columnadd_by = New Global.System.Data.DataColumn("add_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_by)
            Me.columnadd_date = New Global.System.Data.DataColumn("add_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_date)
            Me.columnadd_branch = New Global.System.Data.DataColumn("add_branch", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_branch)
            Me.columnupdate_by = New Global.System.Data.DataColumn("update_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdate_by)
            Me.columnupdate_date = New Global.System.Data.DataColumn("update_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdate_date)
            Me.columnupdate_branch = New Global.System.Data.DataColumn("update_branch", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdate_branch)
            Me.columncancel_by = New Global.System.Data.DataColumn("cancel_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncancel_by)
            Me.columncancel_date = New Global.System.Data.DataColumn("cancel_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncancel_date)
            Me.columncancel_branch = New Global.System.Data.DataColumn("cancel_branch", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncancel_branch)
            Me.columnStatus_id = New Global.System.Data.DataColumn("Status_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus_id)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnCustomer_Id = New Global.System.Data.DataColumn("Customer_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Id)
            Me.columnPaymentType_Index = New Global.System.Data.DataColumn("PaymentType_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentType_Index)
            Me.columnDocumentType_Index = New Global.System.Data.DataColumn("DocumentType_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_Index)
            Me.columnDocumentType_Des = New Global.System.Data.DataColumn("DocumentType_Des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_Des)
            Me.columnPayment_No.AllowDBNull = false
            Me.columnPayment_No.MaxLength = 50
            Me.columnPayment_Date.AllowDBNull = false
            Me.columnPayment_Index.AllowDBNull = false
            Me.columnPayment_Index.MaxLength = 13
            Me.columnInvoice_Index.MaxLength = 13
            Me.columnInvoice_No.MaxLength = 50
            Me.columnCustomer_Index.MaxLength = 13
            Me.columnaddress.MaxLength = 255
            Me.columntel.MaxLength = 50
            Me.columnfax.MaxLength = 50
            Me.columnComment.MaxLength = 255
            Me.columnadd_by.MaxLength = 50
            Me.columnupdate_by.MaxLength = 50
            Me.columncancel_by.MaxLength = 50
            Me.columnDescription.MaxLength = 100
            Me.columnCustomer_Name.MaxLength = 100
            Me.columnCustomer_Id.MaxLength = 13
            Me.columnPaymentType_Index.MaxLength = 13
            Me.columnDocumentType_Index.MaxLength = 13
            Me.columnDocumentType_Des.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_RPT_PaymentRow() As VIEW_RPT_PaymentRow
            Return CType(Me.NewRow,VIEW_RPT_PaymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_RPT_PaymentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_RPT_PaymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_RPT_PaymentRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_PaymentRowChanged(Me, New VIEW_RPT_PaymentRowChangeEvent(CType(e.Row,VIEW_RPT_PaymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_RPT_PaymentRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_PaymentRowChanging(Me, New VIEW_RPT_PaymentRowChangeEvent(CType(e.Row,VIEW_RPT_PaymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_RPT_PaymentRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_PaymentRowDeleted(Me, New VIEW_RPT_PaymentRowChangeEvent(CType(e.Row,VIEW_RPT_PaymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_RPT_PaymentRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_PaymentRowDeleting(Me, New VIEW_RPT_PaymentRowChangeEvent(CType(e.Row,VIEW_RPT_PaymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_RPT_PaymentRow(ByVal row As VIEW_RPT_PaymentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPayment = New dsPayment
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_RPT_PaymentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_RPT_PaymentRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_RPT_Payment As VIEW_RPT_PaymentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_RPT_Payment = CType(Me.Table,VIEW_RPT_PaymentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Payment_No() As String
            Get
                Return CType(Me(Me.tableVIEW_RPT_Payment.Payment_NoColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Payment_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Payment_Date() As Date
            Get
                Return CType(Me(Me.tableVIEW_RPT_Payment.Payment_DateColumn),Date)
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Payment_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Payment_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_RPT_Payment.Payment_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Payment_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.Invoice_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_Index' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Invoice_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.Invoice_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_No' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Invoice_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.Invoice_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_Date' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Invoice_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Payment_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.Payment_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Payment_Amount' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Payment_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.Invoice_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_Amount' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Invoice_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.Customer_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Index' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property address() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tel() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.telColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tel' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.telColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fax' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Comment() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.CommentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comment' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.CommentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_by() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.add_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_by' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.add_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.add_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_date' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.add_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_branch() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.add_branchColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_branch' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.add_branchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property update_by() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.update_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'update_by' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.update_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property update_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.update_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'update_date' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.update_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property update_branch() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.update_branchColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'update_branch' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.update_branchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cancel_by() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.cancel_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cancel_by' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.cancel_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cancel_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.cancel_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cancel_date' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.cancel_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cancel_branch() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.cancel_branchColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cancel_branch' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.cancel_branchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.Status_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status_id' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Status_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.Customer_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Id' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.Customer_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PaymentType_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.PaymentType_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PaymentType_Index' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.PaymentType_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocumentType_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.DocumentType_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentType_Index' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.DocumentType_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocumentType_Des() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_Payment.DocumentType_DesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentType_Des' in table 'VIEW_RPT_Payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_Payment.DocumentType_DesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.Invoice_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_IndexNull()
            Me(Me.tableVIEW_RPT_Payment.Invoice_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.Invoice_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_NoNull()
            Me(Me.tableVIEW_RPT_Payment.Invoice_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.Invoice_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_DateNull()
            Me(Me.tableVIEW_RPT_Payment.Invoice_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPayment_AmountNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.Payment_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPayment_AmountNull()
            Me(Me.tableVIEW_RPT_Payment.Payment_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_AmountNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.Invoice_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_AmountNull()
            Me(Me.tableVIEW_RPT_Payment.Invoice_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.Customer_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IndexNull()
            Me(Me.tableVIEW_RPT_Payment.Customer_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsaddressNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetaddressNull()
            Me(Me.tableVIEW_RPT_Payment.addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstelNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.telColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettelNull()
            Me(Me.tableVIEW_RPT_Payment.telColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfaxNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfaxNull()
            Me(Me.tableVIEW_RPT_Payment.faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCommentNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.CommentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCommentNull()
            Me(Me.tableVIEW_RPT_Payment.CommentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_byNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.add_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_byNull()
            Me(Me.tableVIEW_RPT_Payment.add_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.add_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_dateNull()
            Me(Me.tableVIEW_RPT_Payment.add_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_branchNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.add_branchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_branchNull()
            Me(Me.tableVIEW_RPT_Payment.add_branchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupdate_byNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.update_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupdate_byNull()
            Me(Me.tableVIEW_RPT_Payment.update_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupdate_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.update_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupdate_dateNull()
            Me(Me.tableVIEW_RPT_Payment.update_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupdate_branchNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.update_branchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupdate_branchNull()
            Me(Me.tableVIEW_RPT_Payment.update_branchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscancel_byNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.cancel_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcancel_byNull()
            Me(Me.tableVIEW_RPT_Payment.cancel_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscancel_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.cancel_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcancel_dateNull()
            Me(Me.tableVIEW_RPT_Payment.cancel_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscancel_branchNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.cancel_branchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcancel_branchNull()
            Me(Me.tableVIEW_RPT_Payment.cancel_branchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatus_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.Status_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatus_idNull()
            Me(Me.tableVIEW_RPT_Payment.Status_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableVIEW_RPT_Payment.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableVIEW_RPT_Payment.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.Customer_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IdNull()
            Me(Me.tableVIEW_RPT_Payment.Customer_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPaymentType_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.PaymentType_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPaymentType_IndexNull()
            Me(Me.tableVIEW_RPT_Payment.PaymentType_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocumentType_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.DocumentType_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocumentType_IndexNull()
            Me(Me.tableVIEW_RPT_Payment.DocumentType_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocumentType_DesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_Payment.DocumentType_DesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocumentType_DesNull()
            Me(Me.tableVIEW_RPT_Payment.DocumentType_DesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_RPT_PaymentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_RPT_PaymentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_RPT_PaymentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_RPT_PaymentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
