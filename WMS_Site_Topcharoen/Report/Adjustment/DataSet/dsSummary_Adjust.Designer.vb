'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8833
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsSummary_Adjust"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsSummary_Adjust
    Inherits Global.System.Data.DataSet
    
    Private tableVIEW_Summary_Adjust As VIEW_Summary_AdjustDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VIEW_Summary_Adjust")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_Summary_AdjustDataTable(ds.Tables("VIEW_Summary_Adjust")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_Summary_Adjust() As VIEW_Summary_AdjustDataTable
        Get
            Return Me.tableVIEW_Summary_Adjust
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsSummary_Adjust = CType(MyBase.Clone,dsSummary_Adjust)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("VIEW_Summary_Adjust")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_Summary_AdjustDataTable(ds.Tables("VIEW_Summary_Adjust")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVIEW_Summary_Adjust = CType(MyBase.Tables("VIEW_Summary_Adjust"),VIEW_Summary_AdjustDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_Summary_Adjust) Is Nothing) Then
                Me.tableVIEW_Summary_Adjust.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsSummary_Adjust"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsSummary_Adjust.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVIEW_Summary_Adjust = New VIEW_Summary_AdjustDataTable
        MyBase.Tables.Add(Me.tableVIEW_Summary_Adjust)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_Summary_Adjust() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsSummary_Adjust = New dsSummary_Adjust
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub VIEW_Summary_AdjustRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_Summary_AdjustRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_Summary_AdjustDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnLocation_Alias As Global.System.Data.DataColumn
        
        Private columnTag_No As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnOrder_No As Global.System.Data.DataColumn
        
        Private columnOrder_Date As Global.System.Data.DataColumn
        
        Private columnLot_No As Global.System.Data.DataColumn
        
        Private columnPLot As Global.System.Data.DataColumn
        
        Private columnSerial_No As Global.System.Data.DataColumn
        
        Private columnQty_Bal As Global.System.Data.DataColumn
        
        Private columnPallet_Qty As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnPallet_Name As Global.System.Data.DataColumn
        
        Private columnItemStatus_Description As Global.System.Data.DataColumn
        
        Private columnProduct_Name_th As Global.System.Data.DataColumn
        
        Private columnSKU_Description As Global.System.Data.DataColumn
        
        Private columnSKU_Package As Global.System.Data.DataColumn
        
        Private columnProductType_Id As Global.System.Data.DataColumn
        
        Private columnProductType As Global.System.Data.DataColumn
        
        Private columnIsMfg_Date As Global.System.Data.DataColumn
        
        Private columnMfg_Date As Global.System.Data.DataColumn
        
        Private columnIsExp_Date As Global.System.Data.DataColumn
        
        Private columnExp_Date As Global.System.Data.DataColumn
        
        Private columnQty_1st_Count As Global.System.Data.DataColumn
        
        Private columnQty_2nd_Count As Global.System.Data.DataColumn
        
        Private columnQty_3rd_Count As Global.System.Data.DataColumn
        
        Private columnAdjust_Qty As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnAdjust_Index As Global.System.Data.DataColumn
        
        Private columnAdjust_No As Global.System.Data.DataColumn
        
        Private columnAdjust_Date As Global.System.Data.DataColumn
        
        Private columnProcess_ID As Global.System.Data.DataColumn
        
        Private columnProcess_Name As Global.System.Data.DataColumn
        
        Private columnDiff_Qty As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_Summary_Adjust"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Location_AliasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocation_Alias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tag_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTag_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Order_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrder_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Order_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrder_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Lot_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLot_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PLotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Serial_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerial_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Pallet_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPallet_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Pallet_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPallet_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemStatus_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemStatus_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Product_Name_thColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Name_th
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SKU_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SKU_PackageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU_Package
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductType_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductType_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IsMfg_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsMfg_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Mfg_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMfg_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IsExp_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsExp_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Exp_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExp_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_1st_CountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_1st_Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_2nd_CountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_2nd_Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_3rd_CountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_3rd_Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Adjust_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjust_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Adjust_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjust_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Adjust_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjust_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Adjust_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjust_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Process_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcess_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Process_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcess_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Diff_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiff_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_Summary_AdjustRow
            Get
                Return CType(Me.Rows(index),VIEW_Summary_AdjustRow)
            End Get
        End Property
        
        Public Event VIEW_Summary_AdjustRowChanging As VIEW_Summary_AdjustRowChangeEventHandler
        
        Public Event VIEW_Summary_AdjustRowChanged As VIEW_Summary_AdjustRowChangeEventHandler
        
        Public Event VIEW_Summary_AdjustRowDeleting As VIEW_Summary_AdjustRowChangeEventHandler
        
        Public Event VIEW_Summary_AdjustRowDeleted As VIEW_Summary_AdjustRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_Summary_AdjustRow(ByVal row As VIEW_Summary_AdjustRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_Summary_AdjustRow( _
                    ByVal Location_Alias As String,  _
                    ByVal Tag_No As String,  _
                    ByVal Sku_Id As String,  _
                    ByVal Order_No As String,  _
                    ByVal Order_Date As Date,  _
                    ByVal Lot_No As String,  _
                    ByVal PLot As String,  _
                    ByVal Serial_No As String,  _
                    ByVal Qty_Bal As Double,  _
                    ByVal Pallet_Qty As Integer,  _
                    ByVal Title As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal Pallet_Name As String,  _
                    ByVal ItemStatus_Description As String,  _
                    ByVal Product_Name_th As String,  _
                    ByVal SKU_Description As String,  _
                    ByVal SKU_Package As String,  _
                    ByVal ProductType_Id As String,  _
                    ByVal ProductType As String,  _
                    ByVal IsMfg_Date As Boolean,  _
                    ByVal Mfg_Date As Date,  _
                    ByVal IsExp_Date As Boolean,  _
                    ByVal Exp_Date As Date,  _
                    ByVal Qty_1st_Count As Double,  _
                    ByVal Qty_2nd_Count As Double,  _
                    ByVal Qty_3rd_Count As Double,  _
                    ByVal Adjust_Qty As Double,  _
                    ByVal Status As Integer,  _
                    ByVal Adjust_Index As String,  _
                    ByVal Adjust_No As String,  _
                    ByVal Adjust_Date As Date,  _
                    ByVal Process_ID As Integer,  _
                    ByVal Process_Name As String,  _
                    ByVal Diff_Qty As Double) As VIEW_Summary_AdjustRow
            Dim rowVIEW_Summary_AdjustRow As VIEW_Summary_AdjustRow = CType(Me.NewRow,VIEW_Summary_AdjustRow)
            Dim columnValuesArray() As Object = New Object() {Location_Alias, Tag_No, Sku_Id, Order_No, Order_Date, Lot_No, PLot, Serial_No, Qty_Bal, Pallet_Qty, Title, Customer_Name, Pallet_Name, ItemStatus_Description, Product_Name_th, SKU_Description, SKU_Package, ProductType_Id, ProductType, IsMfg_Date, Mfg_Date, IsExp_Date, Exp_Date, Qty_1st_Count, Qty_2nd_Count, Qty_3rd_Count, Adjust_Qty, Status, Adjust_Index, Adjust_No, Adjust_Date, Process_ID, Process_Name, Diff_Qty}
            rowVIEW_Summary_AdjustRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_Summary_AdjustRow)
            Return rowVIEW_Summary_AdjustRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByAdjust_Index(ByVal Adjust_Index As String) As VIEW_Summary_AdjustRow
            Return CType(Me.Rows.Find(New Object() {Adjust_Index}),VIEW_Summary_AdjustRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_Summary_AdjustDataTable = CType(MyBase.Clone,VIEW_Summary_AdjustDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_Summary_AdjustDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnLocation_Alias = MyBase.Columns("Location_Alias")
            Me.columnTag_No = MyBase.Columns("Tag_No")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnOrder_No = MyBase.Columns("Order_No")
            Me.columnOrder_Date = MyBase.Columns("Order_Date")
            Me.columnLot_No = MyBase.Columns("Lot_No")
            Me.columnPLot = MyBase.Columns("PLot")
            Me.columnSerial_No = MyBase.Columns("Serial_No")
            Me.columnQty_Bal = MyBase.Columns("Qty_Bal")
            Me.columnPallet_Qty = MyBase.Columns("Pallet_Qty")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnPallet_Name = MyBase.Columns("Pallet_Name")
            Me.columnItemStatus_Description = MyBase.Columns("ItemStatus_Description")
            Me.columnProduct_Name_th = MyBase.Columns("Product_Name_th")
            Me.columnSKU_Description = MyBase.Columns("SKU_Description")
            Me.columnSKU_Package = MyBase.Columns("SKU_Package")
            Me.columnProductType_Id = MyBase.Columns("ProductType_Id")
            Me.columnProductType = MyBase.Columns("ProductType")
            Me.columnIsMfg_Date = MyBase.Columns("IsMfg_Date")
            Me.columnMfg_Date = MyBase.Columns("Mfg_Date")
            Me.columnIsExp_Date = MyBase.Columns("IsExp_Date")
            Me.columnExp_Date = MyBase.Columns("Exp_Date")
            Me.columnQty_1st_Count = MyBase.Columns("Qty_1st_Count")
            Me.columnQty_2nd_Count = MyBase.Columns("Qty_2nd_Count")
            Me.columnQty_3rd_Count = MyBase.Columns("Qty_3rd_Count")
            Me.columnAdjust_Qty = MyBase.Columns("Adjust_Qty")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnAdjust_Index = MyBase.Columns("Adjust_Index")
            Me.columnAdjust_No = MyBase.Columns("Adjust_No")
            Me.columnAdjust_Date = MyBase.Columns("Adjust_Date")
            Me.columnProcess_ID = MyBase.Columns("Process_ID")
            Me.columnProcess_Name = MyBase.Columns("Process_Name")
            Me.columnDiff_Qty = MyBase.Columns("Diff_Qty")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnLocation_Alias = New Global.System.Data.DataColumn("Location_Alias", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation_Alias)
            Me.columnTag_No = New Global.System.Data.DataColumn("Tag_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTag_No)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnOrder_No = New Global.System.Data.DataColumn("Order_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrder_No)
            Me.columnOrder_Date = New Global.System.Data.DataColumn("Order_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrder_Date)
            Me.columnLot_No = New Global.System.Data.DataColumn("Lot_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLot_No)
            Me.columnPLot = New Global.System.Data.DataColumn("PLot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLot)
            Me.columnSerial_No = New Global.System.Data.DataColumn("Serial_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerial_No)
            Me.columnQty_Bal = New Global.System.Data.DataColumn("Qty_Bal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_Bal)
            Me.columnPallet_Qty = New Global.System.Data.DataColumn("Pallet_Qty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPallet_Qty)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnPallet_Name = New Global.System.Data.DataColumn("Pallet_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPallet_Name)
            Me.columnItemStatus_Description = New Global.System.Data.DataColumn("ItemStatus_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemStatus_Description)
            Me.columnProduct_Name_th = New Global.System.Data.DataColumn("Product_Name_th", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Name_th)
            Me.columnSKU_Description = New Global.System.Data.DataColumn("SKU_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU_Description)
            Me.columnSKU_Package = New Global.System.Data.DataColumn("SKU_Package", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU_Package)
            Me.columnProductType_Id = New Global.System.Data.DataColumn("ProductType_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductType_Id)
            Me.columnProductType = New Global.System.Data.DataColumn("ProductType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductType)
            Me.columnIsMfg_Date = New Global.System.Data.DataColumn("IsMfg_Date", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsMfg_Date)
            Me.columnMfg_Date = New Global.System.Data.DataColumn("Mfg_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMfg_Date)
            Me.columnIsExp_Date = New Global.System.Data.DataColumn("IsExp_Date", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsExp_Date)
            Me.columnExp_Date = New Global.System.Data.DataColumn("Exp_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExp_Date)
            Me.columnQty_1st_Count = New Global.System.Data.DataColumn("Qty_1st_Count", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_1st_Count)
            Me.columnQty_2nd_Count = New Global.System.Data.DataColumn("Qty_2nd_Count", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_2nd_Count)
            Me.columnQty_3rd_Count = New Global.System.Data.DataColumn("Qty_3rd_Count", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_3rd_Count)
            Me.columnAdjust_Qty = New Global.System.Data.DataColumn("Adjust_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjust_Qty)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnAdjust_Index = New Global.System.Data.DataColumn("Adjust_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjust_Index)
            Me.columnAdjust_No = New Global.System.Data.DataColumn("Adjust_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjust_No)
            Me.columnAdjust_Date = New Global.System.Data.DataColumn("Adjust_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjust_Date)
            Me.columnProcess_ID = New Global.System.Data.DataColumn("Process_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcess_ID)
            Me.columnProcess_Name = New Global.System.Data.DataColumn("Process_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcess_Name)
            Me.columnDiff_Qty = New Global.System.Data.DataColumn("Diff_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiff_Qty)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAdjust_Index}, true))
            Me.columnLocation_Alias.MaxLength = 50
            Me.columnTag_No.AllowDBNull = false
            Me.columnTag_No.MaxLength = 50
            Me.columnSku_Id.MaxLength = 50
            Me.columnOrder_No.MaxLength = 50
            Me.columnOrder_Date.AllowDBNull = false
            Me.columnLot_No.MaxLength = 50
            Me.columnPLot.MaxLength = 50
            Me.columnSerial_No.MaxLength = 50
            Me.columnTitle.MaxLength = 50
            Me.columnCustomer_Name.MaxLength = 100
            Me.columnPallet_Name.MaxLength = 100
            Me.columnItemStatus_Description.MaxLength = 100
            Me.columnProduct_Name_th.MaxLength = 255
            Me.columnSKU_Description.MaxLength = 255
            Me.columnSKU_Package.MaxLength = 100
            Me.columnProductType_Id.MaxLength = 50
            Me.columnProductType.MaxLength = 200
            Me.columnAdjust_Index.AllowDBNull = false
            Me.columnAdjust_Index.Unique = true
            Me.columnAdjust_Index.MaxLength = 13
            Me.columnAdjust_No.MaxLength = 50
            Me.columnProcess_ID.ReadOnly = true
            Me.columnProcess_Name.ReadOnly = true
            Me.columnProcess_Name.MaxLength = 10
            Me.columnDiff_Qty.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_Summary_AdjustRow() As VIEW_Summary_AdjustRow
            Return CType(Me.NewRow,VIEW_Summary_AdjustRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_Summary_AdjustRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_Summary_AdjustRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_Summary_AdjustRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_Summary_AdjustRowChanged(Me, New VIEW_Summary_AdjustRowChangeEvent(CType(e.Row,VIEW_Summary_AdjustRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_Summary_AdjustRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_Summary_AdjustRowChanging(Me, New VIEW_Summary_AdjustRowChangeEvent(CType(e.Row,VIEW_Summary_AdjustRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_Summary_AdjustRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_Summary_AdjustRowDeleted(Me, New VIEW_Summary_AdjustRowChangeEvent(CType(e.Row,VIEW_Summary_AdjustRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_Summary_AdjustRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_Summary_AdjustRowDeleting(Me, New VIEW_Summary_AdjustRowChangeEvent(CType(e.Row,VIEW_Summary_AdjustRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_Summary_AdjustRow(ByVal row As VIEW_Summary_AdjustRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsSummary_Adjust = New dsSummary_Adjust
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_Summary_AdjustDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_Summary_AdjustRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_Summary_Adjust As VIEW_Summary_AdjustDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_Summary_Adjust = CType(Me.Table,VIEW_Summary_AdjustDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location_Alias() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Location_AliasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Location_Alias' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Location_AliasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tag_No() As String
            Get
                Return CType(Me(Me.tableVIEW_Summary_Adjust.Tag_NoColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Tag_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Order_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Order_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Order_No' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Order_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Order_Date() As Date
            Get
                Return CType(Me(Me.tableVIEW_Summary_Adjust.Order_DateColumn),Date)
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Order_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Lot_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Lot_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Lot_No' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Lot_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PLot() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.PLotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLot' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.PLotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Serial_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Serial_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Serial_No' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Serial_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_Bal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Qty_BalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_Bal' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Qty_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pallet_Qty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Pallet_QtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pallet_Qty' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Pallet_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Title' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pallet_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Pallet_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pallet_Name' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Pallet_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemStatus_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.ItemStatus_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemStatus_Description' in table 'VIEW_Summary_Adjust' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.ItemStatus_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Product_Name_th() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Product_Name_thColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_Name_th' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Product_Name_thColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SKU_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.SKU_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SKU_Description' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.SKU_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SKU_Package() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.SKU_PackageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SKU_Package' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.SKU_PackageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductType_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.ProductType_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductType_Id' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.ProductType_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductType() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.ProductTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductType' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.ProductTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IsMfg_Date() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.IsMfg_DateColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsMfg_Date' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.IsMfg_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mfg_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Mfg_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mfg_Date' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Mfg_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IsExp_Date() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.IsExp_DateColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsExp_Date' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.IsExp_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Exp_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Exp_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Exp_Date' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Exp_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_1st_Count() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Qty_1st_CountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_1st_Count' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Qty_1st_CountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_2nd_Count() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Qty_2nd_CountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_2nd_Count' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Qty_2nd_CountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_3rd_Count() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Qty_3rd_CountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_3rd_Count' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Qty_3rd_CountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Adjust_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Adjust_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Adjust_Qty' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Adjust_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.StatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Adjust_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_Summary_Adjust.Adjust_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Adjust_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Adjust_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Adjust_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Adjust_No' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Adjust_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Adjust_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Adjust_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Adjust_Date' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Adjust_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Process_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Process_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Process_ID' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Process_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Process_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Process_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Process_Name' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Process_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Diff_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Summary_Adjust.Diff_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Diff_Qty' in table 'VIEW_Summary_Adjust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Summary_Adjust.Diff_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocation_AliasNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Location_AliasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocation_AliasNull()
            Me(Me.tableVIEW_Summary_Adjust.Location_AliasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableVIEW_Summary_Adjust.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOrder_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Order_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOrder_NoNull()
            Me(Me.tableVIEW_Summary_Adjust.Order_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLot_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Lot_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLot_NoNull()
            Me(Me.tableVIEW_Summary_Adjust.Lot_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPLotNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.PLotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPLotNull()
            Me(Me.tableVIEW_Summary_Adjust.PLotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSerial_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Serial_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSerial_NoNull()
            Me(Me.tableVIEW_Summary_Adjust.Serial_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_BalNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Qty_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_BalNull()
            Me(Me.tableVIEW_Summary_Adjust.Qty_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPallet_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Pallet_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPallet_QtyNull()
            Me(Me.tableVIEW_Summary_Adjust.Pallet_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTitleNull()
            Me(Me.tableVIEW_Summary_Adjust.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableVIEW_Summary_Adjust.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPallet_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Pallet_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPallet_NameNull()
            Me(Me.tableVIEW_Summary_Adjust.Pallet_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemStatus_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.ItemStatus_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemStatus_DescriptionNull()
            Me(Me.tableVIEW_Summary_Adjust.ItemStatus_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProduct_Name_thNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Product_Name_thColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProduct_Name_thNull()
            Me(Me.tableVIEW_Summary_Adjust.Product_Name_thColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSKU_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.SKU_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSKU_DescriptionNull()
            Me(Me.tableVIEW_Summary_Adjust.SKU_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSKU_PackageNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.SKU_PackageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSKU_PackageNull()
            Me(Me.tableVIEW_Summary_Adjust.SKU_PackageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductType_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.ProductType_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductType_IdNull()
            Me(Me.tableVIEW_Summary_Adjust.ProductType_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductTypeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.ProductTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductTypeNull()
            Me(Me.tableVIEW_Summary_Adjust.ProductTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIsMfg_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.IsMfg_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIsMfg_DateNull()
            Me(Me.tableVIEW_Summary_Adjust.IsMfg_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMfg_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Mfg_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMfg_DateNull()
            Me(Me.tableVIEW_Summary_Adjust.Mfg_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIsExp_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.IsExp_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIsExp_DateNull()
            Me(Me.tableVIEW_Summary_Adjust.IsExp_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExp_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Exp_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExp_DateNull()
            Me(Me.tableVIEW_Summary_Adjust.Exp_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_1st_CountNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Qty_1st_CountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_1st_CountNull()
            Me(Me.tableVIEW_Summary_Adjust.Qty_1st_CountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_2nd_CountNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Qty_2nd_CountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_2nd_CountNull()
            Me(Me.tableVIEW_Summary_Adjust.Qty_2nd_CountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_3rd_CountNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Qty_3rd_CountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_3rd_CountNull()
            Me(Me.tableVIEW_Summary_Adjust.Qty_3rd_CountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAdjust_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Adjust_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAdjust_QtyNull()
            Me(Me.tableVIEW_Summary_Adjust.Adjust_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNull()
            Me(Me.tableVIEW_Summary_Adjust.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAdjust_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Adjust_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAdjust_NoNull()
            Me(Me.tableVIEW_Summary_Adjust.Adjust_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAdjust_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Adjust_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAdjust_DateNull()
            Me(Me.tableVIEW_Summary_Adjust.Adjust_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProcess_IDNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Process_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProcess_IDNull()
            Me(Me.tableVIEW_Summary_Adjust.Process_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProcess_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Process_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProcess_NameNull()
            Me(Me.tableVIEW_Summary_Adjust.Process_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiff_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Summary_Adjust.Diff_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiff_QtyNull()
            Me(Me.tableVIEW_Summary_Adjust.Diff_QtyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_Summary_AdjustRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_Summary_AdjustRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_Summary_AdjustRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_Summary_AdjustRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
