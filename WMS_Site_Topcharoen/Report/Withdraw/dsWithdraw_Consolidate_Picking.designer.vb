'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8784
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsWithdraw_Consolidate_Picking"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsWithdraw_Consolidate_Picking
    Inherits Global.System.Data.DataSet
    
    Private tabledtWithdraw_Consolidate_Picking As dtWithdraw_Consolidate_PickingDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dtWithdraw_Consolidate_Picking")) Is Nothing) Then
                MyBase.Tables.Add(New dtWithdraw_Consolidate_PickingDataTable(ds.Tables("dtWithdraw_Consolidate_Picking")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtWithdraw_Consolidate_Picking() As dtWithdraw_Consolidate_PickingDataTable
        Get
            Return Me.tabledtWithdraw_Consolidate_Picking
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsWithdraw_Consolidate_Picking = CType(MyBase.Clone,dsWithdraw_Consolidate_Picking)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("dtWithdraw_Consolidate_Picking")) Is Nothing) Then
                MyBase.Tables.Add(New dtWithdraw_Consolidate_PickingDataTable(ds.Tables("dtWithdraw_Consolidate_Picking")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledtWithdraw_Consolidate_Picking = CType(MyBase.Tables("dtWithdraw_Consolidate_Picking"),dtWithdraw_Consolidate_PickingDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtWithdraw_Consolidate_Picking) Is Nothing) Then
                Me.tabledtWithdraw_Consolidate_Picking.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsWithdraw_Consolidate_Picking"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsWithdraw_Consolidate_Picking.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledtWithdraw_Consolidate_Picking = New dtWithdraw_Consolidate_PickingDataTable
        MyBase.Tables.Add(Me.tabledtWithdraw_Consolidate_Picking)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedtWithdraw_Consolidate_Picking() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsWithdraw_Consolidate_Picking = New dsWithdraw_Consolidate_Picking
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub dtWithdraw_Consolidate_PickingRowChangeEventHandler(ByVal sender As Object, ByVal e As dtWithdraw_Consolidate_PickingRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtWithdraw_Consolidate_PickingDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnPicking_No As Global.System.Data.DataColumn
        
        Private columnPicking_Date As Global.System.Data.DataColumn
        
        Private columnPicking_Create_by As Global.System.Data.DataColumn
        
        Private columnPicking_Create_Date As Global.System.Data.DataColumn
        
        Private columnDN_No As Global.System.Data.DataColumn
        
        Private columnDN_Date As Global.System.Data.DataColumn
        
        Private columnDN_Seq As Global.System.Data.DataColumn
        
        Private columnDN_Remark As Global.System.Data.DataColumn
        
        Private columnDN_Qty As Global.System.Data.DataColumn
        
        Private columnSold_To_Id As Global.System.Data.DataColumn
        
        Private columnSold_To_Name As Global.System.Data.DataColumn
        
        Private columnSold_To_Address As Global.System.Data.DataColumn
        
        Private columnSold_To_Contract As Global.System.Data.DataColumn
        
        Private columnShip_To_Id As Global.System.Data.DataColumn
        
        Private columnShip_To_Name As Global.System.Data.DataColumn
        
        Private columnShip_to_Address As Global.System.Data.DataColumn
        
        Private columnShip_To_Contract As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnSku_Name As Global.System.Data.DataColumn
        
        Private columnSku_Unit As Global.System.Data.DataColumn
        
        Private columnSku_Barcode As Global.System.Data.DataColumn
        
        Private columnBin As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtWithdraw_Consolidate_Picking"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Picking_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPicking_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Picking_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPicking_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Picking_Create_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPicking_Create_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Picking_Create_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPicking_Create_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DN_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDN_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DN_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDN_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DN_SeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDN_Seq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DN_RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDN_Remark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DN_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDN_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sold_To_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSold_To_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sold_To_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSold_To_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sold_To_AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSold_To_Address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sold_To_ContractColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSold_To_Contract
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ship_To_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShip_To_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ship_To_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShip_To_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ship_to_AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShip_to_Address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ship_To_ContractColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShip_To_Contract
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_UnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Unit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_BarcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Barcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtWithdraw_Consolidate_PickingRow
            Get
                Return CType(Me.Rows(index),dtWithdraw_Consolidate_PickingRow)
            End Get
        End Property
        
        Public Event dtWithdraw_Consolidate_PickingRowChanging As dtWithdraw_Consolidate_PickingRowChangeEventHandler
        
        Public Event dtWithdraw_Consolidate_PickingRowChanged As dtWithdraw_Consolidate_PickingRowChangeEventHandler
        
        Public Event dtWithdraw_Consolidate_PickingRowDeleting As dtWithdraw_Consolidate_PickingRowChangeEventHandler
        
        Public Event dtWithdraw_Consolidate_PickingRowDeleted As dtWithdraw_Consolidate_PickingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AdddtWithdraw_Consolidate_PickingRow(ByVal row As dtWithdraw_Consolidate_PickingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AdddtWithdraw_Consolidate_PickingRow( _
                    ByVal Picking_No As String,  _
                    ByVal Picking_Date As Date,  _
                    ByVal Picking_Create_by As String,  _
                    ByVal Picking_Create_Date As Date,  _
                    ByVal DN_No As String,  _
                    ByVal DN_Date As Date,  _
                    ByVal DN_Seq As String,  _
                    ByVal DN_Remark As String,  _
                    ByVal DN_Qty As Double,  _
                    ByVal Sold_To_Id As String,  _
                    ByVal Sold_To_Name As String,  _
                    ByVal Sold_To_Address As String,  _
                    ByVal Sold_To_Contract As String,  _
                    ByVal Ship_To_Id As String,  _
                    ByVal Ship_To_Name As String,  _
                    ByVal Ship_to_Address As String,  _
                    ByVal Ship_To_Contract As String,  _
                    ByVal Sku_Id As String,  _
                    ByVal Sku_Name As String,  _
                    ByVal Sku_Unit As String,  _
                    ByVal Sku_Barcode As String,  _
                    ByVal Bin As String) As dtWithdraw_Consolidate_PickingRow
            Dim rowdtWithdraw_Consolidate_PickingRow As dtWithdraw_Consolidate_PickingRow = CType(Me.NewRow,dtWithdraw_Consolidate_PickingRow)
            Dim columnValuesArray() As Object = New Object() {Picking_No, Picking_Date, Picking_Create_by, Picking_Create_Date, DN_No, DN_Date, DN_Seq, DN_Remark, DN_Qty, Sold_To_Id, Sold_To_Name, Sold_To_Address, Sold_To_Contract, Ship_To_Id, Ship_To_Name, Ship_to_Address, Ship_To_Contract, Sku_Id, Sku_Name, Sku_Unit, Sku_Barcode, Bin}
            rowdtWithdraw_Consolidate_PickingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtWithdraw_Consolidate_PickingRow)
            Return rowdtWithdraw_Consolidate_PickingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtWithdraw_Consolidate_PickingDataTable = CType(MyBase.Clone,dtWithdraw_Consolidate_PickingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtWithdraw_Consolidate_PickingDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPicking_No = MyBase.Columns("Picking_No")
            Me.columnPicking_Date = MyBase.Columns("Picking_Date")
            Me.columnPicking_Create_by = MyBase.Columns("Picking_Create_by")
            Me.columnPicking_Create_Date = MyBase.Columns("Picking_Create_Date")
            Me.columnDN_No = MyBase.Columns("DN_No")
            Me.columnDN_Date = MyBase.Columns("DN_Date")
            Me.columnDN_Seq = MyBase.Columns("DN_Seq")
            Me.columnDN_Remark = MyBase.Columns("DN_Remark")
            Me.columnDN_Qty = MyBase.Columns("DN_Qty")
            Me.columnSold_To_Id = MyBase.Columns("Sold_To_Id")
            Me.columnSold_To_Name = MyBase.Columns("Sold_To_Name")
            Me.columnSold_To_Address = MyBase.Columns("Sold_To_Address")
            Me.columnSold_To_Contract = MyBase.Columns("Sold_To_Contract")
            Me.columnShip_To_Id = MyBase.Columns("Ship_To_Id")
            Me.columnShip_To_Name = MyBase.Columns("Ship_To_Name")
            Me.columnShip_to_Address = MyBase.Columns("Ship_To_Address")
            Me.columnShip_To_Contract = MyBase.Columns("Ship_To_Contract")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnSku_Name = MyBase.Columns("Sku_Name")
            Me.columnSku_Unit = MyBase.Columns("Sku_Unit")
            Me.columnSku_Barcode = MyBase.Columns("Sku_Barcode")
            Me.columnBin = MyBase.Columns("Bin")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPicking_No = New Global.System.Data.DataColumn("Picking_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPicking_No)
            Me.columnPicking_Date = New Global.System.Data.DataColumn("Picking_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPicking_Date)
            Me.columnPicking_Create_by = New Global.System.Data.DataColumn("Picking_Create_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPicking_Create_by)
            Me.columnPicking_Create_Date = New Global.System.Data.DataColumn("Picking_Create_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPicking_Create_Date)
            Me.columnDN_No = New Global.System.Data.DataColumn("DN_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDN_No)
            Me.columnDN_Date = New Global.System.Data.DataColumn("DN_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDN_Date)
            Me.columnDN_Seq = New Global.System.Data.DataColumn("DN_Seq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDN_Seq)
            Me.columnDN_Remark = New Global.System.Data.DataColumn("DN_Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDN_Remark)
            Me.columnDN_Qty = New Global.System.Data.DataColumn("DN_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDN_Qty)
            Me.columnSold_To_Id = New Global.System.Data.DataColumn("Sold_To_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSold_To_Id)
            Me.columnSold_To_Name = New Global.System.Data.DataColumn("Sold_To_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSold_To_Name)
            Me.columnSold_To_Address = New Global.System.Data.DataColumn("Sold_To_Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSold_To_Address)
            Me.columnSold_To_Contract = New Global.System.Data.DataColumn("Sold_To_Contract", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSold_To_Contract)
            Me.columnShip_To_Id = New Global.System.Data.DataColumn("Ship_To_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShip_To_Id)
            Me.columnShip_To_Name = New Global.System.Data.DataColumn("Ship_To_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShip_To_Name)
            Me.columnShip_to_Address = New Global.System.Data.DataColumn("Ship_To_Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnShip_to_Address.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Ship_to_Address")
            Me.columnShip_to_Address.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Ship_to_AddressColumn")
            Me.columnShip_to_Address.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnShip_to_Address")
            Me.columnShip_to_Address.ExtendedProperties.Add("Generator_UserColumnName", "Ship_To_Address")
            MyBase.Columns.Add(Me.columnShip_to_Address)
            Me.columnShip_To_Contract = New Global.System.Data.DataColumn("Ship_To_Contract", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShip_To_Contract)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnSku_Name = New Global.System.Data.DataColumn("Sku_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Name)
            Me.columnSku_Unit = New Global.System.Data.DataColumn("Sku_Unit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Unit)
            Me.columnSku_Barcode = New Global.System.Data.DataColumn("Sku_Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Barcode)
            Me.columnBin = New Global.System.Data.DataColumn("Bin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBin)
            Me.columnDN_Qty.Caption = "Open_Qty"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewdtWithdraw_Consolidate_PickingRow() As dtWithdraw_Consolidate_PickingRow
            Return CType(Me.NewRow,dtWithdraw_Consolidate_PickingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtWithdraw_Consolidate_PickingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtWithdraw_Consolidate_PickingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtWithdraw_Consolidate_PickingRowChangedEvent) Is Nothing) Then
                RaiseEvent dtWithdraw_Consolidate_PickingRowChanged(Me, New dtWithdraw_Consolidate_PickingRowChangeEvent(CType(e.Row,dtWithdraw_Consolidate_PickingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtWithdraw_Consolidate_PickingRowChangingEvent) Is Nothing) Then
                RaiseEvent dtWithdraw_Consolidate_PickingRowChanging(Me, New dtWithdraw_Consolidate_PickingRowChangeEvent(CType(e.Row,dtWithdraw_Consolidate_PickingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtWithdraw_Consolidate_PickingRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtWithdraw_Consolidate_PickingRowDeleted(Me, New dtWithdraw_Consolidate_PickingRowChangeEvent(CType(e.Row,dtWithdraw_Consolidate_PickingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtWithdraw_Consolidate_PickingRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtWithdraw_Consolidate_PickingRowDeleting(Me, New dtWithdraw_Consolidate_PickingRowChangeEvent(CType(e.Row,dtWithdraw_Consolidate_PickingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovedtWithdraw_Consolidate_PickingRow(ByVal row As dtWithdraw_Consolidate_PickingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsWithdraw_Consolidate_Picking = New dsWithdraw_Consolidate_Picking
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtWithdraw_Consolidate_PickingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dtWithdraw_Consolidate_PickingRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtWithdraw_Consolidate_Picking As dtWithdraw_Consolidate_PickingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtWithdraw_Consolidate_Picking = CType(Me.Table,dtWithdraw_Consolidate_PickingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Picking_No() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Picking_No' in table 'dtWithdraw_Consolidate_Picking' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Picking_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Picking_Date' in table 'dtWithdraw_Consolidate_Picking' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Picking_Create_by() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_Create_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Picking_Create_by' in table 'dtWithdraw_Consolidate_Picking"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_Create_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Picking_Create_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_Create_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Picking_Create_Date' in table 'dtWithdraw_Consolidate_Picki"& _ 
                            "ng' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_Create_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DN_No() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.DN_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DN_No' in table 'dtWithdraw_Consolidate_Picking' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.DN_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DN_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.DN_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DN_Date' in table 'dtWithdraw_Consolidate_Picking' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.DN_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DN_Seq() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.DN_SeqColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DN_Seq' in table 'dtWithdraw_Consolidate_Picking' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.DN_SeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DN_Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.DN_RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DN_Remark' in table 'dtWithdraw_Consolidate_Picking' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.DN_RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DN_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.DN_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DN_Qty' in table 'dtWithdraw_Consolidate_Picking' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.DN_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sold_To_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sold_To_Id' in table 'dtWithdraw_Consolidate_Picking' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sold_To_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sold_To_Name' in table 'dtWithdraw_Consolidate_Picking' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sold_To_Address() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sold_To_Address' in table 'dtWithdraw_Consolidate_Picking' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sold_To_Contract() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_ContractColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sold_To_Contract' in table 'dtWithdraw_Consolidate_Picking'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_ContractColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ship_To_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ship_To_Id' in table 'dtWithdraw_Consolidate_Picking' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ship_To_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ship_To_Name' in table 'dtWithdraw_Consolidate_Picking' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ship_to_Address() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_to_AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ship_To_Address' in table 'dtWithdraw_Consolidate_Picking' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_to_AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ship_To_Contract() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_ContractColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ship_To_Contract' in table 'dtWithdraw_Consolidate_Picking'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_ContractColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'dtWithdraw_Consolidate_Picking' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Name' in table 'dtWithdraw_Consolidate_Picking' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Unit() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_UnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Unit' in table 'dtWithdraw_Consolidate_Picking' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_UnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Barcode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_BarcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Barcode' in table 'dtWithdraw_Consolidate_Picking' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_BarcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bin() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtWithdraw_Consolidate_Picking.BinColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bin' in table 'dtWithdraw_Consolidate_Picking' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtWithdraw_Consolidate_Picking.BinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPicking_NoNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Picking_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPicking_NoNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPicking_DateNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Picking_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPicking_DateNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPicking_Create_byNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Picking_Create_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPicking_Create_byNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_Create_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPicking_Create_DateNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Picking_Create_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPicking_Create_DateNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Picking_Create_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDN_NoNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.DN_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDN_NoNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.DN_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDN_DateNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.DN_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDN_DateNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.DN_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDN_SeqNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.DN_SeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDN_SeqNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.DN_SeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDN_RemarkNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.DN_RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDN_RemarkNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.DN_RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDN_QtyNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.DN_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDN_QtyNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.DN_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSold_To_IdNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSold_To_IdNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSold_To_NameNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSold_To_NameNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSold_To_AddressNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSold_To_AddressNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSold_To_ContractNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_ContractColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSold_To_ContractNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Sold_To_ContractColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShip_To_IdNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShip_To_IdNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShip_To_NameNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShip_To_NameNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShip_to_AddressNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Ship_to_AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShip_to_AddressNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_to_AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShip_To_ContractNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_ContractColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShip_To_ContractNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Ship_To_ContractColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_NameNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Sku_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_NameNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_UnitNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Sku_UnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_UnitNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_UnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_BarcodeNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.Sku_BarcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_BarcodeNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.Sku_BarcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBinNull() As Boolean
            Return Me.IsNull(Me.tabledtWithdraw_Consolidate_Picking.BinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBinNull()
            Me(Me.tabledtWithdraw_Consolidate_Picking.BinColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dtWithdraw_Consolidate_PickingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtWithdraw_Consolidate_PickingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dtWithdraw_Consolidate_PickingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dtWithdraw_Consolidate_PickingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
