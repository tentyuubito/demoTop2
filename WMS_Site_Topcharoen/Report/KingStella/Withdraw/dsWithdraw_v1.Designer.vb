'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8833
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsWithdraw_v1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsWithdraw_v1
    Inherits Global.System.Data.DataSet
    
    Private tableV_RPT_JobWithdraw_Header As V_RPT_JobWithdraw_HeaderDataTable
    
    Private tableV_RPT_JobWithdraw_Detail As V_RPT_JobWithdraw_DetailDataTable
    
    Private relationV_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("V_RPT_JobWithdraw_Header")) Is Nothing) Then
                MyBase.Tables.Add(New V_RPT_JobWithdraw_HeaderDataTable(ds.Tables("V_RPT_JobWithdraw_Header")))
            End If
            If (Not (ds.Tables("V_RPT_JobWithdraw_Detail")) Is Nothing) Then
                MyBase.Tables.Add(New V_RPT_JobWithdraw_DetailDataTable(ds.Tables("V_RPT_JobWithdraw_Detail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V_RPT_JobWithdraw_Header() As V_RPT_JobWithdraw_HeaderDataTable
        Get
            Return Me.tableV_RPT_JobWithdraw_Header
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V_RPT_JobWithdraw_Detail() As V_RPT_JobWithdraw_DetailDataTable
        Get
            Return Me.tableV_RPT_JobWithdraw_Detail
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsWithdraw_v1 = CType(MyBase.Clone,dsWithdraw_v1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("V_RPT_JobWithdraw_Header")) Is Nothing) Then
                MyBase.Tables.Add(New V_RPT_JobWithdraw_HeaderDataTable(ds.Tables("V_RPT_JobWithdraw_Header")))
            End If
            If (Not (ds.Tables("V_RPT_JobWithdraw_Detail")) Is Nothing) Then
                MyBase.Tables.Add(New V_RPT_JobWithdraw_DetailDataTable(ds.Tables("V_RPT_JobWithdraw_Detail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableV_RPT_JobWithdraw_Header = CType(MyBase.Tables("V_RPT_JobWithdraw_Header"),V_RPT_JobWithdraw_HeaderDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV_RPT_JobWithdraw_Header) Is Nothing) Then
                Me.tableV_RPT_JobWithdraw_Header.InitVars
            End If
        End If
        Me.tableV_RPT_JobWithdraw_Detail = CType(MyBase.Tables("V_RPT_JobWithdraw_Detail"),V_RPT_JobWithdraw_DetailDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV_RPT_JobWithdraw_Detail) Is Nothing) Then
                Me.tableV_RPT_JobWithdraw_Detail.InitVars
            End If
        End If
        Me.relationV_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail = Me.Relations("V_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsWithdraw_v1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsWithdraw_v1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableV_RPT_JobWithdraw_Header = New V_RPT_JobWithdraw_HeaderDataTable
        MyBase.Tables.Add(Me.tableV_RPT_JobWithdraw_Header)
        Me.tableV_RPT_JobWithdraw_Detail = New V_RPT_JobWithdraw_DetailDataTable
        MyBase.Tables.Add(Me.tableV_RPT_JobWithdraw_Detail)
        Me.relationV_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail = New Global.System.Data.DataRelation("V_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail", New Global.System.Data.DataColumn() {Me.tableV_RPT_JobWithdraw_Header.Withdraw_IndexColumn}, New Global.System.Data.DataColumn() {Me.tableV_RPT_JobWithdraw_Detail.Withdraw_IndexColumn}, false)
        Me.Relations.Add(Me.relationV_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeV_RPT_JobWithdraw_Header() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeV_RPT_JobWithdraw_Detail() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsWithdraw_v1 = New dsWithdraw_v1
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub V_RPT_JobWithdraw_HeaderRowChangeEventHandler(ByVal sender As Object, ByVal e As V_RPT_JobWithdraw_HeaderRowChangeEvent)
    
    Public Delegate Sub V_RPT_JobWithdraw_DetailRowChangeEventHandler(ByVal sender As Object, ByVal e As V_RPT_JobWithdraw_DetailRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V_RPT_JobWithdraw_HeaderDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnWithdraw_No As Global.System.Data.DataColumn
        
        Private columnWithdraw_Date As Global.System.Data.DataColumn
        
        Private columnRef_No1 As Global.System.Data.DataColumn
        
        Private columnRef_No2 As Global.System.Data.DataColumn
        
        Private columnRef_No3 As Global.System.Data.DataColumn
        
        Private columnRef_No4 As Global.System.Data.DataColumn
        
        Private columnRef_No5 As Global.System.Data.DataColumn
        
        Private columnContact_Name As Global.System.Data.DataColumn
        
        Private columnComment As Global.System.Data.DataColumn
        
        Private columnCustomer_Id As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnTel As Global.System.Data.DataColumn
        
        Private columnFax As Global.System.Data.DataColumn
        
        Private columnMobile As Global.System.Data.DataColumn
        
        Private columnEmail As Global.System.Data.DataColumn
        
        Private columnContact_Person As Global.System.Data.DataColumn
        
        Private columnContact_Person2 As Global.System.Data.DataColumn
        
        Private columnContact_Person3 As Global.System.Data.DataColumn
        
        Private columnProvince As Global.System.Data.DataColumn
        
        Private columnDistrict As Global.System.Data.DataColumn
        
        Private columnWithdraw_Index As Global.System.Data.DataColumn
        
        Private columnDistrict_Index As Global.System.Data.DataColumn
        
        Private columnStr5 As Global.System.Data.DataColumn
        
        Private columnCustomer_ShippingTitle As Global.System.Data.DataColumn
        
        Private columnCustomer_ShippingName As Global.System.Data.DataColumn
        
        Private columnCustomer_ShippingID As Global.System.Data.DataColumn
        
        Private columnSO_No As Global.System.Data.DataColumn
        
        Private columnInvoice_No As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnWithdraw_Barcode As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V_RPT_JobWithdraw_Header"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Withdraw_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdraw_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Withdraw_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdraw_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ref_No5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef_No5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Contact_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContact_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CommentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Contact_PersonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContact_Person
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Contact_Person2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnContact_Person2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Contact_Person3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnContact_Person3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProvinceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvince
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DistrictColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrict
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Withdraw_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdraw_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property District_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrict_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_ShippingTitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_ShippingTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_ShippingNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_ShippingName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_ShippingIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_ShippingID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SO_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSO_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Withdraw_BarcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdraw_Barcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V_RPT_JobWithdraw_HeaderRow
            Get
                Return CType(Me.Rows(index),V_RPT_JobWithdraw_HeaderRow)
            End Get
        End Property
        
        Public Event V_RPT_JobWithdraw_HeaderRowChanging As V_RPT_JobWithdraw_HeaderRowChangeEventHandler
        
        Public Event V_RPT_JobWithdraw_HeaderRowChanged As V_RPT_JobWithdraw_HeaderRowChangeEventHandler
        
        Public Event V_RPT_JobWithdraw_HeaderRowDeleting As V_RPT_JobWithdraw_HeaderRowChangeEventHandler
        
        Public Event V_RPT_JobWithdraw_HeaderRowDeleted As V_RPT_JobWithdraw_HeaderRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddV_RPT_JobWithdraw_HeaderRow(ByVal row As V_RPT_JobWithdraw_HeaderRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddV_RPT_JobWithdraw_HeaderRow( _
                    ByVal Withdraw_No As String,  _
                    ByVal Withdraw_Date As Date,  _
                    ByVal Ref_No1 As String,  _
                    ByVal Ref_No2 As String,  _
                    ByVal Ref_No3 As String,  _
                    ByVal Ref_No4 As String,  _
                    ByVal Ref_No5 As String,  _
                    ByVal Contact_Name As String,  _
                    ByVal Comment As String,  _
                    ByVal Customer_Id As String,  _
                    ByVal Title As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal Address As String,  _
                    ByVal Tel As String,  _
                    ByVal Fax As String,  _
                    ByVal Mobile As String,  _
                    ByVal Email As String,  _
                    ByVal Contact_Person As String,  _
                    ByVal Contact_Person2 As String,  _
                    ByVal Contact_Person3 As String,  _
                    ByVal Province As String,  _
                    ByVal District As String,  _
                    ByVal Withdraw_Index As String,  _
                    ByVal District_Index As String,  _
                    ByVal Str5 As String,  _
                    ByVal Customer_ShippingTitle As String,  _
                    ByVal Customer_ShippingName As String,  _
                    ByVal Customer_ShippingID As String,  _
                    ByVal SO_No As String,  _
                    ByVal Invoice_No As String,  _
                    ByVal Description As String,  _
                    ByVal Withdraw_Barcode() As Byte) As V_RPT_JobWithdraw_HeaderRow
            Dim rowV_RPT_JobWithdraw_HeaderRow As V_RPT_JobWithdraw_HeaderRow = CType(Me.NewRow,V_RPT_JobWithdraw_HeaderRow)
            Dim columnValuesArray() As Object = New Object() {Withdraw_No, Withdraw_Date, Ref_No1, Ref_No2, Ref_No3, Ref_No4, Ref_No5, Contact_Name, Comment, Customer_Id, Title, Customer_Name, Address, Tel, Fax, Mobile, Email, Contact_Person, Contact_Person2, Contact_Person3, Province, District, Withdraw_Index, District_Index, Str5, Customer_ShippingTitle, Customer_ShippingName, Customer_ShippingID, SO_No, Invoice_No, Description, Withdraw_Barcode}
            rowV_RPT_JobWithdraw_HeaderRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV_RPT_JobWithdraw_HeaderRow)
            Return rowV_RPT_JobWithdraw_HeaderRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByWithdraw_Index(ByVal Withdraw_Index As String) As V_RPT_JobWithdraw_HeaderRow
            Return CType(Me.Rows.Find(New Object() {Withdraw_Index}),V_RPT_JobWithdraw_HeaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V_RPT_JobWithdraw_HeaderDataTable = CType(MyBase.Clone,V_RPT_JobWithdraw_HeaderDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V_RPT_JobWithdraw_HeaderDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnWithdraw_No = MyBase.Columns("Withdraw_No")
            Me.columnWithdraw_Date = MyBase.Columns("Withdraw_Date")
            Me.columnRef_No1 = MyBase.Columns("Ref_No1")
            Me.columnRef_No2 = MyBase.Columns("Ref_No2")
            Me.columnRef_No3 = MyBase.Columns("Ref_No3")
            Me.columnRef_No4 = MyBase.Columns("Ref_No4")
            Me.columnRef_No5 = MyBase.Columns("Ref_No5")
            Me.columnContact_Name = MyBase.Columns("Contact_Name")
            Me.columnComment = MyBase.Columns("Comment")
            Me.columnCustomer_Id = MyBase.Columns("Customer_Id")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnTel = MyBase.Columns("Tel")
            Me.columnFax = MyBase.Columns("Fax")
            Me.columnMobile = MyBase.Columns("Mobile")
            Me.columnEmail = MyBase.Columns("Email")
            Me.columnContact_Person = MyBase.Columns("Contact_Person")
            Me.columnContact_Person2 = MyBase.Columns("Contact_Person2")
            Me.columnContact_Person3 = MyBase.Columns("Contact_Person3")
            Me.columnProvince = MyBase.Columns("Province")
            Me.columnDistrict = MyBase.Columns("District")
            Me.columnWithdraw_Index = MyBase.Columns("Withdraw_Index")
            Me.columnDistrict_Index = MyBase.Columns("District_Index")
            Me.columnStr5 = MyBase.Columns("Str5")
            Me.columnCustomer_ShippingTitle = MyBase.Columns("Customer_ShippingTitle")
            Me.columnCustomer_ShippingName = MyBase.Columns("Customer_ShippingName")
            Me.columnCustomer_ShippingID = MyBase.Columns("Customer_ShippingID")
            Me.columnSO_No = MyBase.Columns("SO_No")
            Me.columnInvoice_No = MyBase.Columns("Invoice_No")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnWithdraw_Barcode = MyBase.Columns("Withdraw_Barcode")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnWithdraw_No = New Global.System.Data.DataColumn("Withdraw_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdraw_No)
            Me.columnWithdraw_Date = New Global.System.Data.DataColumn("Withdraw_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdraw_Date)
            Me.columnRef_No1 = New Global.System.Data.DataColumn("Ref_No1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No1)
            Me.columnRef_No2 = New Global.System.Data.DataColumn("Ref_No2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No2)
            Me.columnRef_No3 = New Global.System.Data.DataColumn("Ref_No3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No3)
            Me.columnRef_No4 = New Global.System.Data.DataColumn("Ref_No4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No4)
            Me.columnRef_No5 = New Global.System.Data.DataColumn("Ref_No5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef_No5)
            Me.columnContact_Name = New Global.System.Data.DataColumn("Contact_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContact_Name)
            Me.columnComment = New Global.System.Data.DataColumn("Comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComment)
            Me.columnCustomer_Id = New Global.System.Data.DataColumn("Customer_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Id)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnTel = New Global.System.Data.DataColumn("Tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTel)
            Me.columnFax = New Global.System.Data.DataColumn("Fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFax)
            Me.columnMobile = New Global.System.Data.DataColumn("Mobile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMobile)
            Me.columnEmail = New Global.System.Data.DataColumn("Email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmail)
            Me.columnContact_Person = New Global.System.Data.DataColumn("Contact_Person", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContact_Person)
            Me.columnContact_Person2 = New Global.System.Data.DataColumn("Contact_Person2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContact_Person2)
            Me.columnContact_Person3 = New Global.System.Data.DataColumn("Contact_Person3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContact_Person3)
            Me.columnProvince = New Global.System.Data.DataColumn("Province", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvince)
            Me.columnDistrict = New Global.System.Data.DataColumn("District", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrict)
            Me.columnWithdraw_Index = New Global.System.Data.DataColumn("Withdraw_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdraw_Index)
            Me.columnDistrict_Index = New Global.System.Data.DataColumn("District_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrict_Index)
            Me.columnStr5 = New Global.System.Data.DataColumn("Str5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr5)
            Me.columnCustomer_ShippingTitle = New Global.System.Data.DataColumn("Customer_ShippingTitle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_ShippingTitle)
            Me.columnCustomer_ShippingName = New Global.System.Data.DataColumn("Customer_ShippingName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_ShippingName)
            Me.columnCustomer_ShippingID = New Global.System.Data.DataColumn("Customer_ShippingID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_ShippingID)
            Me.columnSO_No = New Global.System.Data.DataColumn("SO_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSO_No)
            Me.columnInvoice_No = New Global.System.Data.DataColumn("Invoice_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_No)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnWithdraw_Barcode = New Global.System.Data.DataColumn("Withdraw_Barcode", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdraw_Barcode)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnWithdraw_Index}, true))
            Me.columnWithdraw_No.AllowDBNull = false
            Me.columnWithdraw_No.MaxLength = 50
            Me.columnRef_No1.MaxLength = 50
            Me.columnRef_No2.MaxLength = 50
            Me.columnRef_No3.MaxLength = 50
            Me.columnRef_No4.MaxLength = 50
            Me.columnRef_No5.MaxLength = 50
            Me.columnContact_Name.MaxLength = 50
            Me.columnComment.MaxLength = 255
            Me.columnCustomer_Id.AllowDBNull = false
            Me.columnCustomer_Id.MaxLength = 50
            Me.columnTitle.MaxLength = 50
            Me.columnCustomer_Name.MaxLength = 100
            Me.columnAddress.MaxLength = 255
            Me.columnTel.MaxLength = 100
            Me.columnFax.MaxLength = 100
            Me.columnMobile.MaxLength = 100
            Me.columnEmail.MaxLength = 100
            Me.columnContact_Person.MaxLength = 100
            Me.columnContact_Person2.MaxLength = 100
            Me.columnContact_Person3.MaxLength = 100
            Me.columnProvince.MaxLength = 255
            Me.columnDistrict.MaxLength = 255
            Me.columnWithdraw_Index.AllowDBNull = false
            Me.columnWithdraw_Index.Unique = true
            Me.columnWithdraw_Index.MaxLength = 13
            Me.columnDistrict_Index.MaxLength = 13
            Me.columnStr5.MaxLength = 100
            Me.columnCustomer_ShippingTitle.MaxLength = 50
            Me.columnCustomer_ShippingName.MaxLength = 100
            Me.columnCustomer_ShippingID.MaxLength = 100
            Me.columnSO_No.MaxLength = 50
            Me.columnInvoice_No.MaxLength = 50
            Me.columnDescription.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewV_RPT_JobWithdraw_HeaderRow() As V_RPT_JobWithdraw_HeaderRow
            Return CType(Me.NewRow,V_RPT_JobWithdraw_HeaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V_RPT_JobWithdraw_HeaderRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V_RPT_JobWithdraw_HeaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_RPT_JobWithdraw_HeaderRowChangedEvent) Is Nothing) Then
                RaiseEvent V_RPT_JobWithdraw_HeaderRowChanged(Me, New V_RPT_JobWithdraw_HeaderRowChangeEvent(CType(e.Row,V_RPT_JobWithdraw_HeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_RPT_JobWithdraw_HeaderRowChangingEvent) Is Nothing) Then
                RaiseEvent V_RPT_JobWithdraw_HeaderRowChanging(Me, New V_RPT_JobWithdraw_HeaderRowChangeEvent(CType(e.Row,V_RPT_JobWithdraw_HeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_RPT_JobWithdraw_HeaderRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_RPT_JobWithdraw_HeaderRowDeleted(Me, New V_RPT_JobWithdraw_HeaderRowChangeEvent(CType(e.Row,V_RPT_JobWithdraw_HeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_RPT_JobWithdraw_HeaderRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_RPT_JobWithdraw_HeaderRowDeleting(Me, New V_RPT_JobWithdraw_HeaderRowChangeEvent(CType(e.Row,V_RPT_JobWithdraw_HeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveV_RPT_JobWithdraw_HeaderRow(ByVal row As V_RPT_JobWithdraw_HeaderRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsWithdraw_v1 = New dsWithdraw_v1
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_RPT_JobWithdraw_HeaderDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V_RPT_JobWithdraw_DetailDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnWithdraw_No As Global.System.Data.DataColumn
        
        Private columnWithdraw_Date As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnSku_Description As Global.System.Data.DataColumn
        
        Private columnPlot As Global.System.Data.DataColumn
        
        Private columnSerial_No As Global.System.Data.DataColumn
        
        Private columnItemStatus_Description As Global.System.Data.DataColumn
        
        Private columnTotal_Qty As Global.System.Data.DataColumn
        
        Private columnPackage_Description As Global.System.Data.DataColumn
        
        Private columnLocation_Alias As Global.System.Data.DataColumn
        
        Private columnTag_No As Global.System.Data.DataColumn
        
        Private columnWithdraw_Index As Global.System.Data.DataColumn
        
        Private columnPalletType_Id As Global.System.Data.DataColumn
        
        Private columnPallet_Name As Global.System.Data.DataColumn
        
        Private columnMfg_Date As Global.System.Data.DataColumn
        
        Private columnExp_Date As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnVolume As Global.System.Data.DataColumn
        
        Private columnWithdrawItem_Index As Global.System.Data.DataColumn
        
        Private columnStr1 As Global.System.Data.DataColumn
        
        Private columnStr2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V_RPT_JobWithdraw_Detail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Withdraw_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdraw_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Withdraw_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdraw_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PlotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Serial_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerial_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemStatus_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemStatus_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Package_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Location_AliasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocation_Alias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tag_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTag_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Withdraw_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdraw_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PalletType_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPalletType_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Pallet_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPallet_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Mfg_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMfg_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Exp_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExp_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WithdrawItem_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdrawItem_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V_RPT_JobWithdraw_DetailRow
            Get
                Return CType(Me.Rows(index),V_RPT_JobWithdraw_DetailRow)
            End Get
        End Property
        
        Public Event V_RPT_JobWithdraw_DetailRowChanging As V_RPT_JobWithdraw_DetailRowChangeEventHandler
        
        Public Event V_RPT_JobWithdraw_DetailRowChanged As V_RPT_JobWithdraw_DetailRowChangeEventHandler
        
        Public Event V_RPT_JobWithdraw_DetailRowDeleting As V_RPT_JobWithdraw_DetailRowChangeEventHandler
        
        Public Event V_RPT_JobWithdraw_DetailRowDeleted As V_RPT_JobWithdraw_DetailRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddV_RPT_JobWithdraw_DetailRow(ByVal row As V_RPT_JobWithdraw_DetailRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddV_RPT_JobWithdraw_DetailRow( _
                    ByVal Withdraw_No As String,  _
                    ByVal Withdraw_Date As Date,  _
                    ByVal Sku_Id As String,  _
                    ByVal Sku_Description As String,  _
                    ByVal Plot As String,  _
                    ByVal Serial_No As String,  _
                    ByVal ItemStatus_Description As String,  _
                    ByVal Total_Qty As Decimal,  _
                    ByVal Package_Description As String,  _
                    ByVal Location_Alias As String,  _
                    ByVal Tag_No As String,  _
                    ByVal parentV_RPT_JobWithdraw_HeaderRowByV_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail As V_RPT_JobWithdraw_HeaderRow,  _
                    ByVal PalletType_Id As String,  _
                    ByVal Pallet_Name As String,  _
                    ByVal Mfg_Date As Date,  _
                    ByVal Exp_Date As Date,  _
                    ByVal Weight As Decimal,  _
                    ByVal Volume As Decimal,  _
                    ByVal WithdrawItem_Index As String,  _
                    ByVal Str1 As String,  _
                    ByVal Str2 As String) As V_RPT_JobWithdraw_DetailRow
            Dim rowV_RPT_JobWithdraw_DetailRow As V_RPT_JobWithdraw_DetailRow = CType(Me.NewRow,V_RPT_JobWithdraw_DetailRow)
            Dim columnValuesArray() As Object = New Object() {Withdraw_No, Withdraw_Date, Sku_Id, Sku_Description, Plot, Serial_No, ItemStatus_Description, Total_Qty, Package_Description, Location_Alias, Tag_No, Nothing, PalletType_Id, Pallet_Name, Mfg_Date, Exp_Date, Weight, Volume, WithdrawItem_Index, Str1, Str2}
            If (Not (parentV_RPT_JobWithdraw_HeaderRowByV_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail) Is Nothing) Then
                columnValuesArray(11) = parentV_RPT_JobWithdraw_HeaderRowByV_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail(22)
            End If
            rowV_RPT_JobWithdraw_DetailRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV_RPT_JobWithdraw_DetailRow)
            Return rowV_RPT_JobWithdraw_DetailRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByWithdraw_Index(ByVal Withdraw_Index As String) As V_RPT_JobWithdraw_DetailRow
            Return CType(Me.Rows.Find(New Object() {Withdraw_Index}),V_RPT_JobWithdraw_DetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V_RPT_JobWithdraw_DetailDataTable = CType(MyBase.Clone,V_RPT_JobWithdraw_DetailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V_RPT_JobWithdraw_DetailDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnWithdraw_No = MyBase.Columns("Withdraw_No")
            Me.columnWithdraw_Date = MyBase.Columns("Withdraw_Date")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnSku_Description = MyBase.Columns("Sku_Description")
            Me.columnPlot = MyBase.Columns("Plot")
            Me.columnSerial_No = MyBase.Columns("Serial_No")
            Me.columnItemStatus_Description = MyBase.Columns("ItemStatus_Description")
            Me.columnTotal_Qty = MyBase.Columns("Total_Qty")
            Me.columnPackage_Description = MyBase.Columns("Package_Description")
            Me.columnLocation_Alias = MyBase.Columns("Location_Alias")
            Me.columnTag_No = MyBase.Columns("Tag_No")
            Me.columnWithdraw_Index = MyBase.Columns("Withdraw_Index")
            Me.columnPalletType_Id = MyBase.Columns("PalletType_Id")
            Me.columnPallet_Name = MyBase.Columns("Pallet_Name")
            Me.columnMfg_Date = MyBase.Columns("Mfg_Date")
            Me.columnExp_Date = MyBase.Columns("Exp_Date")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnVolume = MyBase.Columns("Volume")
            Me.columnWithdrawItem_Index = MyBase.Columns("WithdrawItem_Index")
            Me.columnStr1 = MyBase.Columns("Str1")
            Me.columnStr2 = MyBase.Columns("Str2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnWithdraw_No = New Global.System.Data.DataColumn("Withdraw_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdraw_No)
            Me.columnWithdraw_Date = New Global.System.Data.DataColumn("Withdraw_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdraw_Date)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnSku_Description = New Global.System.Data.DataColumn("Sku_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Description)
            Me.columnPlot = New Global.System.Data.DataColumn("Plot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlot)
            Me.columnSerial_No = New Global.System.Data.DataColumn("Serial_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerial_No)
            Me.columnItemStatus_Description = New Global.System.Data.DataColumn("ItemStatus_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemStatus_Description)
            Me.columnTotal_Qty = New Global.System.Data.DataColumn("Total_Qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Qty)
            Me.columnPackage_Description = New Global.System.Data.DataColumn("Package_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Description)
            Me.columnLocation_Alias = New Global.System.Data.DataColumn("Location_Alias", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation_Alias)
            Me.columnTag_No = New Global.System.Data.DataColumn("Tag_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTag_No)
            Me.columnWithdraw_Index = New Global.System.Data.DataColumn("Withdraw_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdraw_Index)
            Me.columnPalletType_Id = New Global.System.Data.DataColumn("PalletType_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPalletType_Id)
            Me.columnPallet_Name = New Global.System.Data.DataColumn("Pallet_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPallet_Name)
            Me.columnMfg_Date = New Global.System.Data.DataColumn("Mfg_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMfg_Date)
            Me.columnExp_Date = New Global.System.Data.DataColumn("Exp_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExp_Date)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnVolume = New Global.System.Data.DataColumn("Volume", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume)
            Me.columnWithdrawItem_Index = New Global.System.Data.DataColumn("WithdrawItem_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdrawItem_Index)
            Me.columnStr1 = New Global.System.Data.DataColumn("Str1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr1)
            Me.columnStr2 = New Global.System.Data.DataColumn("Str2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr2)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnWithdraw_Index}, true))
            Me.columnWithdraw_No.AllowDBNull = false
            Me.columnWithdraw_No.MaxLength = 50
            Me.columnSku_Id.MaxLength = 50
            Me.columnSku_Description.MaxLength = 255
            Me.columnPlot.MaxLength = 50
            Me.columnSerial_No.MaxLength = 50
            Me.columnItemStatus_Description.MaxLength = 100
            Me.columnPackage_Description.MaxLength = 100
            Me.columnLocation_Alias.MaxLength = 50
            Me.columnTag_No.MaxLength = 50
            Me.columnWithdraw_Index.AllowDBNull = false
            Me.columnWithdraw_Index.Unique = true
            Me.columnWithdraw_Index.MaxLength = 13
            Me.columnPalletType_Id.MaxLength = 50
            Me.columnPallet_Name.MaxLength = 100
            Me.columnWithdrawItem_Index.MaxLength = 13
            Me.columnStr1.MaxLength = 100
            Me.columnStr2.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewV_RPT_JobWithdraw_DetailRow() As V_RPT_JobWithdraw_DetailRow
            Return CType(Me.NewRow,V_RPT_JobWithdraw_DetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V_RPT_JobWithdraw_DetailRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V_RPT_JobWithdraw_DetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_RPT_JobWithdraw_DetailRowChangedEvent) Is Nothing) Then
                RaiseEvent V_RPT_JobWithdraw_DetailRowChanged(Me, New V_RPT_JobWithdraw_DetailRowChangeEvent(CType(e.Row,V_RPT_JobWithdraw_DetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_RPT_JobWithdraw_DetailRowChangingEvent) Is Nothing) Then
                RaiseEvent V_RPT_JobWithdraw_DetailRowChanging(Me, New V_RPT_JobWithdraw_DetailRowChangeEvent(CType(e.Row,V_RPT_JobWithdraw_DetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_RPT_JobWithdraw_DetailRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_RPT_JobWithdraw_DetailRowDeleted(Me, New V_RPT_JobWithdraw_DetailRowChangeEvent(CType(e.Row,V_RPT_JobWithdraw_DetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_RPT_JobWithdraw_DetailRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_RPT_JobWithdraw_DetailRowDeleting(Me, New V_RPT_JobWithdraw_DetailRowChangeEvent(CType(e.Row,V_RPT_JobWithdraw_DetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveV_RPT_JobWithdraw_DetailRow(ByVal row As V_RPT_JobWithdraw_DetailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsWithdraw_v1 = New dsWithdraw_v1
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_RPT_JobWithdraw_DetailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class V_RPT_JobWithdraw_HeaderRow
        Inherits Global.System.Data.DataRow
        
        Private tableV_RPT_JobWithdraw_Header As V_RPT_JobWithdraw_HeaderDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_RPT_JobWithdraw_Header = CType(Me.Table,V_RPT_JobWithdraw_HeaderDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Withdraw_No() As String
            Get
                Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_NoColumn),String)
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Withdraw_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Withdraw_Date' in table 'V_RPT_JobWithdraw_Header' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No1() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No1' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No2() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No2' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No3() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No3' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No4() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No4' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref_No5() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref_No5' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Contact_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Contact_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contact_Name' in table 'V_RPT_JobWithdraw_Header' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Contact_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Comment() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.CommentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comment' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.CommentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Id() As String
            Get
                Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Customer_IdColumn),String)
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Customer_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Title' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'V_RPT_JobWithdraw_Header' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tel() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.TelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tel' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.TelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.FaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fax' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.FaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mobile() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.MobileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mobile' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.MobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Email() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.EmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Email' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.EmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Contact_Person() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Contact_PersonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contact_Person' in table 'V_RPT_JobWithdraw_Header' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Contact_PersonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Contact_Person2() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Contact_Person2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contact_Person2' in table 'V_RPT_JobWithdraw_Header' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Contact_Person2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Contact_Person3() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Contact_Person3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contact_Person3' in table 'V_RPT_JobWithdraw_Header' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Contact_Person3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Province() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.ProvinceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Province' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.ProvinceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property District() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.DistrictColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'District' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.DistrictColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Withdraw_Index() As String
            Get
                Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_IndexColumn),String)
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property District_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.District_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'District_Index' in table 'V_RPT_JobWithdraw_Header' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.District_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str5() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Str5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str5' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Str5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_ShippingTitle() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingTitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_ShippingTitle' in table 'V_RPT_JobWithdraw_Header'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingTitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_ShippingName() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_ShippingName' in table 'V_RPT_JobWithdraw_Header' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_ShippingID() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_ShippingID' in table 'V_RPT_JobWithdraw_Header' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SO_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.SO_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SO_No' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.SO_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Invoice_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_No' in table 'V_RPT_JobWithdraw_Header' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Invoice_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'V_RPT_JobWithdraw_Header' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Withdraw_Barcode() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_BarcodeColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Withdraw_Barcode' in table 'V_RPT_JobWithdraw_Header' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_BarcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWithdraw_DateNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Withdraw_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWithdraw_DateNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No1Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Ref_No1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No1Null()
            Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No2Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Ref_No2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No2Null()
            Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No3Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Ref_No3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No3Null()
            Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No4Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Ref_No4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No4Null()
            Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRef_No5Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Ref_No5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRef_No5Null()
            Me(Me.tableV_RPT_JobWithdraw_Header.Ref_No5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsContact_NameNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Contact_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetContact_NameNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.Contact_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCommentNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.CommentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCommentNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.CommentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTitleNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddressNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTelNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.TelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTelNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.TelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFaxNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.FaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFaxNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.FaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMobileNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.MobileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMobileNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.MobileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEmailNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.EmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEmailNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.EmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsContact_PersonNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Contact_PersonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetContact_PersonNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.Contact_PersonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsContact_Person2Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Contact_Person2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetContact_Person2Null()
            Me(Me.tableV_RPT_JobWithdraw_Header.Contact_Person2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsContact_Person3Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Contact_Person3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetContact_Person3Null()
            Me(Me.tableV_RPT_JobWithdraw_Header.Contact_Person3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProvinceNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.ProvinceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProvinceNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.ProvinceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDistrictNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.DistrictColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDistrictNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.DistrictColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDistrict_IndexNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.District_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDistrict_IndexNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.District_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr5Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Str5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr5Null()
            Me(Me.tableV_RPT_JobWithdraw_Header.Str5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_ShippingTitleNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingTitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_ShippingTitleNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingTitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_ShippingNameNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_ShippingNameNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_ShippingIDNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_ShippingIDNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.Customer_ShippingIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSO_NoNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.SO_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSO_NoNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.SO_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_NoNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Invoice_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_NoNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.Invoice_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWithdraw_BarcodeNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Header.Withdraw_BarcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWithdraw_BarcodeNull()
            Me(Me.tableV_RPT_JobWithdraw_Header.Withdraw_BarcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetV_RPT_JobWithdraw_DetailRows() As V_RPT_JobWithdraw_DetailRow()
            If (Me.Table.ChildRelations("V_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail") Is Nothing) Then
                Return New V_RPT_JobWithdraw_DetailRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("V_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail")),V_RPT_JobWithdraw_DetailRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class V_RPT_JobWithdraw_DetailRow
        Inherits Global.System.Data.DataRow
        
        Private tableV_RPT_JobWithdraw_Detail As V_RPT_JobWithdraw_DetailDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_RPT_JobWithdraw_Detail = CType(Me.Table,V_RPT_JobWithdraw_DetailDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Withdraw_No() As String
            Get
                Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Withdraw_NoColumn),String)
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Withdraw_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Withdraw_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Withdraw_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Withdraw_Date' in table 'V_RPT_JobWithdraw_Detail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Withdraw_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Sku_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Description' in table 'V_RPT_JobWithdraw_Detail' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Sku_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Plot() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.PlotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Plot' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.PlotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Serial_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Serial_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Serial_No' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Serial_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemStatus_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.ItemStatus_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemStatus_Description' in table 'V_RPT_JobWithdraw_Detail'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.ItemStatus_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Qty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Total_QtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Qty' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Total_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Package_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Package_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package_Description' in table 'V_RPT_JobWithdraw_Detail' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Package_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location_Alias() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Location_AliasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Location_Alias' in table 'V_RPT_JobWithdraw_Detail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Location_AliasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tag_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Tag_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tag_No' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Tag_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Withdraw_Index() As String
            Get
                Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Withdraw_IndexColumn),String)
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Withdraw_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PalletType_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.PalletType_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType_Id' in table 'V_RPT_JobWithdraw_Detail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.PalletType_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pallet_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Pallet_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pallet_Name' in table 'V_RPT_JobWithdraw_Detail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Pallet_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mfg_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Mfg_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mfg_Date' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Mfg_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Exp_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Exp_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Exp_Date' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Exp_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.WeightColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.VolumeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volume' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property WithdrawItem_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.WithdrawItem_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WithdrawItem_Index' in table 'V_RPT_JobWithdraw_Detail' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.WithdrawItem_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str1() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Str1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str1' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Str1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str2() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_RPT_JobWithdraw_Detail.Str2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str2' in table 'V_RPT_JobWithdraw_Detail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_RPT_JobWithdraw_Detail.Str2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property V_RPT_JobWithdraw_HeaderRow() As V_RPT_JobWithdraw_HeaderRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("V_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail")),V_RPT_JobWithdraw_HeaderRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("V_RPT_JobWithdraw_Header_V_RPT_JobWithdraw_Detail"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWithdraw_DateNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Withdraw_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWithdraw_DateNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Withdraw_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Sku_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_DescriptionNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Sku_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPlotNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.PlotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPlotNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.PlotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSerial_NoNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Serial_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSerial_NoNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Serial_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemStatus_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.ItemStatus_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemStatus_DescriptionNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.ItemStatus_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_QtyNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Total_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_QtyNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Total_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackage_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Package_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackage_DescriptionNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Package_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocation_AliasNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Location_AliasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocation_AliasNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Location_AliasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTag_NoNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Tag_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTag_NoNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Tag_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPalletType_IdNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.PalletType_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPalletType_IdNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.PalletType_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPallet_NameNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Pallet_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPallet_NameNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Pallet_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMfg_DateNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Mfg_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMfg_DateNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Mfg_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExp_DateNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Exp_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExp_DateNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Exp_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeightNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolumeNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolumeNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWithdrawItem_IndexNull() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.WithdrawItem_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWithdrawItem_IndexNull()
            Me(Me.tableV_RPT_JobWithdraw_Detail.WithdrawItem_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr1Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Str1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr1Null()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Str1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr2Null() As Boolean
            Return Me.IsNull(Me.tableV_RPT_JobWithdraw_Detail.Str2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr2Null()
            Me(Me.tableV_RPT_JobWithdraw_Detail.Str2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class V_RPT_JobWithdraw_HeaderRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As V_RPT_JobWithdraw_HeaderRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As V_RPT_JobWithdraw_HeaderRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As V_RPT_JobWithdraw_HeaderRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class V_RPT_JobWithdraw_DetailRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As V_RPT_JobWithdraw_DetailRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As V_RPT_JobWithdraw_DetailRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As V_RPT_JobWithdraw_DetailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
