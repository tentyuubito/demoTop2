'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8833
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsPackingLIst"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPackingLIst
    Inherits Global.System.Data.DataSet
    
    Private tableview_packingList As view_packingListDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("view_packingList")) Is Nothing) Then
                MyBase.Tables.Add(New view_packingListDataTable(ds.Tables("view_packingList")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_packingList() As view_packingListDataTable
        Get
            Return Me.tableview_packingList
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsPackingLIst = CType(MyBase.Clone,dsPackingLIst)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("view_packingList")) Is Nothing) Then
                MyBase.Tables.Add(New view_packingListDataTable(ds.Tables("view_packingList")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableview_packingList = CType(MyBase.Tables("view_packingList"),view_packingListDataTable)
        If (initTable = true) Then
            If (Not (Me.tableview_packingList) Is Nothing) Then
                Me.tableview_packingList.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPackingLIst"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsPackingLIst.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableview_packingList = New view_packingListDataTable
        MyBase.Tables.Add(Me.tableview_packingList)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeview_packingList() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPackingLIst = New dsPackingLIst
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub view_packingListRowChangeEventHandler(ByVal sender As Object, ByVal e As view_packingListRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class view_packingListDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnBarcodePacking As Global.System.Data.DataColumn
        
        Private columnSalesOrder_Index As Global.System.Data.DataColumn
        
        Private columnStatus_Print As Global.System.Data.DataColumn
        
        Private columnCount_Print As Global.System.Data.DataColumn
        
        Private columnSalesOrderPacking_Index As Global.System.Data.DataColumn
        
        Private columnSalesOrderPackingItem_Index As Global.System.Data.DataColumn
        
        Private columnstrStatus As Global.System.Data.DataColumn
        
        Private columnSku_Index As Global.System.Data.DataColumn
        
        Private columnQty_Pack As Global.System.Data.DataColumn
        
        Private columnseq As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnStr1 As Global.System.Data.DataColumn
        
        Private columnBarcode1 As Global.System.Data.DataColumn
        
        Private columnstrBox As Global.System.Data.DataColumn
        
        Private columnSalesOrder_No As Global.System.Data.DataColumn
        
        Private columnInvoice_No As Global.System.Data.DataColumn
        
        Private columnCompany_Name1 As Global.System.Data.DataColumn
        
        Private columnAddress1 As Global.System.Data.DataColumn
        
        Private columnInvoice_Date As Global.System.Data.DataColumn
        
        Private columnPackage_Name As Global.System.Data.DataColumn
        
        Private columnPack_Desc As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnSeqNo As Global.System.Data.DataColumn
        
        Private columnCompany_Name As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnPacking_Date As Global.System.Data.DataColumn
        
        Private columnGroup As Global.System.Data.DataColumn
        
        Private columnLine As Global.System.Data.DataColumn
        
        Private columnPackage As Global.System.Data.DataColumn
        
        Private columnTransportManifestItem_Index As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnSalesOrder_Date As Global.System.Data.DataColumn
        
        Private columnMaxRow As Global.System.Data.DataColumn
        
        Private columnTransportManifest_No As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Location_Id As Global.System.Data.DataColumn
        
        Private columnShipping_Location_Name As Global.System.Data.DataColumn
        
        Private columnAddress2 As Global.System.Data.DataColumn
        
        Private columnRoute As Global.System.Data.DataColumn
        
        Private columnTransportManifest_Date As Global.System.Data.DataColumn
        
        Private columnSubRoute As Global.System.Data.DataColumn
        
        Private columnuserName As Global.System.Data.DataColumn
        
        Private columnuserFullName As Global.System.Data.DataColumn
        
        Private columnuserName_Checker As Global.System.Data.DataColumn
        
        Private columnuserFullName_Checker As Global.System.Data.DataColumn
        
        Private columnInvoiceNo As Global.System.Data.DataColumn
        
        Private columnDocument_Date As Global.System.Data.DataColumn
        
        Private columnDocument_No As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "view_packingList"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BarcodePackingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodePacking
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SalesOrder_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesOrder_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Status_PrintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus_Print
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Count_PrintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCount_Print
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SalesOrderPacking_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesOrderPacking_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SalesOrderPackingItem_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesOrderPackingItem_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstrStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_PackColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_Pack
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property seqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Barcode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strBoxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstrBox
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SalesOrder_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesOrder_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Company_Name1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompany_Name1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Address1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Package_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Pack_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPack_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeqNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeqNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Company_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompany_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Packing_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPacking_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PackageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransportManifestItem_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransportManifestItem_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SalesOrder_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesOrder_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaxRowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransportManifest_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransportManifest_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_Location_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Location_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shipping_Location_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShipping_Location_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Address2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RouteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoute
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransportManifest_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransportManifest_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubRouteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubRoute
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property userNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuserName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property userFullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuserFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property userName_CheckerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuserName_Checker
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property userFullName_CheckerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuserFullName_Checker
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InvoiceNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoiceNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Document_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Document_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_packingListRow
            Get
                Return CType(Me.Rows(index),view_packingListRow)
            End Get
        End Property
        
        Public Event view_packingListRowChanging As view_packingListRowChangeEventHandler
        
        Public Event view_packingListRowChanged As view_packingListRowChangeEventHandler
        
        Public Event view_packingListRowDeleting As view_packingListRowChangeEventHandler
        
        Public Event view_packingListRowDeleted As view_packingListRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addview_packingListRow(ByVal row As view_packingListRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addview_packingListRow( _
                    ByVal BarcodePacking As String,  _
                    ByVal SalesOrder_Index As String,  _
                    ByVal Status_Print As String,  _
                    ByVal Count_Print As Decimal,  _
                    ByVal SalesOrderPacking_Index As String,  _
                    ByVal SalesOrderPackingItem_Index As String,  _
                    ByVal strStatus As String,  _
                    ByVal Sku_Index As String,  _
                    ByVal Qty_Pack As Decimal,  _
                    ByVal seq As String,  _
                    ByVal Sku_Id As String,  _
                    ByVal Str1 As String,  _
                    ByVal Barcode1 As String,  _
                    ByVal strBox As String,  _
                    ByVal SalesOrder_No As String,  _
                    ByVal Invoice_No As String,  _
                    ByVal Company_Name1 As String,  _
                    ByVal Address1 As String,  _
                    ByVal Invoice_Date As Date,  _
                    ByVal Package_Name As String,  _
                    ByVal Pack_Desc As String,  _
                    ByVal Weight As Decimal,  _
                    ByVal SeqNo As String,  _
                    ByVal Company_Name As String,  _
                    ByVal Address As String,  _
                    ByVal Packing_Date As Date,  _
                    ByVal Group As String,  _
                    ByVal Line As String,  _
                    ByVal Package As String,  _
                    ByVal TransportManifestItem_Index As String,  _
                    ByVal Description As String,  _
                    ByVal Status As Decimal,  _
                    ByVal SalesOrder_Date As Date,  _
                    ByVal MaxRow As Decimal,  _
                    ByVal TransportManifest_No As String,  _
                    ByVal Customer_Shipping_Location_Id As String,  _
                    ByVal Shipping_Location_Name As String,  _
                    ByVal Address2 As String,  _
                    ByVal Route As String,  _
                    ByVal TransportManifest_Date As Date,  _
                    ByVal SubRoute As String,  _
                    ByVal userName As String,  _
                    ByVal userFullName As String,  _
                    ByVal userName_Checker As String,  _
                    ByVal userFullName_Checker As String,  _
                    ByVal InvoiceNo As String,  _
                    ByVal Document_Date As Date,  _
                    ByVal Document_No As String) As view_packingListRow
            Dim rowview_packingListRow As view_packingListRow = CType(Me.NewRow,view_packingListRow)
            Dim columnValuesArray() As Object = New Object() {BarcodePacking, SalesOrder_Index, Status_Print, Count_Print, SalesOrderPacking_Index, SalesOrderPackingItem_Index, strStatus, Sku_Index, Qty_Pack, seq, Sku_Id, Str1, Barcode1, strBox, SalesOrder_No, Invoice_No, Company_Name1, Address1, Invoice_Date, Package_Name, Pack_Desc, Weight, SeqNo, Company_Name, Address, Packing_Date, Group, Line, Package, TransportManifestItem_Index, Description, Status, SalesOrder_Date, MaxRow, TransportManifest_No, Customer_Shipping_Location_Id, Shipping_Location_Name, Address2, Route, TransportManifest_Date, SubRoute, userName, userFullName, userName_Checker, userFullName_Checker, InvoiceNo, Document_Date, Document_No}
            rowview_packingListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowview_packingListRow)
            Return rowview_packingListRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As view_packingListDataTable = CType(MyBase.Clone,view_packingListDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New view_packingListDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnBarcodePacking = MyBase.Columns("BarcodePacking")
            Me.columnSalesOrder_Index = MyBase.Columns("SalesOrder_Index")
            Me.columnStatus_Print = MyBase.Columns("Status_Print")
            Me.columnCount_Print = MyBase.Columns("Count_Print")
            Me.columnSalesOrderPacking_Index = MyBase.Columns("SalesOrderPacking_Index")
            Me.columnSalesOrderPackingItem_Index = MyBase.Columns("SalesOrderPackingItem_Index")
            Me.columnstrStatus = MyBase.Columns("strStatus")
            Me.columnSku_Index = MyBase.Columns("Sku_Index")
            Me.columnQty_Pack = MyBase.Columns("Qty_Pack")
            Me.columnseq = MyBase.Columns("seq")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnStr1 = MyBase.Columns("Str1")
            Me.columnBarcode1 = MyBase.Columns("Barcode1")
            Me.columnstrBox = MyBase.Columns("strBox")
            Me.columnSalesOrder_No = MyBase.Columns("SalesOrder_No")
            Me.columnInvoice_No = MyBase.Columns("Invoice_No")
            Me.columnCompany_Name1 = MyBase.Columns("Company_Name1")
            Me.columnAddress1 = MyBase.Columns("Address1")
            Me.columnInvoice_Date = MyBase.Columns("Invoice_Date")
            Me.columnPackage_Name = MyBase.Columns("Package_Name")
            Me.columnPack_Desc = MyBase.Columns("Pack_Desc")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnSeqNo = MyBase.Columns("SeqNo")
            Me.columnCompany_Name = MyBase.Columns("Company_Name")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnPacking_Date = MyBase.Columns("Packing_Date")
            Me.columnGroup = MyBase.Columns("Group")
            Me.columnLine = MyBase.Columns("Line")
            Me.columnPackage = MyBase.Columns("Package")
            Me.columnTransportManifestItem_Index = MyBase.Columns("TransportManifestItem_Index")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnSalesOrder_Date = MyBase.Columns("SalesOrder_Date")
            Me.columnMaxRow = MyBase.Columns("MaxRow")
            Me.columnTransportManifest_No = MyBase.Columns("TransportManifest_No")
            Me.columnCustomer_Shipping_Location_Id = MyBase.Columns("Customer_Shipping_Location_Id")
            Me.columnShipping_Location_Name = MyBase.Columns("Shipping_Location_Name")
            Me.columnAddress2 = MyBase.Columns("Address2")
            Me.columnRoute = MyBase.Columns("Route")
            Me.columnTransportManifest_Date = MyBase.Columns("TransportManifest_Date")
            Me.columnSubRoute = MyBase.Columns("SubRoute")
            Me.columnuserName = MyBase.Columns("userName")
            Me.columnuserFullName = MyBase.Columns("userFullName")
            Me.columnuserName_Checker = MyBase.Columns("userName_Checker")
            Me.columnuserFullName_Checker = MyBase.Columns("userFullName_Checker")
            Me.columnInvoiceNo = MyBase.Columns("InvoiceNo")
            Me.columnDocument_Date = MyBase.Columns("Document_Date")
            Me.columnDocument_No = MyBase.Columns("Document_No")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnBarcodePacking = New Global.System.Data.DataColumn("BarcodePacking", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodePacking)
            Me.columnSalesOrder_Index = New Global.System.Data.DataColumn("SalesOrder_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesOrder_Index)
            Me.columnStatus_Print = New Global.System.Data.DataColumn("Status_Print", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus_Print)
            Me.columnCount_Print = New Global.System.Data.DataColumn("Count_Print", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCount_Print)
            Me.columnSalesOrderPacking_Index = New Global.System.Data.DataColumn("SalesOrderPacking_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesOrderPacking_Index)
            Me.columnSalesOrderPackingItem_Index = New Global.System.Data.DataColumn("SalesOrderPackingItem_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesOrderPackingItem_Index)
            Me.columnstrStatus = New Global.System.Data.DataColumn("strStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrStatus)
            Me.columnSku_Index = New Global.System.Data.DataColumn("Sku_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Index)
            Me.columnQty_Pack = New Global.System.Data.DataColumn("Qty_Pack", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_Pack)
            Me.columnseq = New Global.System.Data.DataColumn("seq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseq)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnStr1 = New Global.System.Data.DataColumn("Str1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr1)
            Me.columnBarcode1 = New Global.System.Data.DataColumn("Barcode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcode1)
            Me.columnstrBox = New Global.System.Data.DataColumn("strBox", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrBox)
            Me.columnSalesOrder_No = New Global.System.Data.DataColumn("SalesOrder_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesOrder_No)
            Me.columnInvoice_No = New Global.System.Data.DataColumn("Invoice_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_No)
            Me.columnCompany_Name1 = New Global.System.Data.DataColumn("Company_Name1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompany_Name1)
            Me.columnAddress1 = New Global.System.Data.DataColumn("Address1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress1)
            Me.columnInvoice_Date = New Global.System.Data.DataColumn("Invoice_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_Date)
            Me.columnPackage_Name = New Global.System.Data.DataColumn("Package_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Name)
            Me.columnPack_Desc = New Global.System.Data.DataColumn("Pack_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPack_Desc)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnSeqNo = New Global.System.Data.DataColumn("SeqNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeqNo)
            Me.columnCompany_Name = New Global.System.Data.DataColumn("Company_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompany_Name)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnPacking_Date = New Global.System.Data.DataColumn("Packing_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPacking_Date)
            Me.columnGroup = New Global.System.Data.DataColumn("Group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroup)
            Me.columnLine = New Global.System.Data.DataColumn("Line", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLine)
            Me.columnPackage = New Global.System.Data.DataColumn("Package", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage)
            Me.columnTransportManifestItem_Index = New Global.System.Data.DataColumn("TransportManifestItem_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransportManifestItem_Index)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnSalesOrder_Date = New Global.System.Data.DataColumn("SalesOrder_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesOrder_Date)
            Me.columnMaxRow = New Global.System.Data.DataColumn("MaxRow", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxRow)
            Me.columnTransportManifest_No = New Global.System.Data.DataColumn("TransportManifest_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransportManifest_No)
            Me.columnCustomer_Shipping_Location_Id = New Global.System.Data.DataColumn("Customer_Shipping_Location_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Location_Id)
            Me.columnShipping_Location_Name = New Global.System.Data.DataColumn("Shipping_Location_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShipping_Location_Name)
            Me.columnAddress2 = New Global.System.Data.DataColumn("Address2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress2)
            Me.columnRoute = New Global.System.Data.DataColumn("Route", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoute)
            Me.columnTransportManifest_Date = New Global.System.Data.DataColumn("TransportManifest_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransportManifest_Date)
            Me.columnSubRoute = New Global.System.Data.DataColumn("SubRoute", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubRoute)
            Me.columnuserName = New Global.System.Data.DataColumn("userName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuserName)
            Me.columnuserFullName = New Global.System.Data.DataColumn("userFullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuserFullName)
            Me.columnuserName_Checker = New Global.System.Data.DataColumn("userName_Checker", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuserName_Checker)
            Me.columnuserFullName_Checker = New Global.System.Data.DataColumn("userFullName_Checker", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuserFullName_Checker)
            Me.columnInvoiceNo = New Global.System.Data.DataColumn("InvoiceNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoiceNo)
            Me.columnDocument_Date = New Global.System.Data.DataColumn("Document_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_Date)
            Me.columnDocument_No = New Global.System.Data.DataColumn("Document_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_No)
            Me.columnSalesOrder_Date.Caption = "Packing_Date"
            Me.columnTransportManifest_Date.Caption = "Packing_Date"
            Me.columnDocument_Date.Caption = "Packing_Date"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newview_packingListRow() As view_packingListRow
            Return CType(Me.NewRow,view_packingListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New view_packingListRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(view_packingListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_packingListRowChangedEvent) Is Nothing) Then
                RaiseEvent view_packingListRowChanged(Me, New view_packingListRowChangeEvent(CType(e.Row,view_packingListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_packingListRowChangingEvent) Is Nothing) Then
                RaiseEvent view_packingListRowChanging(Me, New view_packingListRowChangeEvent(CType(e.Row,view_packingListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_packingListRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_packingListRowDeleted(Me, New view_packingListRowChangeEvent(CType(e.Row,view_packingListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_packingListRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_packingListRowDeleting(Me, New view_packingListRowChangeEvent(CType(e.Row,view_packingListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeview_packingListRow(ByVal row As view_packingListRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPackingLIst = New dsPackingLIst
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "view_packingListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class view_packingListRow
        Inherits Global.System.Data.DataRow
        
        Private tableview_packingList As view_packingListDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_packingList = CType(Me.Table,view_packingListDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BarcodePacking() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.BarcodePackingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodePacking' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.BarcodePackingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SalesOrder_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.SalesOrder_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesOrder_Index' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.SalesOrder_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status_Print() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Status_PrintColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status_Print' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Status_PrintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Count_Print() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Count_PrintColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Count_Print' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Count_PrintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SalesOrderPacking_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.SalesOrderPacking_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesOrderPacking_Index' in table 'view_packingList' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.SalesOrderPacking_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SalesOrderPackingItem_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.SalesOrderPackingItem_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesOrderPackingItem_Index' in table 'view_packingList' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.SalesOrderPackingItem_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.strStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'strStatus' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.strStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Sku_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Index' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Sku_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_Pack() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Qty_PackColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_Pack' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Qty_PackColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property seq() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.seqColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seq' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.seqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str1() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Str1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str1' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Str1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Barcode1() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Barcode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode1' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Barcode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strBox() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.strBoxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'strBox' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.strBoxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SalesOrder_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.SalesOrder_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesOrder_No' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.SalesOrder_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Invoice_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_No' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Invoice_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Company_Name1() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Company_Name1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Company_Name1' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Company_Name1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address1() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Address1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address1' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Address1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Invoice_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_Date' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Invoice_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Package_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Package_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package_Name' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Package_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pack_Desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Pack_DescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pack_Desc' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Pack_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.WeightColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SeqNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.SeqNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeqNo' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.SeqNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Company_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Company_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Company_Name' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Company_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Packing_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Packing_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Packing_Date' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Packing_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Group() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.GroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Group' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.GroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Line() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.LineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Line' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.LineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Package() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.PackageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.PackageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransportManifestItem_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.TransportManifestItem_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransportManifestItem_Index' in table 'view_packingList' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.TransportManifestItem_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.StatusColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SalesOrder_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.SalesOrder_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesOrder_Date' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.SalesOrder_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaxRow() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.MaxRowColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxRow' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.MaxRowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransportManifest_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.TransportManifest_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransportManifest_No' in table 'view_packingList' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.TransportManifest_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Location_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Customer_Shipping_Location_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Location_Id' in table 'view_packingList' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Customer_Shipping_Location_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shipping_Location_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Shipping_Location_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shipping_Location_Name' in table 'view_packingList' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Shipping_Location_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address2() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Address2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address2' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Address2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Route() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.RouteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Route' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.RouteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransportManifest_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.TransportManifest_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransportManifest_Date' in table 'view_packingList' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.TransportManifest_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubRoute() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.SubRouteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubRoute' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.SubRouteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property userName() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.userNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'userName' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.userNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property userFullName() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.userFullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'userFullName' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.userFullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property userName_Checker() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.userName_CheckerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'userName_Checker' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.userName_CheckerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property userFullName_Checker() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.userFullName_CheckerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'userFullName_Checker' in table 'view_packingList' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.userFullName_CheckerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InvoiceNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.InvoiceNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvoiceNo' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.InvoiceNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Document_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Document_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_Date' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Document_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Document_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableview_packingList.Document_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_No' in table 'view_packingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_packingList.Document_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBarcodePackingNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.BarcodePackingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBarcodePackingNull()
            Me(Me.tableview_packingList.BarcodePackingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSalesOrder_IndexNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.SalesOrder_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSalesOrder_IndexNull()
            Me(Me.tableview_packingList.SalesOrder_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatus_PrintNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Status_PrintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatus_PrintNull()
            Me(Me.tableview_packingList.Status_PrintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCount_PrintNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Count_PrintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCount_PrintNull()
            Me(Me.tableview_packingList.Count_PrintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSalesOrderPacking_IndexNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.SalesOrderPacking_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSalesOrderPacking_IndexNull()
            Me(Me.tableview_packingList.SalesOrderPacking_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSalesOrderPackingItem_IndexNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.SalesOrderPackingItem_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSalesOrderPackingItem_IndexNull()
            Me(Me.tableview_packingList.SalesOrderPackingItem_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrStatusNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.strStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrStatusNull()
            Me(Me.tableview_packingList.strStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IndexNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Sku_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IndexNull()
            Me(Me.tableview_packingList.Sku_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_PackNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Qty_PackColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_PackNull()
            Me(Me.tableview_packingList.Qty_PackColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsseqNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.seqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetseqNull()
            Me(Me.tableview_packingList.seqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableview_packingList.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr1Null() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Str1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr1Null()
            Me(Me.tableview_packingList.Str1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBarcode1Null() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Barcode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBarcode1Null()
            Me(Me.tableview_packingList.Barcode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrBoxNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.strBoxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrBoxNull()
            Me(Me.tableview_packingList.strBoxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSalesOrder_NoNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.SalesOrder_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSalesOrder_NoNull()
            Me(Me.tableview_packingList.SalesOrder_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_NoNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Invoice_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_NoNull()
            Me(Me.tableview_packingList.Invoice_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCompany_Name1Null() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Company_Name1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCompany_Name1Null()
            Me(Me.tableview_packingList.Company_Name1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddress1Null() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Address1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddress1Null()
            Me(Me.tableview_packingList.Address1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_DateNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Invoice_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_DateNull()
            Me(Me.tableview_packingList.Invoice_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackage_NameNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Package_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackage_NameNull()
            Me(Me.tableview_packingList.Package_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPack_DescNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Pack_DescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPack_DescNull()
            Me(Me.tableview_packingList.Pack_DescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeightNull()
            Me(Me.tableview_packingList.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSeqNoNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.SeqNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSeqNoNull()
            Me(Me.tableview_packingList.SeqNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCompany_NameNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Company_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCompany_NameNull()
            Me(Me.tableview_packingList.Company_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddressNull()
            Me(Me.tableview_packingList.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPacking_DateNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Packing_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPacking_DateNull()
            Me(Me.tableview_packingList.Packing_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGroupNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.GroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGroupNull()
            Me(Me.tableview_packingList.GroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLineNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.LineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLineNull()
            Me(Me.tableview_packingList.LineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackageNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.PackageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackageNull()
            Me(Me.tableview_packingList.PackageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransportManifestItem_IndexNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.TransportManifestItem_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransportManifestItem_IndexNull()
            Me(Me.tableview_packingList.TransportManifestItem_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableview_packingList.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNull()
            Me(Me.tableview_packingList.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSalesOrder_DateNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.SalesOrder_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSalesOrder_DateNull()
            Me(Me.tableview_packingList.SalesOrder_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaxRowNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.MaxRowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaxRowNull()
            Me(Me.tableview_packingList.MaxRowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransportManifest_NoNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.TransportManifest_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransportManifest_NoNull()
            Me(Me.tableview_packingList.TransportManifest_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_Location_IdNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Customer_Shipping_Location_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_Location_IdNull()
            Me(Me.tableview_packingList.Customer_Shipping_Location_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShipping_Location_NameNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Shipping_Location_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShipping_Location_NameNull()
            Me(Me.tableview_packingList.Shipping_Location_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddress2Null() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Address2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddress2Null()
            Me(Me.tableview_packingList.Address2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRouteNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.RouteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRouteNull()
            Me(Me.tableview_packingList.RouteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransportManifest_DateNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.TransportManifest_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransportManifest_DateNull()
            Me(Me.tableview_packingList.TransportManifest_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubRouteNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.SubRouteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubRouteNull()
            Me(Me.tableview_packingList.SubRouteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsuserNameNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.userNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetuserNameNull()
            Me(Me.tableview_packingList.userNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsuserFullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.userFullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetuserFullNameNull()
            Me(Me.tableview_packingList.userFullNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsuserName_CheckerNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.userName_CheckerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetuserName_CheckerNull()
            Me(Me.tableview_packingList.userName_CheckerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsuserFullName_CheckerNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.userFullName_CheckerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetuserFullName_CheckerNull()
            Me(Me.tableview_packingList.userFullName_CheckerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoiceNoNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.InvoiceNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoiceNoNull()
            Me(Me.tableview_packingList.InvoiceNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocument_DateNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Document_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocument_DateNull()
            Me(Me.tableview_packingList.Document_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocument_NoNull() As Boolean
            Return Me.IsNull(Me.tableview_packingList.Document_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocument_NoNull()
            Me(Me.tableview_packingList.Document_NoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class view_packingListRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As view_packingListRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As view_packingListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As view_packingListRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
