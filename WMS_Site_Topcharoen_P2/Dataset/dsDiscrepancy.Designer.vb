'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsDiscrepancy"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsDiscrepancy
    Inherits Global.System.Data.DataSet
    
    Private tableView_Rpt_Discrepancy As View_Rpt_DiscrepancyDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("View_Rpt_Discrepancy")) Is Nothing) Then
                MyBase.Tables.Add(New View_Rpt_DiscrepancyDataTable(ds.Tables("View_Rpt_Discrepancy")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_Rpt_Discrepancy() As View_Rpt_DiscrepancyDataTable
        Get
            Return Me.tableView_Rpt_Discrepancy
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsDiscrepancy = CType(MyBase.Clone,dsDiscrepancy)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("View_Rpt_Discrepancy")) Is Nothing) Then
                MyBase.Tables.Add(New View_Rpt_DiscrepancyDataTable(ds.Tables("View_Rpt_Discrepancy")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableView_Rpt_Discrepancy = CType(MyBase.Tables("View_Rpt_Discrepancy"),View_Rpt_DiscrepancyDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_Rpt_Discrepancy) Is Nothing) Then
                Me.tableView_Rpt_Discrepancy.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsDiscrepancy"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsDiscrepancy.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableView_Rpt_Discrepancy = New View_Rpt_DiscrepancyDataTable
        MyBase.Tables.Add(Me.tableView_Rpt_Discrepancy)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeView_Rpt_Discrepancy() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsDiscrepancy = New dsDiscrepancy
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub View_Rpt_DiscrepancyRowChangeEventHandler(ByVal sender As Object, ByVal e As View_Rpt_DiscrepancyRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_Rpt_DiscrepancyDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSupplier_Name As Global.System.Data.DataColumn
        
        Private columnPO_Number As Global.System.Data.DataColumn
        
        Private columnETA_Date As Global.System.Data.DataColumn
        
        Private columnReceive_Date As Global.System.Data.DataColumn
        
        Private columnInvoice_Number As Global.System.Data.DataColumn
        
        Private columnInvoice_Date As Global.System.Data.DataColumn
        
        Private columnASN As Global.System.Data.DataColumn
        
        Private columnBrand As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnSKU_Description As Global.System.Data.DataColumn
        
        Private columnPO_QTY As Global.System.Data.DataColumn
        
        Private columnDamage_QTY As Global.System.Data.DataColumn
        
        Private columnShortage_QTY As Global.System.Data.DataColumn
        
        Private columnExcess_QTY As Global.System.Data.DataColumn
        
        Private columnReceive_Qty As Global.System.Data.DataColumn
        
        Private columnstr1 As Global.System.Data.DataColumn
        
        Private columnstr2 As Global.System.Data.DataColumn
        
        Private columnstr3 As Global.System.Data.DataColumn
        
        Private columnstr4 As Global.System.Data.DataColumn
        
        Private columnstr5 As Global.System.Data.DataColumn
        
        Private columnnum1 As Global.System.Data.DataColumn
        
        Private columnnum2 As Global.System.Data.DataColumn
        
        Private columnnum3 As Global.System.Data.DataColumn
        
        Private columnnum4 As Global.System.Data.DataColumn
        
        Private columnnum5 As Global.System.Data.DataColumn
        
        Private columnPurchaseOrder_Index As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_Rpt_Discrepancy"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Supplier_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PO_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ETA_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnETA_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Receive_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceive_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BrandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SKU_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PO_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Damage_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDamage_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shortage_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShortage_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Excess_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcess_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Receive_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceive_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property num1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property num2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property num3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property num4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property num5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PurchaseOrder_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseOrder_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_Rpt_DiscrepancyRow
            Get
                Return CType(Me.Rows(index),View_Rpt_DiscrepancyRow)
            End Get
        End Property
        
        Public Event View_Rpt_DiscrepancyRowChanging As View_Rpt_DiscrepancyRowChangeEventHandler
        
        Public Event View_Rpt_DiscrepancyRowChanged As View_Rpt_DiscrepancyRowChangeEventHandler
        
        Public Event View_Rpt_DiscrepancyRowDeleting As View_Rpt_DiscrepancyRowChangeEventHandler
        
        Public Event View_Rpt_DiscrepancyRowDeleted As View_Rpt_DiscrepancyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddView_Rpt_DiscrepancyRow(ByVal row As View_Rpt_DiscrepancyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddView_Rpt_DiscrepancyRow( _
                    ByVal Supplier_Name As String,  _
                    ByVal PO_Number As String,  _
                    ByVal ETA_Date As Date,  _
                    ByVal Receive_Date As Date,  _
                    ByVal Invoice_Number As String,  _
                    ByVal Invoice_Date As Date,  _
                    ByVal ASN As String,  _
                    ByVal Brand As String,  _
                    ByVal SKU As String,  _
                    ByVal SKU_Description As String,  _
                    ByVal PO_QTY As Decimal,  _
                    ByVal Damage_QTY As Decimal,  _
                    ByVal Shortage_QTY As Decimal,  _
                    ByVal Excess_QTY As Decimal,  _
                    ByVal Receive_Qty As Decimal,  _
                    ByVal str1 As String,  _
                    ByVal str2 As String,  _
                    ByVal str3 As String,  _
                    ByVal str4 As String,  _
                    ByVal str5 As String,  _
                    ByVal num1 As String,  _
                    ByVal num2 As String,  _
                    ByVal num3 As String,  _
                    ByVal num4 As String,  _
                    ByVal num5 As String,  _
                    ByVal PurchaseOrder_Index As String) As View_Rpt_DiscrepancyRow
            Dim rowView_Rpt_DiscrepancyRow As View_Rpt_DiscrepancyRow = CType(Me.NewRow,View_Rpt_DiscrepancyRow)
            Dim columnValuesArray() As Object = New Object() {Supplier_Name, PO_Number, ETA_Date, Receive_Date, Invoice_Number, Invoice_Date, ASN, Brand, SKU, SKU_Description, PO_QTY, Damage_QTY, Shortage_QTY, Excess_QTY, Receive_Qty, str1, str2, str3, str4, str5, num1, num2, num3, num4, num5, PurchaseOrder_Index}
            rowView_Rpt_DiscrepancyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_Rpt_DiscrepancyRow)
            Return rowView_Rpt_DiscrepancyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_Rpt_DiscrepancyDataTable = CType(MyBase.Clone,View_Rpt_DiscrepancyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_Rpt_DiscrepancyDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSupplier_Name = MyBase.Columns("Supplier_Name")
            Me.columnPO_Number = MyBase.Columns("PO_Number")
            Me.columnETA_Date = MyBase.Columns("ETA_Date")
            Me.columnReceive_Date = MyBase.Columns("Receive_Date")
            Me.columnInvoice_Number = MyBase.Columns("Invoice_Number")
            Me.columnInvoice_Date = MyBase.Columns("Invoice_Date")
            Me.columnASN = MyBase.Columns("ASN")
            Me.columnBrand = MyBase.Columns("Brand")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnSKU_Description = MyBase.Columns("SKU_Description")
            Me.columnPO_QTY = MyBase.Columns("PO_QTY")
            Me.columnDamage_QTY = MyBase.Columns("Damage_QTY")
            Me.columnShortage_QTY = MyBase.Columns("Shortage_QTY")
            Me.columnExcess_QTY = MyBase.Columns("Excess_QTY")
            Me.columnReceive_Qty = MyBase.Columns("Receive_Qty")
            Me.columnstr1 = MyBase.Columns("str1")
            Me.columnstr2 = MyBase.Columns("str2")
            Me.columnstr3 = MyBase.Columns("str3")
            Me.columnstr4 = MyBase.Columns("str4")
            Me.columnstr5 = MyBase.Columns("str5")
            Me.columnnum1 = MyBase.Columns("num1")
            Me.columnnum2 = MyBase.Columns("num2")
            Me.columnnum3 = MyBase.Columns("num3")
            Me.columnnum4 = MyBase.Columns("num4")
            Me.columnnum5 = MyBase.Columns("num5")
            Me.columnPurchaseOrder_Index = MyBase.Columns("PurchaseOrder_Index")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSupplier_Name = New Global.System.Data.DataColumn("Supplier_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_Name)
            Me.columnPO_Number = New Global.System.Data.DataColumn("PO_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO_Number)
            Me.columnETA_Date = New Global.System.Data.DataColumn("ETA_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnETA_Date)
            Me.columnReceive_Date = New Global.System.Data.DataColumn("Receive_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceive_Date)
            Me.columnInvoice_Number = New Global.System.Data.DataColumn("Invoice_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_Number)
            Me.columnInvoice_Date = New Global.System.Data.DataColumn("Invoice_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_Date)
            Me.columnASN = New Global.System.Data.DataColumn("ASN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASN)
            Me.columnBrand = New Global.System.Data.DataColumn("Brand", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnSKU_Description = New Global.System.Data.DataColumn("SKU_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU_Description)
            Me.columnPO_QTY = New Global.System.Data.DataColumn("PO_QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO_QTY)
            Me.columnDamage_QTY = New Global.System.Data.DataColumn("Damage_QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDamage_QTY)
            Me.columnShortage_QTY = New Global.System.Data.DataColumn("Shortage_QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShortage_QTY)
            Me.columnExcess_QTY = New Global.System.Data.DataColumn("Excess_QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcess_QTY)
            Me.columnReceive_Qty = New Global.System.Data.DataColumn("Receive_Qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceive_Qty)
            Me.columnstr1 = New Global.System.Data.DataColumn("str1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr1)
            Me.columnstr2 = New Global.System.Data.DataColumn("str2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr2)
            Me.columnstr3 = New Global.System.Data.DataColumn("str3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr3)
            Me.columnstr4 = New Global.System.Data.DataColumn("str4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr4)
            Me.columnstr5 = New Global.System.Data.DataColumn("str5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr5)
            Me.columnnum1 = New Global.System.Data.DataColumn("num1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum1)
            Me.columnnum2 = New Global.System.Data.DataColumn("num2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum2)
            Me.columnnum3 = New Global.System.Data.DataColumn("num3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum3)
            Me.columnnum4 = New Global.System.Data.DataColumn("num4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum4)
            Me.columnnum5 = New Global.System.Data.DataColumn("num5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum5)
            Me.columnPurchaseOrder_Index = New Global.System.Data.DataColumn("PurchaseOrder_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseOrder_Index)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewView_Rpt_DiscrepancyRow() As View_Rpt_DiscrepancyRow
            Return CType(Me.NewRow,View_Rpt_DiscrepancyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_Rpt_DiscrepancyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_Rpt_DiscrepancyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_Rpt_DiscrepancyRowChangedEvent) Is Nothing) Then
                RaiseEvent View_Rpt_DiscrepancyRowChanged(Me, New View_Rpt_DiscrepancyRowChangeEvent(CType(e.Row,View_Rpt_DiscrepancyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_Rpt_DiscrepancyRowChangingEvent) Is Nothing) Then
                RaiseEvent View_Rpt_DiscrepancyRowChanging(Me, New View_Rpt_DiscrepancyRowChangeEvent(CType(e.Row,View_Rpt_DiscrepancyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_Rpt_DiscrepancyRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_Rpt_DiscrepancyRowDeleted(Me, New View_Rpt_DiscrepancyRowChangeEvent(CType(e.Row,View_Rpt_DiscrepancyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_Rpt_DiscrepancyRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_Rpt_DiscrepancyRowDeleting(Me, New View_Rpt_DiscrepancyRowChangeEvent(CType(e.Row,View_Rpt_DiscrepancyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveView_Rpt_DiscrepancyRow(ByVal row As View_Rpt_DiscrepancyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsDiscrepancy = New dsDiscrepancy
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_Rpt_DiscrepancyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class View_Rpt_DiscrepancyRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_Rpt_Discrepancy As View_Rpt_DiscrepancyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_Rpt_Discrepancy = CType(Me.Table,View_Rpt_DiscrepancyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Supplier_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.Supplier_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_Name' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.Supplier_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PO_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.PO_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO_Number' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.PO_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ETA_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.ETA_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ETA_Date' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.ETA_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Receive_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.Receive_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Receive_Date' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.Receive_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.Invoice_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_Number' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.Invoice_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.Invoice_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_Date' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.Invoice_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASN() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.ASNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASN' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.ASNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Brand() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.BrandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.BrandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SKU() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.SKUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SKU' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.SKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SKU_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.SKU_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SKU_Description' in table 'View_Rpt_Discrepancy' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.SKU_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PO_QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.PO_QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO_QTY' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.PO_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Damage_QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.Damage_QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Damage_QTY' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.Damage_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shortage_QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.Shortage_QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shortage_QTY' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.Shortage_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Excess_QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.Excess_QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Excess_QTY' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.Excess_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Receive_Qty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.Receive_QtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Receive_Qty' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.Receive_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str1() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.str1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str1' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.str1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str2() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.str2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str2' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.str2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str3() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.str3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str3' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.str3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str4() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.str4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str4' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.str4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str5() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.str5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str5' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.str5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num1() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.num1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'num1' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.num1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num2() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.num2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'num2' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.num2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num3() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.num3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'num3' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.num3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num4() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.num4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'num4' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.num4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num5() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.num5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'num5' in table 'View_Rpt_Discrepancy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.num5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PurchaseOrder_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Discrepancy.PurchaseOrder_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseOrder_Index' in table 'View_Rpt_Discrepancy' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Discrepancy.PurchaseOrder_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSupplier_NameNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.Supplier_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSupplier_NameNull()
            Me(Me.tableView_Rpt_Discrepancy.Supplier_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPO_NumberNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.PO_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPO_NumberNull()
            Me(Me.tableView_Rpt_Discrepancy.PO_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsETA_DateNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.ETA_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetETA_DateNull()
            Me(Me.tableView_Rpt_Discrepancy.ETA_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReceive_DateNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.Receive_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReceive_DateNull()
            Me(Me.tableView_Rpt_Discrepancy.Receive_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_NumberNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.Invoice_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_NumberNull()
            Me(Me.tableView_Rpt_Discrepancy.Invoice_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_DateNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.Invoice_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_DateNull()
            Me(Me.tableView_Rpt_Discrepancy.Invoice_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsASNNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.ASNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetASNNull()
            Me(Me.tableView_Rpt_Discrepancy.ASNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBrandNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.BrandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBrandNull()
            Me(Me.tableView_Rpt_Discrepancy.BrandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSKUNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.SKUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSKUNull()
            Me(Me.tableView_Rpt_Discrepancy.SKUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSKU_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.SKU_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSKU_DescriptionNull()
            Me(Me.tableView_Rpt_Discrepancy.SKU_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPO_QTYNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.PO_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPO_QTYNull()
            Me(Me.tableView_Rpt_Discrepancy.PO_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDamage_QTYNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.Damage_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDamage_QTYNull()
            Me(Me.tableView_Rpt_Discrepancy.Damage_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShortage_QTYNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.Shortage_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShortage_QTYNull()
            Me(Me.tableView_Rpt_Discrepancy.Shortage_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExcess_QTYNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.Excess_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExcess_QTYNull()
            Me(Me.tableView_Rpt_Discrepancy.Excess_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReceive_QtyNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.Receive_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReceive_QtyNull()
            Me(Me.tableView_Rpt_Discrepancy.Receive_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr1Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.str1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr1Null()
            Me(Me.tableView_Rpt_Discrepancy.str1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr2Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.str2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr2Null()
            Me(Me.tableView_Rpt_Discrepancy.str2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr3Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.str3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr3Null()
            Me(Me.tableView_Rpt_Discrepancy.str3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr4Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.str4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr4Null()
            Me(Me.tableView_Rpt_Discrepancy.str4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr5Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.str5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr5Null()
            Me(Me.tableView_Rpt_Discrepancy.str5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnum1Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.num1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnum1Null()
            Me(Me.tableView_Rpt_Discrepancy.num1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnum2Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.num2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnum2Null()
            Me(Me.tableView_Rpt_Discrepancy.num2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnum3Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.num3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnum3Null()
            Me(Me.tableView_Rpt_Discrepancy.num3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnum4Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.num4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnum4Null()
            Me(Me.tableView_Rpt_Discrepancy.num4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnum5Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.num5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnum5Null()
            Me(Me.tableView_Rpt_Discrepancy.num5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPurchaseOrder_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Discrepancy.PurchaseOrder_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPurchaseOrder_IndexNull()
            Me(Me.tableView_Rpt_Discrepancy.PurchaseOrder_IndexColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class View_Rpt_DiscrepancyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_Rpt_DiscrepancyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As View_Rpt_DiscrepancyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As View_Rpt_DiscrepancyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
