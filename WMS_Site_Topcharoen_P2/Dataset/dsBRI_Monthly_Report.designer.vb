'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsBRI_Monthly_Report"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsBRI_Monthly_Report
    Inherits Global.System.Data.DataSet
    
    Private tableVIEW_BRI_Monthly_Report As VIEW_BRI_Monthly_ReportDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VIEW_BRI_Monthly_Report")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_BRI_Monthly_ReportDataTable(ds.Tables("VIEW_BRI_Monthly_Report")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_BRI_Monthly_Report() As VIEW_BRI_Monthly_ReportDataTable
        Get
            Return Me.tableVIEW_BRI_Monthly_Report
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsBRI_Monthly_Report = CType(MyBase.Clone,dsBRI_Monthly_Report)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("VIEW_BRI_Monthly_Report")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_BRI_Monthly_ReportDataTable(ds.Tables("VIEW_BRI_Monthly_Report")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVIEW_BRI_Monthly_Report = CType(MyBase.Tables("VIEW_BRI_Monthly_Report"),VIEW_BRI_Monthly_ReportDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_BRI_Monthly_Report) Is Nothing) Then
                Me.tableVIEW_BRI_Monthly_Report.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsBRI_Monthly_Report"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsBRI_Monthly_Report.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVIEW_BRI_Monthly_Report = New VIEW_BRI_Monthly_ReportDataTable
        MyBase.Tables.Add(Me.tableVIEW_BRI_Monthly_Report)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_BRI_Monthly_Report() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsBRI_Monthly_Report = New dsBRI_Monthly_Report
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub VIEW_BRI_Monthly_ReportRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_BRI_Monthly_ReportRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_BRI_Monthly_ReportDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnCustomer_Id As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnSku_Index As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnBrand_Index As Global.System.Data.DataColumn
        
        Private columnBrand_Id As Global.System.Data.DataColumn
        
        Private columnBrand_Des As Global.System.Data.DataColumn
        
        Private columnProduct_Name_th As Global.System.Data.DataColumn
        
        Private columnProduct_Index As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnProductType_Index As Global.System.Data.DataColumn
        
        Private columnPackage_Index As Global.System.Data.DataColumn
        
        Private columnPackage_sku As Global.System.Data.DataColumn
        
        Private columnOrder_Date As Global.System.Data.DataColumn
        
        Private columnSum_QtyIn As Global.System.Data.DataColumn
        
        Private columnSum_QtyOut As Global.System.Data.DataColumn
        
        Private columnSum_QtyBal As Global.System.Data.DataColumn
        
        Private columnQty_Bal_Begin As Global.System.Data.DataColumn
        
        Private columnSum_VolumeIn As Global.System.Data.DataColumn
        
        Private columnSum_VolumeOut As Global.System.Data.DataColumn
        
        Private columnSum_WeightBal As Global.System.Data.DataColumn
        
        Private columnSum_VolumeBal As Global.System.Data.DataColumn
        
        Private columnVolume_Bal_Begin As Global.System.Data.DataColumn
        
        Private columnPLot As Global.System.Data.DataColumn
        
        Private columnExp_Date As Global.System.Data.DataColumn
        
        Private columnDailyBalance_Index As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_BRI_Monthly_Report"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Brand_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Brand_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Brand_DesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand_Des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Product_Name_thColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Name_th
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Product_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductType_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductType_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Package_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Package_skuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_sku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Order_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrder_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_QtyInColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_QtyIn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_QtyOutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_QtyOut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_QtyBalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_QtyBal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_Bal_BeginColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_Bal_Begin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_VolumeInColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_VolumeIn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_VolumeOutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_VolumeOut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_WeightBalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_WeightBal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_VolumeBalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_VolumeBal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Volume_Bal_BeginColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume_Bal_Begin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PLotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Exp_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExp_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DailyBalance_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDailyBalance_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_BRI_Monthly_ReportRow
            Get
                Return CType(Me.Rows(index),VIEW_BRI_Monthly_ReportRow)
            End Get
        End Property
        
        Public Event VIEW_BRI_Monthly_ReportRowChanging As VIEW_BRI_Monthly_ReportRowChangeEventHandler
        
        Public Event VIEW_BRI_Monthly_ReportRowChanged As VIEW_BRI_Monthly_ReportRowChangeEventHandler
        
        Public Event VIEW_BRI_Monthly_ReportRowDeleting As VIEW_BRI_Monthly_ReportRowChangeEventHandler
        
        Public Event VIEW_BRI_Monthly_ReportRowDeleted As VIEW_BRI_Monthly_ReportRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_BRI_Monthly_ReportRow(ByVal row As VIEW_BRI_Monthly_ReportRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_BRI_Monthly_ReportRow( _
                    ByVal Customer_Index As String,  _
                    ByVal Customer_Id As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal Sku_Index As String,  _
                    ByVal Sku_Id As String,  _
                    ByVal Brand_Index As String,  _
                    ByVal Brand_Id As String,  _
                    ByVal Brand_Des As String,  _
                    ByVal Product_Name_th As String,  _
                    ByVal Product_Index As String,  _
                    ByVal Description As String,  _
                    ByVal ProductType_Index As String,  _
                    ByVal Package_Index As String,  _
                    ByVal Package_sku As String,  _
                    ByVal Order_Date As Date,  _
                    ByVal Sum_QtyIn As Double,  _
                    ByVal Sum_QtyOut As Double,  _
                    ByVal Sum_QtyBal As Double,  _
                    ByVal Qty_Bal_Begin As Double,  _
                    ByVal Sum_VolumeIn As Double,  _
                    ByVal Sum_VolumeOut As Double,  _
                    ByVal Sum_WeightBal As Double,  _
                    ByVal Sum_VolumeBal As Double,  _
                    ByVal Volume_Bal_Begin As Double,  _
                    ByVal PLot As String,  _
                    ByVal Exp_Date As Date) As VIEW_BRI_Monthly_ReportRow
            Dim rowVIEW_BRI_Monthly_ReportRow As VIEW_BRI_Monthly_ReportRow = CType(Me.NewRow,VIEW_BRI_Monthly_ReportRow)
            Dim columnValuesArray() As Object = New Object() {Customer_Index, Customer_Id, Customer_Name, Sku_Index, Sku_Id, Brand_Index, Brand_Id, Brand_Des, Product_Name_th, Product_Index, Description, ProductType_Index, Package_Index, Package_sku, Order_Date, Sum_QtyIn, Sum_QtyOut, Sum_QtyBal, Qty_Bal_Begin, Sum_VolumeIn, Sum_VolumeOut, Sum_WeightBal, Sum_VolumeBal, Volume_Bal_Begin, PLot, Exp_Date, Nothing}
            rowVIEW_BRI_Monthly_ReportRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_BRI_Monthly_ReportRow)
            Return rowVIEW_BRI_Monthly_ReportRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_BRI_Monthly_ReportDataTable = CType(MyBase.Clone,VIEW_BRI_Monthly_ReportDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_BRI_Monthly_ReportDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnCustomer_Id = MyBase.Columns("Customer_Id")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnSku_Index = MyBase.Columns("Sku_Index")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnBrand_Index = MyBase.Columns("Brand_Index")
            Me.columnBrand_Id = MyBase.Columns("Brand_Id")
            Me.columnBrand_Des = MyBase.Columns("Brand_Des")
            Me.columnProduct_Name_th = MyBase.Columns("Product_Name_th")
            Me.columnProduct_Index = MyBase.Columns("Product_Index")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnProductType_Index = MyBase.Columns("ProductType_Index")
            Me.columnPackage_Index = MyBase.Columns("Package_Index")
            Me.columnPackage_sku = MyBase.Columns("Package_sku")
            Me.columnOrder_Date = MyBase.Columns("Order_Date")
            Me.columnSum_QtyIn = MyBase.Columns("Sum_QtyIn")
            Me.columnSum_QtyOut = MyBase.Columns("Sum_QtyOut")
            Me.columnSum_QtyBal = MyBase.Columns("Sum_QtyBal")
            Me.columnQty_Bal_Begin = MyBase.Columns("Qty_Bal_Begin")
            Me.columnSum_VolumeIn = MyBase.Columns("Sum_VolumeIn")
            Me.columnSum_VolumeOut = MyBase.Columns("Sum_VolumeOut")
            Me.columnSum_WeightBal = MyBase.Columns("Sum_WeightBal")
            Me.columnSum_VolumeBal = MyBase.Columns("Sum_VolumeBal")
            Me.columnVolume_Bal_Begin = MyBase.Columns("Volume_Bal_Begin")
            Me.columnPLot = MyBase.Columns("PLot")
            Me.columnExp_Date = MyBase.Columns("Exp_Date")
            Me.columnDailyBalance_Index = MyBase.Columns("DailyBalance_Index")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnCustomer_Id = New Global.System.Data.DataColumn("Customer_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Id)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnSku_Index = New Global.System.Data.DataColumn("Sku_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Index)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnBrand_Index = New Global.System.Data.DataColumn("Brand_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand_Index)
            Me.columnBrand_Id = New Global.System.Data.DataColumn("Brand_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand_Id)
            Me.columnBrand_Des = New Global.System.Data.DataColumn("Brand_Des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand_Des)
            Me.columnProduct_Name_th = New Global.System.Data.DataColumn("Product_Name_th", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Name_th)
            Me.columnProduct_Index = New Global.System.Data.DataColumn("Product_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Index)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnProductType_Index = New Global.System.Data.DataColumn("ProductType_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductType_Index)
            Me.columnPackage_Index = New Global.System.Data.DataColumn("Package_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Index)
            Me.columnPackage_sku = New Global.System.Data.DataColumn("Package_sku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_sku)
            Me.columnOrder_Date = New Global.System.Data.DataColumn("Order_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrder_Date)
            Me.columnSum_QtyIn = New Global.System.Data.DataColumn("Sum_QtyIn", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_QtyIn)
            Me.columnSum_QtyOut = New Global.System.Data.DataColumn("Sum_QtyOut", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_QtyOut)
            Me.columnSum_QtyBal = New Global.System.Data.DataColumn("Sum_QtyBal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_QtyBal)
            Me.columnQty_Bal_Begin = New Global.System.Data.DataColumn("Qty_Bal_Begin", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_Bal_Begin)
            Me.columnSum_VolumeIn = New Global.System.Data.DataColumn("Sum_VolumeIn", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_VolumeIn)
            Me.columnSum_VolumeOut = New Global.System.Data.DataColumn("Sum_VolumeOut", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_VolumeOut)
            Me.columnSum_WeightBal = New Global.System.Data.DataColumn("Sum_WeightBal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_WeightBal)
            Me.columnSum_VolumeBal = New Global.System.Data.DataColumn("Sum_VolumeBal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_VolumeBal)
            Me.columnVolume_Bal_Begin = New Global.System.Data.DataColumn("Volume_Bal_Begin", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume_Bal_Begin)
            Me.columnPLot = New Global.System.Data.DataColumn("PLot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLot)
            Me.columnExp_Date = New Global.System.Data.DataColumn("Exp_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExp_Date)
            Me.columnDailyBalance_Index = New Global.System.Data.DataColumn("DailyBalance_Index", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDailyBalance_Index)
            Me.columnCustomer_Index.MaxLength = 13
            Me.columnCustomer_Id.MaxLength = 13
            Me.columnCustomer_Name.MaxLength = 100
            Me.columnSku_Index.MaxLength = 13
            Me.columnSku_Id.MaxLength = 50
            Me.columnBrand_Index.MaxLength = 13
            Me.columnBrand_Id.MaxLength = 15
            Me.columnBrand_Des.MaxLength = 100
            Me.columnProduct_Name_th.MaxLength = 100
            Me.columnProduct_Index.MaxLength = 13
            Me.columnDescription.MaxLength = 100
            Me.columnProductType_Index.MaxLength = 13
            Me.columnPackage_Index.MaxLength = 13
            Me.columnPackage_sku.MaxLength = 100
            Me.columnPLot.MaxLength = 50
            Me.columnDailyBalance_Index.AutoIncrement = true
            Me.columnDailyBalance_Index.AllowDBNull = false
            Me.columnDailyBalance_Index.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_BRI_Monthly_ReportRow() As VIEW_BRI_Monthly_ReportRow
            Return CType(Me.NewRow,VIEW_BRI_Monthly_ReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_BRI_Monthly_ReportRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_BRI_Monthly_ReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_BRI_Monthly_ReportRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_BRI_Monthly_ReportRowChanged(Me, New VIEW_BRI_Monthly_ReportRowChangeEvent(CType(e.Row,VIEW_BRI_Monthly_ReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_BRI_Monthly_ReportRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_BRI_Monthly_ReportRowChanging(Me, New VIEW_BRI_Monthly_ReportRowChangeEvent(CType(e.Row,VIEW_BRI_Monthly_ReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_BRI_Monthly_ReportRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_BRI_Monthly_ReportRowDeleted(Me, New VIEW_BRI_Monthly_ReportRowChangeEvent(CType(e.Row,VIEW_BRI_Monthly_ReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_BRI_Monthly_ReportRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_BRI_Monthly_ReportRowDeleting(Me, New VIEW_BRI_Monthly_ReportRowChangeEvent(CType(e.Row,VIEW_BRI_Monthly_ReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_BRI_Monthly_ReportRow(ByVal row As VIEW_BRI_Monthly_ReportRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsBRI_Monthly_Report = New dsBRI_Monthly_Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_BRI_Monthly_ReportDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_BRI_Monthly_ReportRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_BRI_Monthly_Report As VIEW_BRI_Monthly_ReportDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_BRI_Monthly_Report = CType(Me.Table,VIEW_BRI_Monthly_ReportDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Customer_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Index' in table 'VIEW_BRI_Monthly_Report' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Customer_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Id' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Customer_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'VIEW_BRI_Monthly_Report' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Sku_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Index' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Sku_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Brand_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Brand_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand_Index' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Brand_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Brand_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Brand_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand_Id' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Brand_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Brand_Des() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Brand_DesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand_Des' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Brand_DesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Product_Name_th() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Product_Name_thColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_Name_th' in table 'VIEW_BRI_Monthly_Report' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Product_Name_thColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Product_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Product_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_Index' in table 'VIEW_BRI_Monthly_Report' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Product_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductType_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.ProductType_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductType_Index' in table 'VIEW_BRI_Monthly_Report' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.ProductType_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Package_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Package_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package_Index' in table 'VIEW_BRI_Monthly_Report' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Package_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Package_sku() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Package_skuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package_sku' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Package_skuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Order_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Order_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Order_Date' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Order_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_QtyIn() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyInColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_QtyIn' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyInColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_QtyOut() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyOutColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_QtyOut' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyOutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_QtyBal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyBalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_QtyBal' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyBalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_Bal_Begin() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Qty_Bal_BeginColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_Bal_Begin' in table 'VIEW_BRI_Monthly_Report' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Qty_Bal_BeginColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_VolumeIn() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeInColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_VolumeIn' in table 'VIEW_BRI_Monthly_Report' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeInColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_VolumeOut() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeOutColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_VolumeOut' in table 'VIEW_BRI_Monthly_Report' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeOutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_WeightBal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Sum_WeightBalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_WeightBal' in table 'VIEW_BRI_Monthly_Report' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Sum_WeightBalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_VolumeBal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeBalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_VolumeBal' in table 'VIEW_BRI_Monthly_Report' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeBalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume_Bal_Begin() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Volume_Bal_BeginColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volume_Bal_Begin' in table 'VIEW_BRI_Monthly_Report' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Volume_Bal_BeginColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PLot() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.PLotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLot' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.PLotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Exp_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.Exp_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Exp_Date' in table 'VIEW_BRI_Monthly_Report' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.Exp_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DailyBalance_Index() As Integer
            Get
                Return CType(Me(Me.tableVIEW_BRI_Monthly_Report.DailyBalance_IndexColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_BRI_Monthly_Report.DailyBalance_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Customer_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IndexNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Customer_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Customer_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IdNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Customer_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Sku_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IndexNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Sku_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBrand_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Brand_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBrand_IndexNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Brand_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBrand_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Brand_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBrand_IdNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Brand_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBrand_DesNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Brand_DesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBrand_DesNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Brand_DesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProduct_Name_thNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Product_Name_thColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProduct_Name_thNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Product_Name_thColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProduct_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Product_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProduct_IndexNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Product_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductType_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.ProductType_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductType_IndexNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.ProductType_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackage_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Package_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackage_IndexNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Package_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackage_skuNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Package_skuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackage_skuNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Package_skuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOrder_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Order_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOrder_DateNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Order_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_QtyInNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyInColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_QtyInNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyInColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_QtyOutNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyOutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_QtyOutNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyOutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_QtyBalNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyBalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_QtyBalNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Sum_QtyBalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_Bal_BeginNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Qty_Bal_BeginColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_Bal_BeginNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Qty_Bal_BeginColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_VolumeInNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeInColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_VolumeInNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeInColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_VolumeOutNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeOutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_VolumeOutNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeOutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_WeightBalNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Sum_WeightBalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_WeightBalNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Sum_WeightBalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_VolumeBalNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeBalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_VolumeBalNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Sum_VolumeBalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolume_Bal_BeginNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Volume_Bal_BeginColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolume_Bal_BeginNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Volume_Bal_BeginColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPLotNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.PLotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPLotNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.PLotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExp_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_BRI_Monthly_Report.Exp_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExp_DateNull()
            Me(Me.tableVIEW_BRI_Monthly_Report.Exp_DateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_BRI_Monthly_ReportRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_BRI_Monthly_ReportRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_BRI_Monthly_ReportRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_BRI_Monthly_ReportRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
