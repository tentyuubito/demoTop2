'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8935
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsDiscrepancy"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsDiscrepancy
    Inherits Global.System.Data.DataSet
    
    Private tableVIEW_RPT_PO_TopCharoen As VIEW_RPT_PO_TopCharoenDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VIEW_RPT_PO_TopCharoen")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_PO_TopCharoenDataTable(ds.Tables("VIEW_RPT_PO_TopCharoen")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_RPT_PO_TopCharoen() As VIEW_RPT_PO_TopCharoenDataTable
        Get
            Return Me.tableVIEW_RPT_PO_TopCharoen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsDiscrepancy = CType(MyBase.Clone,dsDiscrepancy)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("VIEW_RPT_PO_TopCharoen")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_RPT_PO_TopCharoenDataTable(ds.Tables("VIEW_RPT_PO_TopCharoen")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVIEW_RPT_PO_TopCharoen = CType(MyBase.Tables("VIEW_RPT_PO_TopCharoen"),VIEW_RPT_PO_TopCharoenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_RPT_PO_TopCharoen) Is Nothing) Then
                Me.tableVIEW_RPT_PO_TopCharoen.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsDiscrepancy"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsDiscrepancy.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVIEW_RPT_PO_TopCharoen = New VIEW_RPT_PO_TopCharoenDataTable
        MyBase.Tables.Add(Me.tableVIEW_RPT_PO_TopCharoen)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_RPT_PO_TopCharoen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsDiscrepancy = New dsDiscrepancy
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub VIEW_RPT_PO_TopCharoenRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_RPT_PO_TopCharoenRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_RPT_PO_TopCharoenDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSupplier_Name As Global.System.Data.DataColumn
        
        Private columnPO_No As Global.System.Data.DataColumn
        
        Private columnETA_Date As Global.System.Data.DataColumn
        
        Private columnReceive_Date As Global.System.Data.DataColumn
        
        Private columnInvoice_No As Global.System.Data.DataColumn
        
        Private columnInvoice_Date As Global.System.Data.DataColumn
        
        Private columnASN As Global.System.Data.DataColumn
        
        Private columnBrand As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnSku_Name As Global.System.Data.DataColumn
        
        Private columnPo_Qty As Global.System.Data.DataColumn
        
        Private columnDamage_Qty As Global.System.Data.DataColumn
        
        Private columnShortage_Qty As Global.System.Data.DataColumn
        
        Private columnExcess_Qty As Global.System.Data.DataColumn
        
        Private columnReceive_Qty As Global.System.Data.DataColumn
        
        Private columnFlo1 As Global.System.Data.DataColumn
        
        Private columnFlo2 As Global.System.Data.DataColumn
        
        Private columnFlo3 As Global.System.Data.DataColumn
        
        Private columnFlo4 As Global.System.Data.DataColumn
        
        Private columnFlo5 As Global.System.Data.DataColumn
        
        Private columnStr1 As Global.System.Data.DataColumn
        
        Private columnStr2 As Global.System.Data.DataColumn
        
        Private columnStr3 As Global.System.Data.DataColumn
        
        Private columnStr4 As Global.System.Data.DataColumn
        
        Private columnStr5 As Global.System.Data.DataColumn
        
        Private columnDate1 As Global.System.Data.DataColumn
        
        Private columnDate2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_RPT_PO_TopCharoen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Supplier_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PO_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ETA_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnETA_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Receive_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceive_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BrandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Po_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPo_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Damage_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDamage_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shortage_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShortage_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Excess_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcess_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Receive_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceive_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Flo5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlo5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Str5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStr5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Date1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Date2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_RPT_PO_TopCharoenRow
            Get
                Return CType(Me.Rows(index),VIEW_RPT_PO_TopCharoenRow)
            End Get
        End Property
        
        Public Event VIEW_RPT_PO_TopCharoenRowChanging As VIEW_RPT_PO_TopCharoenRowChangeEventHandler
        
        Public Event VIEW_RPT_PO_TopCharoenRowChanged As VIEW_RPT_PO_TopCharoenRowChangeEventHandler
        
        Public Event VIEW_RPT_PO_TopCharoenRowDeleting As VIEW_RPT_PO_TopCharoenRowChangeEventHandler
        
        Public Event VIEW_RPT_PO_TopCharoenRowDeleted As VIEW_RPT_PO_TopCharoenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_RPT_PO_TopCharoenRow(ByVal row As VIEW_RPT_PO_TopCharoenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_RPT_PO_TopCharoenRow( _
                    ByVal Supplier_Name As String,  _
                    ByVal PO_No As String,  _
                    ByVal ETA_Date As Date,  _
                    ByVal Receive_Date As Date,  _
                    ByVal Invoice_No As String,  _
                    ByVal Invoice_Date As Date,  _
                    ByVal ASN As String,  _
                    ByVal Brand As String,  _
                    ByVal Sku_Id As String,  _
                    ByVal Sku_Name As String,  _
                    ByVal Po_Qty As Double,  _
                    ByVal Damage_Qty As Double,  _
                    ByVal Shortage_Qty As Double,  _
                    ByVal Excess_Qty As Double,  _
                    ByVal Receive_Qty As Double,  _
                    ByVal Flo1 As Double,  _
                    ByVal Flo2 As Double,  _
                    ByVal Flo3 As Double,  _
                    ByVal Flo4 As Double,  _
                    ByVal Flo5 As Double,  _
                    ByVal Str1 As String,  _
                    ByVal Str2 As String,  _
                    ByVal Str3 As String,  _
                    ByVal Str4 As String,  _
                    ByVal Str5 As String,  _
                    ByVal Date1 As Date,  _
                    ByVal Date2 As Date) As VIEW_RPT_PO_TopCharoenRow
            Dim rowVIEW_RPT_PO_TopCharoenRow As VIEW_RPT_PO_TopCharoenRow = CType(Me.NewRow,VIEW_RPT_PO_TopCharoenRow)
            Dim columnValuesArray() As Object = New Object() {Supplier_Name, PO_No, ETA_Date, Receive_Date, Invoice_No, Invoice_Date, ASN, Brand, Sku_Id, Sku_Name, Po_Qty, Damage_Qty, Shortage_Qty, Excess_Qty, Receive_Qty, Flo1, Flo2, Flo3, Flo4, Flo5, Str1, Str2, Str3, Str4, Str5, Date1, Date2}
            rowVIEW_RPT_PO_TopCharoenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_RPT_PO_TopCharoenRow)
            Return rowVIEW_RPT_PO_TopCharoenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_RPT_PO_TopCharoenDataTable = CType(MyBase.Clone,VIEW_RPT_PO_TopCharoenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_RPT_PO_TopCharoenDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSupplier_Name = MyBase.Columns("Supplier_Name")
            Me.columnPO_No = MyBase.Columns("PO_No")
            Me.columnETA_Date = MyBase.Columns("ETA_Date")
            Me.columnReceive_Date = MyBase.Columns("Receive_Date")
            Me.columnInvoice_No = MyBase.Columns("Invoice_No")
            Me.columnInvoice_Date = MyBase.Columns("Invoice_Date")
            Me.columnASN = MyBase.Columns("ASN")
            Me.columnBrand = MyBase.Columns("Brand")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnSku_Name = MyBase.Columns("Sku_Name")
            Me.columnPo_Qty = MyBase.Columns("Po_Qty")
            Me.columnDamage_Qty = MyBase.Columns("Damage_Qty")
            Me.columnShortage_Qty = MyBase.Columns("Shortage_Qty")
            Me.columnExcess_Qty = MyBase.Columns("Excess_Qty")
            Me.columnReceive_Qty = MyBase.Columns("Receive_Qty")
            Me.columnFlo1 = MyBase.Columns("Flo1")
            Me.columnFlo2 = MyBase.Columns("Flo2")
            Me.columnFlo3 = MyBase.Columns("Flo3")
            Me.columnFlo4 = MyBase.Columns("Flo4")
            Me.columnFlo5 = MyBase.Columns("Flo5")
            Me.columnStr1 = MyBase.Columns("Str1")
            Me.columnStr2 = MyBase.Columns("Str2")
            Me.columnStr3 = MyBase.Columns("Str3")
            Me.columnStr4 = MyBase.Columns("Str4")
            Me.columnStr5 = MyBase.Columns("Str5")
            Me.columnDate1 = MyBase.Columns("Date1")
            Me.columnDate2 = MyBase.Columns("Date2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSupplier_Name = New Global.System.Data.DataColumn("Supplier_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_Name)
            Me.columnPO_No = New Global.System.Data.DataColumn("PO_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO_No)
            Me.columnETA_Date = New Global.System.Data.DataColumn("ETA_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnETA_Date)
            Me.columnReceive_Date = New Global.System.Data.DataColumn("Receive_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceive_Date)
            Me.columnInvoice_No = New Global.System.Data.DataColumn("Invoice_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_No)
            Me.columnInvoice_Date = New Global.System.Data.DataColumn("Invoice_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_Date)
            Me.columnASN = New Global.System.Data.DataColumn("ASN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASN)
            Me.columnBrand = New Global.System.Data.DataColumn("Brand", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnSku_Name = New Global.System.Data.DataColumn("Sku_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Name)
            Me.columnPo_Qty = New Global.System.Data.DataColumn("Po_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPo_Qty)
            Me.columnDamage_Qty = New Global.System.Data.DataColumn("Damage_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDamage_Qty)
            Me.columnShortage_Qty = New Global.System.Data.DataColumn("Shortage_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShortage_Qty)
            Me.columnExcess_Qty = New Global.System.Data.DataColumn("Excess_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcess_Qty)
            Me.columnReceive_Qty = New Global.System.Data.DataColumn("Receive_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceive_Qty)
            Me.columnFlo1 = New Global.System.Data.DataColumn("Flo1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo1)
            Me.columnFlo2 = New Global.System.Data.DataColumn("Flo2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo2)
            Me.columnFlo3 = New Global.System.Data.DataColumn("Flo3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo3)
            Me.columnFlo4 = New Global.System.Data.DataColumn("Flo4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo4)
            Me.columnFlo5 = New Global.System.Data.DataColumn("Flo5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlo5)
            Me.columnStr1 = New Global.System.Data.DataColumn("Str1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr1)
            Me.columnStr2 = New Global.System.Data.DataColumn("Str2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr2)
            Me.columnStr3 = New Global.System.Data.DataColumn("Str3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr3)
            Me.columnStr4 = New Global.System.Data.DataColumn("Str4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr4)
            Me.columnStr5 = New Global.System.Data.DataColumn("Str5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStr5)
            Me.columnDate1 = New Global.System.Data.DataColumn("Date1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate1)
            Me.columnDate2 = New Global.System.Data.DataColumn("Date2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate2)
            Me.columnPO_No.Caption = "Column1"
            Me.columnETA_Date.Caption = "Column1"
            Me.columnReceive_Date.Caption = "Column1"
            Me.columnInvoice_No.Caption = "Column1"
            Me.columnInvoice_Date.Caption = "Column1"
            Me.columnASN.Caption = "Column1"
            Me.columnBrand.Caption = "Column1"
            Me.columnSku_Id.Caption = "Column1"
            Me.columnSku_Name.Caption = "Column1"
            Me.columnPo_Qty.Caption = "Column1"
            Me.columnDamage_Qty.Caption = "Column1"
            Me.columnShortage_Qty.Caption = "Column1"
            Me.columnExcess_Qty.Caption = "Column1"
            Me.columnReceive_Qty.Caption = "Column1"
            Me.columnFlo1.Caption = "Column1"
            Me.columnFlo2.Caption = "Column1"
            Me.columnFlo3.Caption = "Column1"
            Me.columnFlo4.Caption = "Column1"
            Me.columnFlo5.Caption = "Column1"
            Me.columnStr1.Caption = "Column1"
            Me.columnStr2.Caption = "Column1"
            Me.columnStr3.Caption = "Column1"
            Me.columnStr4.Caption = "Column1"
            Me.columnStr5.Caption = "Column1"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_RPT_PO_TopCharoenRow() As VIEW_RPT_PO_TopCharoenRow
            Return CType(Me.NewRow,VIEW_RPT_PO_TopCharoenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_RPT_PO_TopCharoenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_RPT_PO_TopCharoenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_RPT_PO_TopCharoenRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_PO_TopCharoenRowChanged(Me, New VIEW_RPT_PO_TopCharoenRowChangeEvent(CType(e.Row,VIEW_RPT_PO_TopCharoenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_RPT_PO_TopCharoenRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_PO_TopCharoenRowChanging(Me, New VIEW_RPT_PO_TopCharoenRowChangeEvent(CType(e.Row,VIEW_RPT_PO_TopCharoenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_RPT_PO_TopCharoenRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_PO_TopCharoenRowDeleted(Me, New VIEW_RPT_PO_TopCharoenRowChangeEvent(CType(e.Row,VIEW_RPT_PO_TopCharoenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_RPT_PO_TopCharoenRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_RPT_PO_TopCharoenRowDeleting(Me, New VIEW_RPT_PO_TopCharoenRowChangeEvent(CType(e.Row,VIEW_RPT_PO_TopCharoenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_RPT_PO_TopCharoenRow(ByVal row As VIEW_RPT_PO_TopCharoenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsDiscrepancy = New dsDiscrepancy
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_RPT_PO_TopCharoenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_RPT_PO_TopCharoenRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_RPT_PO_TopCharoen As VIEW_RPT_PO_TopCharoenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_RPT_PO_TopCharoen = CType(Me.Table,VIEW_RPT_PO_TopCharoenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Supplier_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Supplier_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_Name' in table 'VIEW_RPT_PO_TopCharoen' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Supplier_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PO_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.PO_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO_No' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.PO_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ETA_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.ETA_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ETA_Date' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.ETA_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Receive_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Receive_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Receive_Date' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Receive_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Invoice_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_No' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Invoice_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Invoice_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_Date' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Invoice_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASN() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.ASNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASN' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.ASNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Brand() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.BrandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.BrandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Sku_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Name' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Sku_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Po_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Po_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Po_Qty' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Po_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Damage_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Damage_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Damage_Qty' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Damage_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shortage_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Shortage_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shortage_Qty' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Shortage_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Excess_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Excess_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Excess_Qty' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Excess_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Receive_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Receive_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Receive_Qty' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Receive_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo1' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo2' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo3' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo4' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flo5() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flo5' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Str1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str1' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Str1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Str2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str2' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Str2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Str3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str3' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Str3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str4() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Str4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str4' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Str4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Str5() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Str5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Str5' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Str5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Date1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Date1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date1' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Date1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Date2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_RPT_PO_TopCharoen.Date2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date2' in table 'VIEW_RPT_PO_TopCharoen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_RPT_PO_TopCharoen.Date2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSupplier_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Supplier_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSupplier_NameNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Supplier_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPO_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.PO_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPO_NoNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.PO_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsETA_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.ETA_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetETA_DateNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.ETA_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReceive_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Receive_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReceive_DateNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Receive_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Invoice_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_NoNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Invoice_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Invoice_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_DateNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Invoice_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsASNNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.ASNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetASNNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.ASNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBrandNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.BrandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBrandNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.BrandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Sku_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_NameNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Sku_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPo_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Po_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPo_QtyNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Po_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDamage_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Damage_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDamage_QtyNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Damage_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShortage_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Shortage_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShortage_QtyNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Shortage_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExcess_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Excess_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExcess_QtyNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Excess_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReceive_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Receive_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReceive_QtyNull()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Receive_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Flo1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo1Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo2Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Flo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo2Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo3Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Flo3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo3Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo4Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Flo4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo4Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlo5Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Flo5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlo5Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Flo5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Str1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr1Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Str1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr2Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Str2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr2Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Str2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr3Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Str3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr3Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Str3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr4Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Str4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr4Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Str4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStr5Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Str5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStr5Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Str5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDate1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Date1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDate1Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Date1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDate2Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_RPT_PO_TopCharoen.Date2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDate2Null()
            Me(Me.tableVIEW_RPT_PO_TopCharoen.Date2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_RPT_PO_TopCharoenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_RPT_PO_TopCharoenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_RPT_PO_TopCharoenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_RPT_PO_TopCharoenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
