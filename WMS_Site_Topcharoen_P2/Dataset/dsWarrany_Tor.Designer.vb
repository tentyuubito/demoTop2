'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsWarrany_Tor"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsWarrany_Tor
    Inherits Global.System.Data.DataSet
    
    Private tableView_Rpt_Warranty_Tor As View_Rpt_Warranty_TorDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("View_Rpt_Warranty_Tor")) Is Nothing) Then
                MyBase.Tables.Add(New View_Rpt_Warranty_TorDataTable(ds.Tables("View_Rpt_Warranty_Tor")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_Rpt_Warranty_Tor() As View_Rpt_Warranty_TorDataTable
        Get
            Return Me.tableView_Rpt_Warranty_Tor
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsWarrany_Tor = CType(MyBase.Clone,dsWarrany_Tor)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("View_Rpt_Warranty_Tor")) Is Nothing) Then
                MyBase.Tables.Add(New View_Rpt_Warranty_TorDataTable(ds.Tables("View_Rpt_Warranty_Tor")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableView_Rpt_Warranty_Tor = CType(MyBase.Tables("View_Rpt_Warranty_Tor"),View_Rpt_Warranty_TorDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_Rpt_Warranty_Tor) Is Nothing) Then
                Me.tableView_Rpt_Warranty_Tor.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsWarrany_Tor"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsWarrany_Tor.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableView_Rpt_Warranty_Tor = New View_Rpt_Warranty_TorDataTable
        MyBase.Tables.Add(Me.tableView_Rpt_Warranty_Tor)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeView_Rpt_Warranty_Tor() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsWarrany_Tor = New dsWarrany_Tor
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub View_Rpt_Warranty_TorRowChangeEventHandler(ByVal sender As Object, ByVal e As View_Rpt_Warranty_TorRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_Rpt_Warranty_TorDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnLensNames As Global.System.Data.DataColumn
        
        Private columnGN As Global.System.Data.DataColumn
        
        Private columnRightEyes As Global.System.Data.DataColumn
        
        Private columnLeftEyes As Global.System.Data.DataColumn
        
        Private columnSPH As Global.System.Data.DataColumn
        
        Private columnCYL As Global.System.Data.DataColumn
        
        Private columnAX As Global.System.Data.DataColumn
        
        Private columnADD As Global.System.Data.DataColumn
        
        Private columnShopID As Global.System.Data.DataColumn
        
        Private columnRef As Global.System.Data.DataColumn
        
        Private columnDate As Global.System.Data.DataColumn
        
        Private columnJobNo As Global.System.Data.DataColumn
        
        Private columnOmsOrderNo As Global.System.Data.DataColumn
        
        Private columnindex1 As Global.System.Data.DataColumn
        
        Private columnindex2 As Global.System.Data.DataColumn
        
        Private columnindex3 As Global.System.Data.DataColumn
        
        Private columnstr1 As Global.System.Data.DataColumn
        
        Private columnstr2 As Global.System.Data.DataColumn
        
        Private columnstr3 As Global.System.Data.DataColumn
        
        Private columnstr4 As Global.System.Data.DataColumn
        
        Private columnstr5 As Global.System.Data.DataColumn
        
        Private columnSPH2 As Global.System.Data.DataColumn
        
        Private columnCYL2 As Global.System.Data.DataColumn
        
        Private columnAX2 As Global.System.Data.DataColumn
        
        Private columnADD2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_Rpt_Warranty_Tor"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LensNamesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLensNames
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RightEyesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRightEyes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LeftEyesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeftEyes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CYLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCYL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShopIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShopID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JobNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OmsOrderNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOmsOrderNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property index1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnindex1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property index2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnindex2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property index3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnindex3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property str5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstr5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPH2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPH2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CYL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCYL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AX2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAX2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_Rpt_Warranty_TorRow
            Get
                Return CType(Me.Rows(index),View_Rpt_Warranty_TorRow)
            End Get
        End Property
        
        Public Event View_Rpt_Warranty_TorRowChanging As View_Rpt_Warranty_TorRowChangeEventHandler
        
        Public Event View_Rpt_Warranty_TorRowChanged As View_Rpt_Warranty_TorRowChangeEventHandler
        
        Public Event View_Rpt_Warranty_TorRowDeleting As View_Rpt_Warranty_TorRowChangeEventHandler
        
        Public Event View_Rpt_Warranty_TorRowDeleted As View_Rpt_Warranty_TorRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddView_Rpt_Warranty_TorRow(ByVal row As View_Rpt_Warranty_TorRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddView_Rpt_Warranty_TorRow( _
                    ByVal LensNames As String,  _
                    ByVal GN As String,  _
                    ByVal RightEyes As String,  _
                    ByVal LeftEyes As String,  _
                    ByVal SPH As String,  _
                    ByVal CYL As String,  _
                    ByVal AX As String,  _
                    ByVal ADD As String,  _
                    ByVal ShopID As String,  _
                    ByVal Ref As String,  _
                    ByVal _Date As Date,  _
                    ByVal JobNo As String,  _
                    ByVal OmsOrderNo As String,  _
                    ByVal index1 As String,  _
                    ByVal index2 As String,  _
                    ByVal index3 As String,  _
                    ByVal str1 As String,  _
                    ByVal str2 As String,  _
                    ByVal str3 As String,  _
                    ByVal str4 As String,  _
                    ByVal str5 As String,  _
                    ByVal SPH2 As String,  _
                    ByVal CYL2 As String,  _
                    ByVal AX2 As String,  _
                    ByVal ADD2 As String) As View_Rpt_Warranty_TorRow
            Dim rowView_Rpt_Warranty_TorRow As View_Rpt_Warranty_TorRow = CType(Me.NewRow,View_Rpt_Warranty_TorRow)
            Dim columnValuesArray() As Object = New Object() {LensNames, GN, RightEyes, LeftEyes, SPH, CYL, AX, ADD, ShopID, Ref, _Date, JobNo, OmsOrderNo, index1, index2, index3, str1, str2, str3, str4, str5, SPH2, CYL2, AX2, ADD2}
            rowView_Rpt_Warranty_TorRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_Rpt_Warranty_TorRow)
            Return rowView_Rpt_Warranty_TorRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_Rpt_Warranty_TorDataTable = CType(MyBase.Clone,View_Rpt_Warranty_TorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_Rpt_Warranty_TorDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnLensNames = MyBase.Columns("LensNames")
            Me.columnGN = MyBase.Columns("GN")
            Me.columnRightEyes = MyBase.Columns("RightEyes")
            Me.columnLeftEyes = MyBase.Columns("LeftEyes")
            Me.columnSPH = MyBase.Columns("SPH")
            Me.columnCYL = MyBase.Columns("CYL")
            Me.columnAX = MyBase.Columns("AX")
            Me.columnADD = MyBase.Columns("ADD")
            Me.columnShopID = MyBase.Columns("ShopID")
            Me.columnRef = MyBase.Columns("Ref")
            Me.columnDate = MyBase.Columns("Date")
            Me.columnJobNo = MyBase.Columns("JobNo")
            Me.columnOmsOrderNo = MyBase.Columns("OmsOrderNo")
            Me.columnindex1 = MyBase.Columns("index1")
            Me.columnindex2 = MyBase.Columns("index2")
            Me.columnindex3 = MyBase.Columns("index3")
            Me.columnstr1 = MyBase.Columns("str1")
            Me.columnstr2 = MyBase.Columns("str2")
            Me.columnstr3 = MyBase.Columns("str3")
            Me.columnstr4 = MyBase.Columns("str4")
            Me.columnstr5 = MyBase.Columns("str5")
            Me.columnSPH2 = MyBase.Columns("SPH2")
            Me.columnCYL2 = MyBase.Columns("CYL2")
            Me.columnAX2 = MyBase.Columns("AX2")
            Me.columnADD2 = MyBase.Columns("ADD2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnLensNames = New Global.System.Data.DataColumn("LensNames", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLensNames)
            Me.columnGN = New Global.System.Data.DataColumn("GN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGN)
            Me.columnRightEyes = New Global.System.Data.DataColumn("RightEyes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRightEyes)
            Me.columnLeftEyes = New Global.System.Data.DataColumn("LeftEyes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeftEyes)
            Me.columnSPH = New Global.System.Data.DataColumn("SPH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPH)
            Me.columnCYL = New Global.System.Data.DataColumn("CYL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCYL)
            Me.columnAX = New Global.System.Data.DataColumn("AX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAX)
            Me.columnADD = New Global.System.Data.DataColumn("ADD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD)
            Me.columnShopID = New Global.System.Data.DataColumn("ShopID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShopID)
            Me.columnRef = New Global.System.Data.DataColumn("Ref", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef)
            Me.columnDate = New Global.System.Data.DataColumn("Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DateColumn")
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDate")
            Me.columnDate.ExtendedProperties.Add("Generator_UserColumnName", "Date")
            MyBase.Columns.Add(Me.columnDate)
            Me.columnJobNo = New Global.System.Data.DataColumn("JobNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobNo)
            Me.columnOmsOrderNo = New Global.System.Data.DataColumn("OmsOrderNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOmsOrderNo)
            Me.columnindex1 = New Global.System.Data.DataColumn("index1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindex1)
            Me.columnindex2 = New Global.System.Data.DataColumn("index2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindex2)
            Me.columnindex3 = New Global.System.Data.DataColumn("index3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindex3)
            Me.columnstr1 = New Global.System.Data.DataColumn("str1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr1)
            Me.columnstr2 = New Global.System.Data.DataColumn("str2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr2)
            Me.columnstr3 = New Global.System.Data.DataColumn("str3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr3)
            Me.columnstr4 = New Global.System.Data.DataColumn("str4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr4)
            Me.columnstr5 = New Global.System.Data.DataColumn("str5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstr5)
            Me.columnSPH2 = New Global.System.Data.DataColumn("SPH2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPH2)
            Me.columnCYL2 = New Global.System.Data.DataColumn("CYL2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCYL2)
            Me.columnAX2 = New Global.System.Data.DataColumn("AX2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAX2)
            Me.columnADD2 = New Global.System.Data.DataColumn("ADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD2)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewView_Rpt_Warranty_TorRow() As View_Rpt_Warranty_TorRow
            Return CType(Me.NewRow,View_Rpt_Warranty_TorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_Rpt_Warranty_TorRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_Rpt_Warranty_TorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_Rpt_Warranty_TorRowChangedEvent) Is Nothing) Then
                RaiseEvent View_Rpt_Warranty_TorRowChanged(Me, New View_Rpt_Warranty_TorRowChangeEvent(CType(e.Row,View_Rpt_Warranty_TorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_Rpt_Warranty_TorRowChangingEvent) Is Nothing) Then
                RaiseEvent View_Rpt_Warranty_TorRowChanging(Me, New View_Rpt_Warranty_TorRowChangeEvent(CType(e.Row,View_Rpt_Warranty_TorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_Rpt_Warranty_TorRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_Rpt_Warranty_TorRowDeleted(Me, New View_Rpt_Warranty_TorRowChangeEvent(CType(e.Row,View_Rpt_Warranty_TorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_Rpt_Warranty_TorRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_Rpt_Warranty_TorRowDeleting(Me, New View_Rpt_Warranty_TorRowChangeEvent(CType(e.Row,View_Rpt_Warranty_TorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveView_Rpt_Warranty_TorRow(ByVal row As View_Rpt_Warranty_TorRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsWarrany_Tor = New dsWarrany_Tor
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_Rpt_Warranty_TorDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class View_Rpt_Warranty_TorRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_Rpt_Warranty_Tor As View_Rpt_Warranty_TorDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_Rpt_Warranty_Tor = CType(Me.Table,View_Rpt_Warranty_TorDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LensNames() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.LensNamesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LensNames' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.LensNamesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GN() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.GNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GN' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.GNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RightEyes() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.RightEyesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RightEyes' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.RightEyesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LeftEyes() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.LeftEyesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LeftEyes' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.LeftEyesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPH() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.SPHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPH' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.SPHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CYL() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.CYLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CYL' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.CYLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AX() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.AXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AX' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.AXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADD() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.ADDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.ADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShopID() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.ShopIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShopID' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.ShopIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ref() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.RefColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.RefColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JobNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.JobNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JobNo' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.JobNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OmsOrderNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.OmsOrderNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OmsOrderNo' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.OmsOrderNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property index1() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.index1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'index1' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.index1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property index2() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.index2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'index2' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.index2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property index3() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.index3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'index3' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.index3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str1() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.str1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str1' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.str1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str2() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.str2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str2' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.str2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str3() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.str3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str3' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.str3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str4() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.str4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str4' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.str4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property str5() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.str5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'str5' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.str5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPH2() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.SPH2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPH2' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.SPH2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CYL2() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.CYL2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CYL2' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.CYL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AX2() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.AX2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AX2' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.AX2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Rpt_Warranty_Tor.ADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD2' in table 'View_Rpt_Warranty_Tor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Rpt_Warranty_Tor.ADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLensNamesNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.LensNamesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLensNamesNull()
            Me(Me.tableView_Rpt_Warranty_Tor.LensNamesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGNNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.GNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGNNull()
            Me(Me.tableView_Rpt_Warranty_Tor.GNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRightEyesNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.RightEyesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRightEyesNull()
            Me(Me.tableView_Rpt_Warranty_Tor.RightEyesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLeftEyesNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.LeftEyesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLeftEyesNull()
            Me(Me.tableView_Rpt_Warranty_Tor.LeftEyesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSPHNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.SPHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSPHNull()
            Me(Me.tableView_Rpt_Warranty_Tor.SPHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCYLNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.CYLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCYLNull()
            Me(Me.tableView_Rpt_Warranty_Tor.CYLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAXNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.AXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAXNull()
            Me(Me.tableView_Rpt_Warranty_Tor.AXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADDNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.ADDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADDNull()
            Me(Me.tableView_Rpt_Warranty_Tor.ADDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShopIDNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.ShopIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShopIDNull()
            Me(Me.tableView_Rpt_Warranty_Tor.ShopIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRefNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.RefColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRefNull()
            Me(Me.tableView_Rpt_Warranty_Tor.RefColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_DateNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_DateNull()
            Me(Me.tableView_Rpt_Warranty_Tor.DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJobNoNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.JobNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJobNoNull()
            Me(Me.tableView_Rpt_Warranty_Tor.JobNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOmsOrderNoNull() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.OmsOrderNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOmsOrderNoNull()
            Me(Me.tableView_Rpt_Warranty_Tor.OmsOrderNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isindex1Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.index1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setindex1Null()
            Me(Me.tableView_Rpt_Warranty_Tor.index1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isindex2Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.index2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setindex2Null()
            Me(Me.tableView_Rpt_Warranty_Tor.index2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isindex3Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.index3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setindex3Null()
            Me(Me.tableView_Rpt_Warranty_Tor.index3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr1Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.str1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr1Null()
            Me(Me.tableView_Rpt_Warranty_Tor.str1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr2Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.str2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr2Null()
            Me(Me.tableView_Rpt_Warranty_Tor.str2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr3Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.str3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr3Null()
            Me(Me.tableView_Rpt_Warranty_Tor.str3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr4Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.str4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr4Null()
            Me(Me.tableView_Rpt_Warranty_Tor.str4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstr5Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.str5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstr5Null()
            Me(Me.tableView_Rpt_Warranty_Tor.str5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSPH2Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.SPH2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSPH2Null()
            Me(Me.tableView_Rpt_Warranty_Tor.SPH2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCYL2Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.CYL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCYL2Null()
            Me(Me.tableView_Rpt_Warranty_Tor.CYL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAX2Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.AX2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAX2Null()
            Me(Me.tableView_Rpt_Warranty_Tor.AX2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADD2Null() As Boolean
            Return Me.IsNull(Me.tableView_Rpt_Warranty_Tor.ADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADD2Null()
            Me(Me.tableView_Rpt_Warranty_Tor.ADD2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class View_Rpt_Warranty_TorRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_Rpt_Warranty_TorRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As View_Rpt_Warranty_TorRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As View_Rpt_Warranty_TorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
