'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsTranferSummary"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTranferSummary
    Inherits Global.System.Data.DataSet
    
    Private tableVIEW_TranferSummary As VIEW_TranferSummaryDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VIEW_TranferSummary")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_TranferSummaryDataTable(ds.Tables("VIEW_TranferSummary")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_TranferSummary() As VIEW_TranferSummaryDataTable
        Get
            Return Me.tableVIEW_TranferSummary
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsTranferSummary = CType(MyBase.Clone,dsTranferSummary)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("VIEW_TranferSummary")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_TranferSummaryDataTable(ds.Tables("VIEW_TranferSummary")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVIEW_TranferSummary = CType(MyBase.Tables("VIEW_TranferSummary"),VIEW_TranferSummaryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_TranferSummary) Is Nothing) Then
                Me.tableVIEW_TranferSummary.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTranferSummary"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTranferSummary.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVIEW_TranferSummary = New VIEW_TranferSummaryDataTable
        MyBase.Tables.Add(Me.tableVIEW_TranferSummary)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_TranferSummary() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTranferSummary = New dsTranferSummary
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub VIEW_TranferSummaryRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_TranferSummaryRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_TranferSummaryDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTransferStatus_No As Global.System.Data.DataColumn
        
        Private columnPlot As Global.System.Data.DataColumn
        
        Private columnTag_No As Global.System.Data.DataColumn
        
        Private columnTransferStatus_Date As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnProduct_Name_th As Global.System.Data.DataColumn
        
        Private columnProduct_Name_en As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnTotal_Qty As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnVolume As Global.System.Data.DataColumn
        
        Private columnStaOld As Global.System.Data.DataColumn
        
        Private columnStaNew As Global.System.Data.DataColumn
        
        Private columnLocationOld As Global.System.Data.DataColumn
        
        Private columnLocationNew As Global.System.Data.DataColumn
        
        Private columnTransferStatus_Index As Global.System.Data.DataColumn
        
        Private columnCustomer_Id As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnItemStatus_IndexNew As Global.System.Data.DataColumn
        
        Private columnItemStatus_IndexOld As Global.System.Data.DataColumn
        
        Private columnWarehouse_IndexNew As Global.System.Data.DataColumn
        
        Private columnRoomNew As Global.System.Data.DataColumn
        
        Private columnWarehouse_IndexOld As Global.System.Data.DataColumn
        
        Private columnRoomOld As Global.System.Data.DataColumn
        
        Private columnDocumentType_Index As Global.System.Data.DataColumn
        
        Private columnTransferStatusLocation_Index As Global.System.Data.DataColumn
        
        Private columnref1 As Global.System.Data.DataColumn
        
        Private columnref2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_TranferSummary"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatus_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatus_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PlotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tag_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTag_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatus_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatus_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Product_Name_thColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Name_th
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Product_Name_enColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Name_en
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StaOldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStaOld
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StaNewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStaNew
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LocationOldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocationOld
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LocationNewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocationNew
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatus_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatus_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemStatus_IndexNewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemStatus_IndexNew
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemStatus_IndexOldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemStatus_IndexOld
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Warehouse_IndexNewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_IndexNew
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RoomNewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoomNew
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Warehouse_IndexOldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_IndexOld
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RoomOldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoomOld
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DocumentType_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TransferStatusLocation_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferStatusLocation_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ref1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnref1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ref2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnref2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_TranferSummaryRow
            Get
                Return CType(Me.Rows(index),VIEW_TranferSummaryRow)
            End Get
        End Property
        
        Public Event VIEW_TranferSummaryRowChanging As VIEW_TranferSummaryRowChangeEventHandler
        
        Public Event VIEW_TranferSummaryRowChanged As VIEW_TranferSummaryRowChangeEventHandler
        
        Public Event VIEW_TranferSummaryRowDeleting As VIEW_TranferSummaryRowChangeEventHandler
        
        Public Event VIEW_TranferSummaryRowDeleted As VIEW_TranferSummaryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_TranferSummaryRow(ByVal row As VIEW_TranferSummaryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_TranferSummaryRow( _
                    ByVal TransferStatus_No As String,  _
                    ByVal Plot As String,  _
                    ByVal Tag_No As String,  _
                    ByVal TransferStatus_Date As Date,  _
                    ByVal Sku_Id As String,  _
                    ByVal Product_Name_th As String,  _
                    ByVal Product_Name_en As String,  _
                    ByVal Description As String,  _
                    ByVal Total_Qty As Double,  _
                    ByVal Weight As Double,  _
                    ByVal Volume As Double,  _
                    ByVal StaOld As String,  _
                    ByVal StaNew As String,  _
                    ByVal LocationOld As String,  _
                    ByVal LocationNew As String,  _
                    ByVal TransferStatus_Index As String,  _
                    ByVal Customer_Id As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal Status As Integer,  _
                    ByVal Customer_Index As String,  _
                    ByVal ItemStatus_IndexNew As String,  _
                    ByVal ItemStatus_IndexOld As String,  _
                    ByVal Warehouse_IndexNew As String,  _
                    ByVal RoomNew As String,  _
                    ByVal Warehouse_IndexOld As String,  _
                    ByVal RoomOld As String,  _
                    ByVal DocumentType_Index As String,  _
                    ByVal TransferStatusLocation_Index As String,  _
                    ByVal ref1 As String,  _
                    ByVal ref2 As String) As VIEW_TranferSummaryRow
            Dim rowVIEW_TranferSummaryRow As VIEW_TranferSummaryRow = CType(Me.NewRow,VIEW_TranferSummaryRow)
            Dim columnValuesArray() As Object = New Object() {TransferStatus_No, Plot, Tag_No, TransferStatus_Date, Sku_Id, Product_Name_th, Product_Name_en, Description, Total_Qty, Weight, Volume, StaOld, StaNew, LocationOld, LocationNew, TransferStatus_Index, Customer_Id, Customer_Name, Status, Customer_Index, ItemStatus_IndexNew, ItemStatus_IndexOld, Warehouse_IndexNew, RoomNew, Warehouse_IndexOld, RoomOld, DocumentType_Index, TransferStatusLocation_Index, ref1, ref2}
            rowVIEW_TranferSummaryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_TranferSummaryRow)
            Return rowVIEW_TranferSummaryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_TranferSummaryDataTable = CType(MyBase.Clone,VIEW_TranferSummaryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_TranferSummaryDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTransferStatus_No = MyBase.Columns("TransferStatus_No")
            Me.columnPlot = MyBase.Columns("Plot")
            Me.columnTag_No = MyBase.Columns("Tag_No")
            Me.columnTransferStatus_Date = MyBase.Columns("TransferStatus_Date")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnProduct_Name_th = MyBase.Columns("Product_Name_th")
            Me.columnProduct_Name_en = MyBase.Columns("Product_Name_en")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnTotal_Qty = MyBase.Columns("Total_Qty")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnVolume = MyBase.Columns("Volume")
            Me.columnStaOld = MyBase.Columns("StaOld")
            Me.columnStaNew = MyBase.Columns("StaNew")
            Me.columnLocationOld = MyBase.Columns("LocationOld")
            Me.columnLocationNew = MyBase.Columns("LocationNew")
            Me.columnTransferStatus_Index = MyBase.Columns("TransferStatus_Index")
            Me.columnCustomer_Id = MyBase.Columns("Customer_Id")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnItemStatus_IndexNew = MyBase.Columns("ItemStatus_IndexNew")
            Me.columnItemStatus_IndexOld = MyBase.Columns("ItemStatus_IndexOld")
            Me.columnWarehouse_IndexNew = MyBase.Columns("Warehouse_IndexNew")
            Me.columnRoomNew = MyBase.Columns("RoomNew")
            Me.columnWarehouse_IndexOld = MyBase.Columns("Warehouse_IndexOld")
            Me.columnRoomOld = MyBase.Columns("RoomOld")
            Me.columnDocumentType_Index = MyBase.Columns("DocumentType_Index")
            Me.columnTransferStatusLocation_Index = MyBase.Columns("TransferStatusLocation_Index")
            Me.columnref1 = MyBase.Columns("ref1")
            Me.columnref2 = MyBase.Columns("ref2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTransferStatus_No = New Global.System.Data.DataColumn("TransferStatus_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatus_No)
            Me.columnPlot = New Global.System.Data.DataColumn("Plot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlot)
            Me.columnTag_No = New Global.System.Data.DataColumn("Tag_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTag_No)
            Me.columnTransferStatus_Date = New Global.System.Data.DataColumn("TransferStatus_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatus_Date)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnProduct_Name_th = New Global.System.Data.DataColumn("Product_Name_th", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Name_th)
            Me.columnProduct_Name_en = New Global.System.Data.DataColumn("Product_Name_en", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Name_en)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnTotal_Qty = New Global.System.Data.DataColumn("Total_Qty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Qty)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnVolume = New Global.System.Data.DataColumn("Volume", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolume)
            Me.columnStaOld = New Global.System.Data.DataColumn("StaOld", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStaOld)
            Me.columnStaNew = New Global.System.Data.DataColumn("StaNew", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStaNew)
            Me.columnLocationOld = New Global.System.Data.DataColumn("LocationOld", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocationOld)
            Me.columnLocationNew = New Global.System.Data.DataColumn("LocationNew", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocationNew)
            Me.columnTransferStatus_Index = New Global.System.Data.DataColumn("TransferStatus_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatus_Index)
            Me.columnCustomer_Id = New Global.System.Data.DataColumn("Customer_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Id)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnItemStatus_IndexNew = New Global.System.Data.DataColumn("ItemStatus_IndexNew", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemStatus_IndexNew)
            Me.columnItemStatus_IndexOld = New Global.System.Data.DataColumn("ItemStatus_IndexOld", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemStatus_IndexOld)
            Me.columnWarehouse_IndexNew = New Global.System.Data.DataColumn("Warehouse_IndexNew", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_IndexNew)
            Me.columnRoomNew = New Global.System.Data.DataColumn("RoomNew", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoomNew)
            Me.columnWarehouse_IndexOld = New Global.System.Data.DataColumn("Warehouse_IndexOld", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_IndexOld)
            Me.columnRoomOld = New Global.System.Data.DataColumn("RoomOld", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoomOld)
            Me.columnDocumentType_Index = New Global.System.Data.DataColumn("DocumentType_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_Index)
            Me.columnTransferStatusLocation_Index = New Global.System.Data.DataColumn("TransferStatusLocation_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferStatusLocation_Index)
            Me.columnref1 = New Global.System.Data.DataColumn("ref1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnref1)
            Me.columnref2 = New Global.System.Data.DataColumn("ref2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnref2)
            Me.columnTransferStatus_No.MaxLength = 50
            Me.columnPlot.MaxLength = 50
            Me.columnTag_No.MaxLength = 50
            Me.columnSku_Id.MaxLength = 50
            Me.columnProduct_Name_th.MaxLength = 100
            Me.columnProduct_Name_en.MaxLength = 100
            Me.columnDescription.MaxLength = 100
            Me.columnStaOld.MaxLength = 100
            Me.columnStaNew.MaxLength = 100
            Me.columnLocationOld.MaxLength = 50
            Me.columnLocationNew.MaxLength = 50
            Me.columnTransferStatus_Index.AllowDBNull = false
            Me.columnTransferStatus_Index.MaxLength = 13
            Me.columnCustomer_Id.MaxLength = 13
            Me.columnCustomer_Name.MaxLength = 100
            Me.columnCustomer_Index.MaxLength = 13
            Me.columnItemStatus_IndexNew.MaxLength = 13
            Me.columnItemStatus_IndexOld.MaxLength = 13
            Me.columnWarehouse_IndexNew.MaxLength = 13
            Me.columnRoomNew.MaxLength = 50
            Me.columnWarehouse_IndexOld.MaxLength = 13
            Me.columnRoomOld.MaxLength = 50
            Me.columnDocumentType_Index.MaxLength = 13
            Me.columnTransferStatusLocation_Index.MaxLength = 13
            Me.columnref1.MaxLength = 100
            Me.columnref2.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_TranferSummaryRow() As VIEW_TranferSummaryRow
            Return CType(Me.NewRow,VIEW_TranferSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_TranferSummaryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_TranferSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_TranferSummaryRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_TranferSummaryRowChanged(Me, New VIEW_TranferSummaryRowChangeEvent(CType(e.Row,VIEW_TranferSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_TranferSummaryRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_TranferSummaryRowChanging(Me, New VIEW_TranferSummaryRowChangeEvent(CType(e.Row,VIEW_TranferSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_TranferSummaryRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_TranferSummaryRowDeleted(Me, New VIEW_TranferSummaryRowChangeEvent(CType(e.Row,VIEW_TranferSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_TranferSummaryRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_TranferSummaryRowDeleting(Me, New VIEW_TranferSummaryRowChangeEvent(CType(e.Row,VIEW_TranferSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_TranferSummaryRow(ByVal row As VIEW_TranferSummaryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTranferSummary = New dsTranferSummary
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_TranferSummaryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_TranferSummaryRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_TranferSummary As VIEW_TranferSummaryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_TranferSummary = CType(Me.Table,VIEW_TranferSummaryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatus_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.TransferStatus_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferStatus_No' in table 'VIEW_TranferSummary' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.TransferStatus_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Plot() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.PlotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Plot' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.PlotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tag_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Tag_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tag_No' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Tag_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatus_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.TransferStatus_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferStatus_Date' in table 'VIEW_TranferSummary' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.TransferStatus_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Product_Name_th() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Product_Name_thColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_Name_th' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Product_Name_thColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Product_Name_en() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Product_Name_enColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_Name_en' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Product_Name_enColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Qty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Total_QtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Qty' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Total_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.WeightColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volume() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.VolumeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volume' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StaOld() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.StaOldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StaOld' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.StaOldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StaNew() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.StaNewColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StaNew' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.StaNewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LocationOld() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.LocationOldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocationOld' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.LocationOldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LocationNew() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.LocationNewColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocationNew' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.LocationNewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatus_Index() As String
            Get
                Return CType(Me(Me.tableVIEW_TranferSummary.TransferStatus_IndexColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.TransferStatus_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Customer_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Id' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Customer_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.StatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Customer_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Index' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemStatus_IndexNew() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.ItemStatus_IndexNewColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemStatus_IndexNew' in table 'VIEW_TranferSummary' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.ItemStatus_IndexNewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemStatus_IndexOld() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.ItemStatus_IndexOldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemStatus_IndexOld' in table 'VIEW_TranferSummary' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.ItemStatus_IndexOldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Warehouse_IndexNew() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Warehouse_IndexNewColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Warehouse_IndexNew' in table 'VIEW_TranferSummary' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Warehouse_IndexNewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RoomNew() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.RoomNewColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RoomNew' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.RoomNewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Warehouse_IndexOld() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.Warehouse_IndexOldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Warehouse_IndexOld' in table 'VIEW_TranferSummary' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.Warehouse_IndexOldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RoomOld() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.RoomOldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RoomOld' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.RoomOldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocumentType_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.DocumentType_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentType_Index' in table 'VIEW_TranferSummary' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.DocumentType_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TransferStatusLocation_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.TransferStatusLocation_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferStatusLocation_Index' in table 'VIEW_TranferSummary"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.TransferStatusLocation_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ref1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.ref1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ref1' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.ref1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ref2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_TranferSummary.ref2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ref2' in table 'VIEW_TranferSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_TranferSummary.ref2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransferStatus_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.TransferStatus_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransferStatus_NoNull()
            Me(Me.tableVIEW_TranferSummary.TransferStatus_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPlotNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.PlotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPlotNull()
            Me(Me.tableVIEW_TranferSummary.PlotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTag_NoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Tag_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTag_NoNull()
            Me(Me.tableVIEW_TranferSummary.Tag_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransferStatus_DateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.TransferStatus_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransferStatus_DateNull()
            Me(Me.tableVIEW_TranferSummary.TransferStatus_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableVIEW_TranferSummary.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProduct_Name_thNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Product_Name_thColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProduct_Name_thNull()
            Me(Me.tableVIEW_TranferSummary.Product_Name_thColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProduct_Name_enNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Product_Name_enColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProduct_Name_enNull()
            Me(Me.tableVIEW_TranferSummary.Product_Name_enColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableVIEW_TranferSummary.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_QtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Total_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_QtyNull()
            Me(Me.tableVIEW_TranferSummary.Total_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeightNull()
            Me(Me.tableVIEW_TranferSummary.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolumeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolumeNull()
            Me(Me.tableVIEW_TranferSummary.VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStaOldNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.StaOldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStaOldNull()
            Me(Me.tableVIEW_TranferSummary.StaOldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStaNewNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.StaNewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStaNewNull()
            Me(Me.tableVIEW_TranferSummary.StaNewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocationOldNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.LocationOldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocationOldNull()
            Me(Me.tableVIEW_TranferSummary.LocationOldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocationNewNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.LocationNewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocationNewNull()
            Me(Me.tableVIEW_TranferSummary.LocationNewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Customer_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IdNull()
            Me(Me.tableVIEW_TranferSummary.Customer_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableVIEW_TranferSummary.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNull()
            Me(Me.tableVIEW_TranferSummary.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Customer_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IndexNull()
            Me(Me.tableVIEW_TranferSummary.Customer_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemStatus_IndexNewNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.ItemStatus_IndexNewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemStatus_IndexNewNull()
            Me(Me.tableVIEW_TranferSummary.ItemStatus_IndexNewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemStatus_IndexOldNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.ItemStatus_IndexOldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemStatus_IndexOldNull()
            Me(Me.tableVIEW_TranferSummary.ItemStatus_IndexOldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWarehouse_IndexNewNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Warehouse_IndexNewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWarehouse_IndexNewNull()
            Me(Me.tableVIEW_TranferSummary.Warehouse_IndexNewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRoomNewNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.RoomNewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRoomNewNull()
            Me(Me.tableVIEW_TranferSummary.RoomNewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWarehouse_IndexOldNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.Warehouse_IndexOldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWarehouse_IndexOldNull()
            Me(Me.tableVIEW_TranferSummary.Warehouse_IndexOldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRoomOldNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.RoomOldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRoomOldNull()
            Me(Me.tableVIEW_TranferSummary.RoomOldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocumentType_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.DocumentType_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocumentType_IndexNull()
            Me(Me.tableVIEW_TranferSummary.DocumentType_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransferStatusLocation_IndexNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.TransferStatusLocation_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransferStatusLocation_IndexNull()
            Me(Me.tableVIEW_TranferSummary.TransferStatusLocation_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isref1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.ref1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setref1Null()
            Me(Me.tableVIEW_TranferSummary.ref1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isref2Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_TranferSummary.ref2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setref2Null()
            Me(Me.tableVIEW_TranferSummary.ref2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_TranferSummaryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_TranferSummaryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_TranferSummaryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_TranferSummaryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
