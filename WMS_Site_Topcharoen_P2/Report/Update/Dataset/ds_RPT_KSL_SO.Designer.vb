'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8833
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ds_RPT_KSL_SO"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ds_RPT_KSL_SO
    Inherits Global.System.Data.DataSet
    
    Private tableView_RPT_KSL_SOV2 As View_RPT_KSL_SOV2DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("View_RPT_KSL_SOV2")) Is Nothing) Then
                MyBase.Tables.Add(New View_RPT_KSL_SOV2DataTable(ds.Tables("View_RPT_KSL_SOV2")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_RPT_KSL_SOV2() As View_RPT_KSL_SOV2DataTable
        Get
            Return Me.tableView_RPT_KSL_SOV2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ds_RPT_KSL_SO = CType(MyBase.Clone,ds_RPT_KSL_SO)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("View_RPT_KSL_SOV2")) Is Nothing) Then
                MyBase.Tables.Add(New View_RPT_KSL_SOV2DataTable(ds.Tables("View_RPT_KSL_SOV2")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableView_RPT_KSL_SOV2 = CType(MyBase.Tables("View_RPT_KSL_SOV2"),View_RPT_KSL_SOV2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_RPT_KSL_SOV2) Is Nothing) Then
                Me.tableView_RPT_KSL_SOV2.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "ds_RPT_KSL_SO"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ds_RPT_KSL_SO.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableView_RPT_KSL_SOV2 = New View_RPT_KSL_SOV2DataTable
        MyBase.Tables.Add(Me.tableView_RPT_KSL_SOV2)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeView_RPT_KSL_SOV2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ds_RPT_KSL_SO = New ds_RPT_KSL_SO
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub View_RPT_KSL_SOV2RowChangeEventHandler(ByVal sender As Object, ByVal e As View_RPT_KSL_SOV2RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_RPT_KSL_SOV2DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnWithdraw_Date As Global.System.Data.DataColumn
        
        Private columnWithdraw_No As Global.System.Data.DataColumn
        
        Private columnDocumentType As Global.System.Data.DataColumn
        
        Private columnSku_winSpeed As Global.System.Data.DataColumn
        
        Private columnTag_No As Global.System.Data.DataColumn
        
        Private columnSku_Id As Global.System.Data.DataColumn
        
        Private columnName_Lot_Status As Global.System.Data.DataColumn
        
        Private columnLocation_Id As Global.System.Data.DataColumn
        
        Private columnQty_Pick As Global.System.Data.DataColumn
        
        Private columnPackage_Id As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnStatus_SO As Global.System.Data.DataColumn
        
        Private columnSalesOrder_No As Global.System.Data.DataColumn
        
        Private columnCustomer_Id As Global.System.Data.DataColumn
        
        Private columnWarehouse_Index As Global.System.Data.DataColumn
        
        Private columnWarehouse_No As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_RPT_KSL_SOV2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Withdraw_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdraw_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Withdraw_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithdraw_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DocumentTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_winSpeedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_winSpeed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tag_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTag_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Name_Lot_StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Lot_Status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Location_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocation_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_PickColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_Pick
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Package_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Status_SOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus_SO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SalesOrder_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesOrder_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Warehouse_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Warehouse_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_RPT_KSL_SOV2Row
            Get
                Return CType(Me.Rows(index),View_RPT_KSL_SOV2Row)
            End Get
        End Property
        
        Public Event View_RPT_KSL_SOV2RowChanging As View_RPT_KSL_SOV2RowChangeEventHandler
        
        Public Event View_RPT_KSL_SOV2RowChanged As View_RPT_KSL_SOV2RowChangeEventHandler
        
        Public Event View_RPT_KSL_SOV2RowDeleting As View_RPT_KSL_SOV2RowChangeEventHandler
        
        Public Event View_RPT_KSL_SOV2RowDeleted As View_RPT_KSL_SOV2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddView_RPT_KSL_SOV2Row(ByVal row As View_RPT_KSL_SOV2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddView_RPT_KSL_SOV2Row( _
                    ByVal Withdraw_Date As Date,  _
                    ByVal Withdraw_No As String,  _
                    ByVal DocumentType As String,  _
                    ByVal Sku_winSpeed As String,  _
                    ByVal Tag_No As String,  _
                    ByVal Sku_Id As String,  _
                    ByVal Name_Lot_Status As String,  _
                    ByVal Location_Id As String,  _
                    ByVal Qty_Pick As Short,  _
                    ByVal Package_Id As String,  _
                    ByVal Weight As String,  _
                    ByVal Status_SO As String,  _
                    ByVal SalesOrder_No As String,  _
                    ByVal Customer_Id As String,  _
                    ByVal Warehouse_Index As String,  _
                    ByVal Warehouse_No As String,  _
                    ByVal Customer_Name As String) As View_RPT_KSL_SOV2Row
            Dim rowView_RPT_KSL_SOV2Row As View_RPT_KSL_SOV2Row = CType(Me.NewRow,View_RPT_KSL_SOV2Row)
            Dim columnValuesArray() As Object = New Object() {Withdraw_Date, Withdraw_No, DocumentType, Sku_winSpeed, Tag_No, Sku_Id, Name_Lot_Status, Location_Id, Qty_Pick, Package_Id, Weight, Status_SO, SalesOrder_No, Customer_Id, Warehouse_Index, Warehouse_No, Customer_Name}
            rowView_RPT_KSL_SOV2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_RPT_KSL_SOV2Row)
            Return rowView_RPT_KSL_SOV2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_RPT_KSL_SOV2DataTable = CType(MyBase.Clone,View_RPT_KSL_SOV2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_RPT_KSL_SOV2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnWithdraw_Date = MyBase.Columns("Withdraw_Date")
            Me.columnWithdraw_No = MyBase.Columns("Withdraw_No")
            Me.columnDocumentType = MyBase.Columns("DocumentType")
            Me.columnSku_winSpeed = MyBase.Columns("Sku_winSpeed")
            Me.columnTag_No = MyBase.Columns("Tag_No")
            Me.columnSku_Id = MyBase.Columns("Sku_Id")
            Me.columnName_Lot_Status = MyBase.Columns("Name_Lot_Status")
            Me.columnLocation_Id = MyBase.Columns("Location_Id")
            Me.columnQty_Pick = MyBase.Columns("Qty_Pick")
            Me.columnPackage_Id = MyBase.Columns("Package_Id")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnStatus_SO = MyBase.Columns("Status_SO")
            Me.columnSalesOrder_No = MyBase.Columns("SalesOrder_No")
            Me.columnCustomer_Id = MyBase.Columns("Customer_Id")
            Me.columnWarehouse_Index = MyBase.Columns("Warehouse_Index")
            Me.columnWarehouse_No = MyBase.Columns("Warehouse_No")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnWithdraw_Date = New Global.System.Data.DataColumn("Withdraw_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdraw_Date)
            Me.columnWithdraw_No = New Global.System.Data.DataColumn("Withdraw_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithdraw_No)
            Me.columnDocumentType = New Global.System.Data.DataColumn("DocumentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType)
            Me.columnSku_winSpeed = New Global.System.Data.DataColumn("Sku_winSpeed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_winSpeed)
            Me.columnTag_No = New Global.System.Data.DataColumn("Tag_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTag_No)
            Me.columnSku_Id = New Global.System.Data.DataColumn("Sku_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Id)
            Me.columnName_Lot_Status = New Global.System.Data.DataColumn("Name_Lot_Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Lot_Status)
            Me.columnLocation_Id = New Global.System.Data.DataColumn("Location_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation_Id)
            Me.columnQty_Pick = New Global.System.Data.DataColumn("Qty_Pick", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_Pick)
            Me.columnPackage_Id = New Global.System.Data.DataColumn("Package_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Id)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnStatus_SO = New Global.System.Data.DataColumn("Status_SO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus_SO)
            Me.columnSalesOrder_No = New Global.System.Data.DataColumn("SalesOrder_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesOrder_No)
            Me.columnCustomer_Id = New Global.System.Data.DataColumn("Customer_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Id)
            Me.columnWarehouse_Index = New Global.System.Data.DataColumn("Warehouse_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_Index)
            Me.columnWarehouse_No = New Global.System.Data.DataColumn("Warehouse_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_No)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewView_RPT_KSL_SOV2Row() As View_RPT_KSL_SOV2Row
            Return CType(Me.NewRow,View_RPT_KSL_SOV2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_RPT_KSL_SOV2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_RPT_KSL_SOV2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_RPT_KSL_SOV2RowChangedEvent) Is Nothing) Then
                RaiseEvent View_RPT_KSL_SOV2RowChanged(Me, New View_RPT_KSL_SOV2RowChangeEvent(CType(e.Row,View_RPT_KSL_SOV2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_RPT_KSL_SOV2RowChangingEvent) Is Nothing) Then
                RaiseEvent View_RPT_KSL_SOV2RowChanging(Me, New View_RPT_KSL_SOV2RowChangeEvent(CType(e.Row,View_RPT_KSL_SOV2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_RPT_KSL_SOV2RowDeletedEvent) Is Nothing) Then
                RaiseEvent View_RPT_KSL_SOV2RowDeleted(Me, New View_RPT_KSL_SOV2RowChangeEvent(CType(e.Row,View_RPT_KSL_SOV2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_RPT_KSL_SOV2RowDeletingEvent) Is Nothing) Then
                RaiseEvent View_RPT_KSL_SOV2RowDeleting(Me, New View_RPT_KSL_SOV2RowChangeEvent(CType(e.Row,View_RPT_KSL_SOV2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveView_RPT_KSL_SOV2Row(ByVal row As View_RPT_KSL_SOV2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ds_RPT_KSL_SO = New ds_RPT_KSL_SO
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_RPT_KSL_SOV2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class View_RPT_KSL_SOV2Row
        Inherits Global.System.Data.DataRow
        
        Private tableView_RPT_KSL_SOV2 As View_RPT_KSL_SOV2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_RPT_KSL_SOV2 = CType(Me.Table,View_RPT_KSL_SOV2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Withdraw_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Withdraw_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Withdraw_Date' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Withdraw_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Withdraw_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Withdraw_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Withdraw_No' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Withdraw_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocumentType() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.DocumentTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentType' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.DocumentTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_winSpeed() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Sku_winSpeedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_winSpeed' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Sku_winSpeedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tag_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Tag_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tag_No' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Tag_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Sku_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Id' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Sku_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Name_Lot_Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Name_Lot_StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Lot_Status' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Name_Lot_StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Location_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Location_Id' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Location_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_Pick() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Qty_PickColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_Pick' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Qty_PickColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Package_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Package_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package_Id' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Package_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Weight() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.WeightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status_SO() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Status_SOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status_SO' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Status_SOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SalesOrder_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.SalesOrder_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesOrder_No' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.SalesOrder_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Customer_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Id' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Customer_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Warehouse_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Warehouse_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Warehouse_Index' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Warehouse_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Warehouse_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Warehouse_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Warehouse_No' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Warehouse_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_RPT_KSL_SOV2.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'View_RPT_KSL_SOV2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_RPT_KSL_SOV2.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWithdraw_DateNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Withdraw_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWithdraw_DateNull()
            Me(Me.tableView_RPT_KSL_SOV2.Withdraw_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWithdraw_NoNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Withdraw_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWithdraw_NoNull()
            Me(Me.tableView_RPT_KSL_SOV2.Withdraw_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocumentTypeNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.DocumentTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocumentTypeNull()
            Me(Me.tableView_RPT_KSL_SOV2.DocumentTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_winSpeedNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Sku_winSpeedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_winSpeedNull()
            Me(Me.tableView_RPT_KSL_SOV2.Sku_winSpeedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTag_NoNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Tag_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTag_NoNull()
            Me(Me.tableView_RPT_KSL_SOV2.Tag_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_IdNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Sku_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_IdNull()
            Me(Me.tableView_RPT_KSL_SOV2.Sku_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsName_Lot_StatusNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Name_Lot_StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetName_Lot_StatusNull()
            Me(Me.tableView_RPT_KSL_SOV2.Name_Lot_StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocation_IdNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Location_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocation_IdNull()
            Me(Me.tableView_RPT_KSL_SOV2.Location_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_PickNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Qty_PickColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_PickNull()
            Me(Me.tableView_RPT_KSL_SOV2.Qty_PickColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackage_IdNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Package_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackage_IdNull()
            Me(Me.tableView_RPT_KSL_SOV2.Package_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWeightNull()
            Me(Me.tableView_RPT_KSL_SOV2.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatus_SONull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Status_SOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatus_SONull()
            Me(Me.tableView_RPT_KSL_SOV2.Status_SOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSalesOrder_NoNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.SalesOrder_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSalesOrder_NoNull()
            Me(Me.tableView_RPT_KSL_SOV2.SalesOrder_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IdNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Customer_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IdNull()
            Me(Me.tableView_RPT_KSL_SOV2.Customer_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWarehouse_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Warehouse_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWarehouse_IndexNull()
            Me(Me.tableView_RPT_KSL_SOV2.Warehouse_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWarehouse_NoNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Warehouse_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWarehouse_NoNull()
            Me(Me.tableView_RPT_KSL_SOV2.Warehouse_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableView_RPT_KSL_SOV2.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableView_RPT_KSL_SOV2.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class View_RPT_KSL_SOV2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_RPT_KSL_SOV2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As View_RPT_KSL_SOV2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As View_RPT_KSL_SOV2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
