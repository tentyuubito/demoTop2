'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8833
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsInvoice_Final"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsInvoice_Final
    Inherits Global.System.Data.DataSet
    
    Private tableView_Invoice_Final As View_Invoice_FinalDataTable
    
    Private tableView_Seq As View_SeqDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("View_Invoice_Final")) Is Nothing) Then
                MyBase.Tables.Add(New View_Invoice_FinalDataTable(ds.Tables("View_Invoice_Final")))
            End If
            If (Not (ds.Tables("View_Seq")) Is Nothing) Then
                MyBase.Tables.Add(New View_SeqDataTable(ds.Tables("View_Seq")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_Invoice_Final() As View_Invoice_FinalDataTable
        Get
            Return Me.tableView_Invoice_Final
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_Seq() As View_SeqDataTable
        Get
            Return Me.tableView_Seq
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsInvoice_Final = CType(MyBase.Clone,dsInvoice_Final)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("View_Invoice_Final")) Is Nothing) Then
                MyBase.Tables.Add(New View_Invoice_FinalDataTable(ds.Tables("View_Invoice_Final")))
            End If
            If (Not (ds.Tables("View_Seq")) Is Nothing) Then
                MyBase.Tables.Add(New View_SeqDataTable(ds.Tables("View_Seq")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableView_Invoice_Final = CType(MyBase.Tables("View_Invoice_Final"),View_Invoice_FinalDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_Invoice_Final) Is Nothing) Then
                Me.tableView_Invoice_Final.InitVars
            End If
        End If
        Me.tableView_Seq = CType(MyBase.Tables("View_Seq"),View_SeqDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_Seq) Is Nothing) Then
                Me.tableView_Seq.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsInvoice_Final"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableView_Invoice_Final = New View_Invoice_FinalDataTable
        MyBase.Tables.Add(Me.tableView_Invoice_Final)
        Me.tableView_Seq = New View_SeqDataTable
        MyBase.Tables.Add(Me.tableView_Seq)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeView_Invoice_Final() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeView_Seq() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsInvoice_Final = New dsInvoice_Final
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub View_Invoice_FinalRowChangeEventHandler(ByVal sender As Object, ByVal e As View_Invoice_FinalRowChangeEvent)
    
    Public Delegate Sub View_SeqRowChangeEventHandler(ByVal sender As Object, ByVal e As View_SeqRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_Invoice_FinalDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnBarcode_No As Global.System.Data.DataColumn
        
        Private columnQRCode As Global.System.Data.DataColumn
        
        Private columnDocument_No As Global.System.Data.DataColumn
        
        Private columnDocument_Date As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Id As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Tax As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Depart As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Name As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Address As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Tel As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Fax As Global.System.Data.DataColumn
        
        Private columnCutomer_Shipping_Remark As Global.System.Data.DataColumn
        
        Private columnCredit_date As Global.System.Data.DataColumn
        
        Private columnDelivery_date As Global.System.Data.DataColumn
        
        Private columnCustomer_id As Global.System.Data.DataColumn
        
        Private columnLocation_Sales As Global.System.Data.DataColumn
        
        Private columnTransport_id As Global.System.Data.DataColumn
        
        Private columnLocation_Shipping As Global.System.Data.DataColumn
        
        Private columnOrder_date As Global.System.Data.DataColumn
        
        Private columnTransprot_date As Global.System.Data.DataColumn
        
        Private columnSku_id As Global.System.Data.DataColumn
        
        Private columnSku_Name As Global.System.Data.DataColumn
        
        Private columnQty_Bal As Global.System.Data.DataColumn
        
        Private columnPackDes As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnUnit_Price As Global.System.Data.DataColumn
        
        Private columnVat As Global.System.Data.DataColumn
        
        Private columnVat_Nomal As Global.System.Data.DataColumn
        
        Private columnSeq As Global.System.Data.DataColumn
        
        Private columnTotal_Amount As Global.System.Data.DataColumn
        
        Private columnTotal_Discount As Global.System.Data.DataColumn
        
        Private columnSum_Total As Global.System.Data.DataColumn
        
        Private columnTotal_Vat As Global.System.Data.DataColumn
        
        Private columnTotal_Vat_Nomal As Global.System.Data.DataColumn
        
        Private columnORDER_NO As Global.System.Data.DataColumn
        
        Private columnDocument_Copy As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Id_ST As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Name_ST As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Address_ST As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Tel_ST As Global.System.Data.DataColumn
        
        Private columnCustomer_Shipping_Fax_ST As Global.System.Data.DataColumn
        
        Private columnLine As Global.System.Data.DataColumn
        
        Private columnSalesOrder_No As Global.System.Data.DataColumn
        
        Private columnTotal_Discount_items As Global.System.Data.DataColumn
        
        Private columnPer_Discount_items As Global.System.Data.DataColumn
        
        Private columnInvoice_RunCopy As Global.System.Data.DataColumn
        
        Private columnERP_WIN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_Invoice_Final"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Barcode_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcode_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property QRCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQRCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Document_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Document_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_TaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Tax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_DepartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Depart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_TelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Tel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_FaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Fax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cutomer_Shipping_RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCutomer_Shipping_Remark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Credit_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCredit_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Delivery_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDelivery_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Location_SalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocation_Sales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Transport_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransport_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Location_ShippingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocation_Shipping
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Order_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrder_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Transprot_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransprot_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sku_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Qty_BalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_Bal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PackDesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackDes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Unit_PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit_Price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Vat_NomalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVat_Nomal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Discount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_Total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_VatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Vat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_Vat_NomalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Vat_Nomal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORDER_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDER_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Document_CopyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_Copy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_Id_STColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Id_ST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_Name_STColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Name_ST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_Address_STColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Address_ST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_Tel_STColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Tel_ST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_Shipping_Fax_STColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Shipping_Fax_ST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SalesOrder_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesOrder_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_Discount_itemsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Discount_items
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Per_Discount_itemsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPer_Discount_items
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_RunCopyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_RunCopy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ERP_WINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnERP_WIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_Invoice_FinalRow
            Get
                Return CType(Me.Rows(index),View_Invoice_FinalRow)
            End Get
        End Property
        
        Public Event View_Invoice_FinalRowChanging As View_Invoice_FinalRowChangeEventHandler
        
        Public Event View_Invoice_FinalRowChanged As View_Invoice_FinalRowChangeEventHandler
        
        Public Event View_Invoice_FinalRowDeleting As View_Invoice_FinalRowChangeEventHandler
        
        Public Event View_Invoice_FinalRowDeleted As View_Invoice_FinalRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddView_Invoice_FinalRow(ByVal row As View_Invoice_FinalRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddView_Invoice_FinalRow( _
                    ByVal Barcode_No() As Byte,  _
                    ByVal QRCode() As Byte,  _
                    ByVal Document_No As String,  _
                    ByVal Document_Date As Date,  _
                    ByVal Customer_Shipping_Id As String,  _
                    ByVal Customer_Shipping_Tax As String,  _
                    ByVal Customer_Shipping_Depart As String,  _
                    ByVal Customer_Shipping_Name As String,  _
                    ByVal Customer_Shipping_Address As String,  _
                    ByVal Customer_Shipping_Tel As String,  _
                    ByVal Customer_Shipping_Fax As String,  _
                    ByVal Cutomer_Shipping_Remark As String,  _
                    ByVal Credit_date As Short,  _
                    ByVal Delivery_date As Date,  _
                    ByVal Customer_id As String,  _
                    ByVal Location_Sales As String,  _
                    ByVal Transport_id As String,  _
                    ByVal Location_Shipping As String,  _
                    ByVal Order_date As Date,  _
                    ByVal Transprot_date As Date,  _
                    ByVal Sku_id As String,  _
                    ByVal Sku_Name As String,  _
                    ByVal Qty_Bal As Short,  _
                    ByVal PackDes As String,  _
                    ByVal Amount As Double,  _
                    ByVal Discount As Short,  _
                    ByVal Unit_Price As Double,  _
                    ByVal Vat As Short,  _
                    ByVal Vat_Nomal As Short,  _
                    ByVal Seq As Short,  _
                    ByVal Total_Amount As Double,  _
                    ByVal Total_Discount As Double,  _
                    ByVal Sum_Total As Double,  _
                    ByVal Total_Vat As Double,  _
                    ByVal Total_Vat_Nomal As Decimal,  _
                    ByVal ORDER_NO As String,  _
                    ByVal Document_Copy As Short,  _
                    ByVal Customer_Shipping_Id_ST As String,  _
                    ByVal Customer_Shipping_Name_ST As String,  _
                    ByVal Customer_Shipping_Address_ST As String,  _
                    ByVal Customer_Shipping_Tel_ST As String,  _
                    ByVal Customer_Shipping_Fax_ST As String,  _
                    ByVal Line As Integer,  _
                    ByVal SalesOrder_No As String,  _
                    ByVal Total_Discount_items As Short,  _
                    ByVal Per_Discount_items As Short,  _
                    ByVal Invoice_RunCopy As String,  _
                    ByVal ERP_WIN As String) As View_Invoice_FinalRow
            Dim rowView_Invoice_FinalRow As View_Invoice_FinalRow = CType(Me.NewRow,View_Invoice_FinalRow)
            Dim columnValuesArray() As Object = New Object() {Barcode_No, QRCode, Document_No, Document_Date, Customer_Shipping_Id, Customer_Shipping_Tax, Customer_Shipping_Depart, Customer_Shipping_Name, Customer_Shipping_Address, Customer_Shipping_Tel, Customer_Shipping_Fax, Cutomer_Shipping_Remark, Credit_date, Delivery_date, Customer_id, Location_Sales, Transport_id, Location_Shipping, Order_date, Transprot_date, Sku_id, Sku_Name, Qty_Bal, PackDes, Amount, Discount, Unit_Price, Vat, Vat_Nomal, Seq, Total_Amount, Total_Discount, Sum_Total, Total_Vat, Total_Vat_Nomal, ORDER_NO, Document_Copy, Customer_Shipping_Id_ST, Customer_Shipping_Name_ST, Customer_Shipping_Address_ST, Customer_Shipping_Tel_ST, Customer_Shipping_Fax_ST, Line, SalesOrder_No, Total_Discount_items, Per_Discount_items, Invoice_RunCopy, ERP_WIN}
            rowView_Invoice_FinalRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_Invoice_FinalRow)
            Return rowView_Invoice_FinalRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_Invoice_FinalDataTable = CType(MyBase.Clone,View_Invoice_FinalDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_Invoice_FinalDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnBarcode_No = MyBase.Columns("Barcode_No")
            Me.columnQRCode = MyBase.Columns("QRCode")
            Me.columnDocument_No = MyBase.Columns("Document_No")
            Me.columnDocument_Date = MyBase.Columns("Document_Date")
            Me.columnCustomer_Shipping_Id = MyBase.Columns("Customer_Shipping_Id")
            Me.columnCustomer_Shipping_Tax = MyBase.Columns("Customer_Shipping_Tax")
            Me.columnCustomer_Shipping_Depart = MyBase.Columns("Customer_Shipping_Depart")
            Me.columnCustomer_Shipping_Name = MyBase.Columns("Customer_Shipping_Name")
            Me.columnCustomer_Shipping_Address = MyBase.Columns("Customer_Shipping_Address")
            Me.columnCustomer_Shipping_Tel = MyBase.Columns("Customer_Shipping_Tel")
            Me.columnCustomer_Shipping_Fax = MyBase.Columns("Customer_Shipping_Fax")
            Me.columnCutomer_Shipping_Remark = MyBase.Columns("Cutomer_Shipping_Remark")
            Me.columnCredit_date = MyBase.Columns("Credit_date")
            Me.columnDelivery_date = MyBase.Columns("Delivery_date")
            Me.columnCustomer_id = MyBase.Columns("Customer_id")
            Me.columnLocation_Sales = MyBase.Columns("Location_Sales")
            Me.columnTransport_id = MyBase.Columns("Transport_id")
            Me.columnLocation_Shipping = MyBase.Columns("Location_Shipping")
            Me.columnOrder_date = MyBase.Columns("Order_date")
            Me.columnTransprot_date = MyBase.Columns("Transprot_date")
            Me.columnSku_id = MyBase.Columns("Sku_id")
            Me.columnSku_Name = MyBase.Columns("Sku_Name")
            Me.columnQty_Bal = MyBase.Columns("Qty_Bal")
            Me.columnPackDes = MyBase.Columns("PackDes")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnUnit_Price = MyBase.Columns("Unit_Price")
            Me.columnVat = MyBase.Columns("Vat")
            Me.columnVat_Nomal = MyBase.Columns("Vat_Nomal")
            Me.columnSeq = MyBase.Columns("Seq")
            Me.columnTotal_Amount = MyBase.Columns("Total_Amount")
            Me.columnTotal_Discount = MyBase.Columns("Total_Discount")
            Me.columnSum_Total = MyBase.Columns("Sum_Total")
            Me.columnTotal_Vat = MyBase.Columns("Total_Vat")
            Me.columnTotal_Vat_Nomal = MyBase.Columns("Total_Vat_Nomal")
            Me.columnORDER_NO = MyBase.Columns("ORDER_NO")
            Me.columnDocument_Copy = MyBase.Columns("Document_Copy")
            Me.columnCustomer_Shipping_Id_ST = MyBase.Columns("Customer_Shipping_Id_ST")
            Me.columnCustomer_Shipping_Name_ST = MyBase.Columns("Customer_Shipping_Name_ST")
            Me.columnCustomer_Shipping_Address_ST = MyBase.Columns("Customer_Shipping_Address_ST")
            Me.columnCustomer_Shipping_Tel_ST = MyBase.Columns("Customer_Shipping_Tel_ST")
            Me.columnCustomer_Shipping_Fax_ST = MyBase.Columns("Customer_Shipping_Fax_ST")
            Me.columnLine = MyBase.Columns("Line")
            Me.columnSalesOrder_No = MyBase.Columns("SalesOrder_No")
            Me.columnTotal_Discount_items = MyBase.Columns("Total_Discount_items")
            Me.columnPer_Discount_items = MyBase.Columns("Per_Discount_items")
            Me.columnInvoice_RunCopy = MyBase.Columns("Invoice_RunCopy")
            Me.columnERP_WIN = MyBase.Columns("ERP_WIN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnBarcode_No = New Global.System.Data.DataColumn("Barcode_No", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcode_No)
            Me.columnQRCode = New Global.System.Data.DataColumn("QRCode", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQRCode)
            Me.columnDocument_No = New Global.System.Data.DataColumn("Document_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_No)
            Me.columnDocument_Date = New Global.System.Data.DataColumn("Document_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_Date)
            Me.columnCustomer_Shipping_Id = New Global.System.Data.DataColumn("Customer_Shipping_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Id)
            Me.columnCustomer_Shipping_Tax = New Global.System.Data.DataColumn("Customer_Shipping_Tax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Tax)
            Me.columnCustomer_Shipping_Depart = New Global.System.Data.DataColumn("Customer_Shipping_Depart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Depart)
            Me.columnCustomer_Shipping_Name = New Global.System.Data.DataColumn("Customer_Shipping_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Name)
            Me.columnCustomer_Shipping_Address = New Global.System.Data.DataColumn("Customer_Shipping_Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Address)
            Me.columnCustomer_Shipping_Tel = New Global.System.Data.DataColumn("Customer_Shipping_Tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Tel)
            Me.columnCustomer_Shipping_Fax = New Global.System.Data.DataColumn("Customer_Shipping_Fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Fax)
            Me.columnCutomer_Shipping_Remark = New Global.System.Data.DataColumn("Cutomer_Shipping_Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCutomer_Shipping_Remark)
            Me.columnCredit_date = New Global.System.Data.DataColumn("Credit_date", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCredit_date)
            Me.columnDelivery_date = New Global.System.Data.DataColumn("Delivery_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDelivery_date)
            Me.columnCustomer_id = New Global.System.Data.DataColumn("Customer_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_id)
            Me.columnLocation_Sales = New Global.System.Data.DataColumn("Location_Sales", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation_Sales)
            Me.columnTransport_id = New Global.System.Data.DataColumn("Transport_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransport_id)
            Me.columnLocation_Shipping = New Global.System.Data.DataColumn("Location_Shipping", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation_Shipping)
            Me.columnOrder_date = New Global.System.Data.DataColumn("Order_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrder_date)
            Me.columnTransprot_date = New Global.System.Data.DataColumn("Transprot_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransprot_date)
            Me.columnSku_id = New Global.System.Data.DataColumn("Sku_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_id)
            Me.columnSku_Name = New Global.System.Data.DataColumn("Sku_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku_Name)
            Me.columnQty_Bal = New Global.System.Data.DataColumn("Qty_Bal", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_Bal)
            Me.columnPackDes = New Global.System.Data.DataColumn("PackDes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackDes)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnUnit_Price = New Global.System.Data.DataColumn("Unit_Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit_Price)
            Me.columnVat = New Global.System.Data.DataColumn("Vat", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVat)
            Me.columnVat_Nomal = New Global.System.Data.DataColumn("Vat_Nomal", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVat_Nomal)
            Me.columnSeq = New Global.System.Data.DataColumn("Seq", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeq)
            Me.columnTotal_Amount = New Global.System.Data.DataColumn("Total_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Amount)
            Me.columnTotal_Discount = New Global.System.Data.DataColumn("Total_Discount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Discount)
            Me.columnSum_Total = New Global.System.Data.DataColumn("Sum_Total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_Total)
            Me.columnTotal_Vat = New Global.System.Data.DataColumn("Total_Vat", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Vat)
            Me.columnTotal_Vat_Nomal = New Global.System.Data.DataColumn("Total_Vat_Nomal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Vat_Nomal)
            Me.columnORDER_NO = New Global.System.Data.DataColumn("ORDER_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDER_NO)
            Me.columnDocument_Copy = New Global.System.Data.DataColumn("Document_Copy", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_Copy)
            Me.columnCustomer_Shipping_Id_ST = New Global.System.Data.DataColumn("Customer_Shipping_Id_ST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Id_ST)
            Me.columnCustomer_Shipping_Name_ST = New Global.System.Data.DataColumn("Customer_Shipping_Name_ST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Name_ST)
            Me.columnCustomer_Shipping_Address_ST = New Global.System.Data.DataColumn("Customer_Shipping_Address_ST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Address_ST)
            Me.columnCustomer_Shipping_Tel_ST = New Global.System.Data.DataColumn("Customer_Shipping_Tel_ST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Tel_ST)
            Me.columnCustomer_Shipping_Fax_ST = New Global.System.Data.DataColumn("Customer_Shipping_Fax_ST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Shipping_Fax_ST)
            Me.columnLine = New Global.System.Data.DataColumn("Line", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLine)
            Me.columnSalesOrder_No = New Global.System.Data.DataColumn("SalesOrder_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesOrder_No)
            Me.columnTotal_Discount_items = New Global.System.Data.DataColumn("Total_Discount_items", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Discount_items)
            Me.columnPer_Discount_items = New Global.System.Data.DataColumn("Per_Discount_items", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPer_Discount_items)
            Me.columnInvoice_RunCopy = New Global.System.Data.DataColumn("Invoice_RunCopy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_RunCopy)
            Me.columnERP_WIN = New Global.System.Data.DataColumn("ERP_WIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnERP_WIN)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewView_Invoice_FinalRow() As View_Invoice_FinalRow
            Return CType(Me.NewRow,View_Invoice_FinalRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_Invoice_FinalRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_Invoice_FinalRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_Invoice_FinalRowChangedEvent) Is Nothing) Then
                RaiseEvent View_Invoice_FinalRowChanged(Me, New View_Invoice_FinalRowChangeEvent(CType(e.Row,View_Invoice_FinalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_Invoice_FinalRowChangingEvent) Is Nothing) Then
                RaiseEvent View_Invoice_FinalRowChanging(Me, New View_Invoice_FinalRowChangeEvent(CType(e.Row,View_Invoice_FinalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_Invoice_FinalRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_Invoice_FinalRowDeleted(Me, New View_Invoice_FinalRowChangeEvent(CType(e.Row,View_Invoice_FinalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_Invoice_FinalRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_Invoice_FinalRowDeleting(Me, New View_Invoice_FinalRowChangeEvent(CType(e.Row,View_Invoice_FinalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveView_Invoice_FinalRow(ByVal row As View_Invoice_FinalRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsInvoice_Final = New dsInvoice_Final
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_Invoice_FinalDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_SeqDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSeq As Global.System.Data.DataColumn
        
        Private columnVat As Global.System.Data.DataColumn
        
        Private columnTotal_Vat_Nomal As Global.System.Data.DataColumn
        
        Private columnReport_Name As Global.System.Data.DataColumn
        
        Private columnCustomer_Index As Global.System.Data.DataColumn
        
        Private columnHead_Rpt As Global.System.Data.DataColumn
        
        Private columnTotal_Vat As Global.System.Data.DataColumn
        
        Private columnSum_Total As Global.System.Data.DataColumn
        
        Private columnTotal_Discount As Global.System.Data.DataColumn
        
        Private columnTotal_Amount As Global.System.Data.DataColumn
        
        Private columnVat_Nomal As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnORDER_NO As Global.System.Data.DataColumn
        
        Private columnImgUser As Global.System.Data.DataColumn
        
        Private columnImgDriver As Global.System.Data.DataColumn
        
        Private columnWinSpeed As Global.System.Data.DataColumn
        
        Private columnCustomer_Name As Global.System.Data.DataColumn
        
        Private columnUser_Name_INV As Global.System.Data.DataColumn
        
        Private columnInvoice_Date As Global.System.Data.DataColumn
        
        Private columnintMaster As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_Seq"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_Vat_NomalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Vat_Nomal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Report_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReport_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Head_RptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHead_Rpt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_VatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Vat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sum_TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSum_Total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Discount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Total_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Vat_NomalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVat_Nomal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORDER_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDER_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImgUserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImgUser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImgDriverColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImgDriver
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WinSpeedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWinSpeed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property User_Name_INVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUser_Name_INV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Invoice_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property intMasterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnintMaster
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_SeqRow
            Get
                Return CType(Me.Rows(index),View_SeqRow)
            End Get
        End Property
        
        Public Event View_SeqRowChanging As View_SeqRowChangeEventHandler
        
        Public Event View_SeqRowChanged As View_SeqRowChangeEventHandler
        
        Public Event View_SeqRowDeleting As View_SeqRowChangeEventHandler
        
        Public Event View_SeqRowDeleted As View_SeqRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddView_SeqRow(ByVal row As View_SeqRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddView_SeqRow( _
                    ByVal Seq As Short,  _
                    ByVal Vat As Short,  _
                    ByVal Total_Vat_Nomal As Decimal,  _
                    ByVal Report_Name As String,  _
                    ByVal Customer_Index As String,  _
                    ByVal Head_Rpt As String,  _
                    ByVal Total_Vat As Double,  _
                    ByVal Sum_Total As Double,  _
                    ByVal Total_Discount As Double,  _
                    ByVal Total_Amount As Double,  _
                    ByVal Vat_Nomal As Short,  _
                    ByVal Discount As Short,  _
                    ByVal ORDER_NO As String,  _
                    ByVal ImgUser() As Byte,  _
                    ByVal ImgDriver() As Byte,  _
                    ByVal WinSpeed As String,  _
                    ByVal Customer_Name As String,  _
                    ByVal User_Name_INV As String,  _
                    ByVal Invoice_Date As Date,  _
                    ByVal intMaster As Short) As View_SeqRow
            Dim rowView_SeqRow As View_SeqRow = CType(Me.NewRow,View_SeqRow)
            Dim columnValuesArray() As Object = New Object() {Seq, Vat, Total_Vat_Nomal, Report_Name, Customer_Index, Head_Rpt, Total_Vat, Sum_Total, Total_Discount, Total_Amount, Vat_Nomal, Discount, ORDER_NO, ImgUser, ImgDriver, WinSpeed, Customer_Name, User_Name_INV, Invoice_Date, intMaster}
            rowView_SeqRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_SeqRow)
            Return rowView_SeqRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_SeqDataTable = CType(MyBase.Clone,View_SeqDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_SeqDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSeq = MyBase.Columns("Seq")
            Me.columnVat = MyBase.Columns("Vat")
            Me.columnTotal_Vat_Nomal = MyBase.Columns("Total_Vat_Nomal")
            Me.columnReport_Name = MyBase.Columns("Report_Name")
            Me.columnCustomer_Index = MyBase.Columns("Customer_Index")
            Me.columnHead_Rpt = MyBase.Columns("Head_Rpt")
            Me.columnTotal_Vat = MyBase.Columns("Total_Vat")
            Me.columnSum_Total = MyBase.Columns("Sum_Total")
            Me.columnTotal_Discount = MyBase.Columns("Total_Discount")
            Me.columnTotal_Amount = MyBase.Columns("Total_Amount")
            Me.columnVat_Nomal = MyBase.Columns("Vat_Nomal")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnORDER_NO = MyBase.Columns("ORDER_NO")
            Me.columnImgUser = MyBase.Columns("ImgUser")
            Me.columnImgDriver = MyBase.Columns("ImgDriver")
            Me.columnWinSpeed = MyBase.Columns("WinSpeed")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnUser_Name_INV = MyBase.Columns("User_Name_INV")
            Me.columnInvoice_Date = MyBase.Columns("Invoice_Date")
            Me.columnintMaster = MyBase.Columns("intMaster")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSeq = New Global.System.Data.DataColumn("Seq", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeq)
            Me.columnVat = New Global.System.Data.DataColumn("Vat", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVat)
            Me.columnTotal_Vat_Nomal = New Global.System.Data.DataColumn("Total_Vat_Nomal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Vat_Nomal)
            Me.columnReport_Name = New Global.System.Data.DataColumn("Report_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReport_Name)
            Me.columnCustomer_Index = New Global.System.Data.DataColumn("Customer_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Index)
            Me.columnHead_Rpt = New Global.System.Data.DataColumn("Head_Rpt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHead_Rpt)
            Me.columnTotal_Vat = New Global.System.Data.DataColumn("Total_Vat", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Vat)
            Me.columnSum_Total = New Global.System.Data.DataColumn("Sum_Total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSum_Total)
            Me.columnTotal_Discount = New Global.System.Data.DataColumn("Total_Discount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Discount)
            Me.columnTotal_Amount = New Global.System.Data.DataColumn("Total_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Amount)
            Me.columnVat_Nomal = New Global.System.Data.DataColumn("Vat_Nomal", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVat_Nomal)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnORDER_NO = New Global.System.Data.DataColumn("ORDER_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDER_NO)
            Me.columnImgUser = New Global.System.Data.DataColumn("ImgUser", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImgUser)
            Me.columnImgDriver = New Global.System.Data.DataColumn("ImgDriver", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImgDriver)
            Me.columnWinSpeed = New Global.System.Data.DataColumn("WinSpeed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWinSpeed)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnUser_Name_INV = New Global.System.Data.DataColumn("User_Name_INV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUser_Name_INV)
            Me.columnInvoice_Date = New Global.System.Data.DataColumn("Invoice_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_Date)
            Me.columnintMaster = New Global.System.Data.DataColumn("intMaster", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnintMaster)
            Me.columnSeq.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewView_SeqRow() As View_SeqRow
            Return CType(Me.NewRow,View_SeqRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_SeqRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_SeqRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_SeqRowChangedEvent) Is Nothing) Then
                RaiseEvent View_SeqRowChanged(Me, New View_SeqRowChangeEvent(CType(e.Row,View_SeqRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_SeqRowChangingEvent) Is Nothing) Then
                RaiseEvent View_SeqRowChanging(Me, New View_SeqRowChangeEvent(CType(e.Row,View_SeqRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_SeqRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_SeqRowDeleted(Me, New View_SeqRowChangeEvent(CType(e.Row,View_SeqRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_SeqRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_SeqRowDeleting(Me, New View_SeqRowChangeEvent(CType(e.Row,View_SeqRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveView_SeqRow(ByVal row As View_SeqRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsInvoice_Final = New dsInvoice_Final
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_SeqDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class View_Invoice_FinalRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_Invoice_Final As View_Invoice_FinalDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_Invoice_Final = CType(Me.Table,View_Invoice_FinalDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Barcode_No() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Barcode_NoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode_No' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Barcode_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property QRCode() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.QRCodeColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QRCode' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.QRCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Document_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Document_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_No' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Document_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Document_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Document_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_Date' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Document_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Id' in table 'View_Invoice_Final' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Tax() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_TaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Tax' in table 'View_Invoice_Final' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_TaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Depart() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_DepartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Depart' in table 'View_Invoice_Final' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_DepartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Name' in table 'View_Invoice_Final' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Address' in table 'View_Invoice_Final' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Tel() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_TelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Tel' in table 'View_Invoice_Final' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_TelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_FaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Fax' in table 'View_Invoice_Final' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_FaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cutomer_Shipping_Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Cutomer_Shipping_RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cutomer_Shipping_Remark' in table 'View_Invoice_Final' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Cutomer_Shipping_RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Credit_date() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Credit_dateColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit_date' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Credit_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Delivery_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Delivery_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Delivery_date' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Delivery_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_id' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location_Sales() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Location_SalesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Location_Sales' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Location_SalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Transport_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Transport_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Transport_id' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Transport_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location_Shipping() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Location_ShippingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Location_Shipping' in table 'View_Invoice_Final' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Location_ShippingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Order_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Order_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Order_date' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Order_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Transprot_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Transprot_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Transprot_date' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Transprot_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Sku_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_id' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Sku_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sku_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Sku_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku_Name' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Sku_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty_Bal() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Qty_BalColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_Bal' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Qty_BalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PackDes() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.PackDesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PackDes' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.PackDesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Discount() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.DiscountColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Unit_Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Unit_PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unit_Price' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Unit_PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vat() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.VatColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vat' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.VatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vat_Nomal() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Vat_NomalColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vat_Nomal' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Vat_NomalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Seq() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.SeqColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Seq' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.SeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Total_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Amount' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Total_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Discount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Total_DiscountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Discount' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Total_DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_Total() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Sum_TotalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_Total' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Sum_TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Vat() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Total_VatColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Vat' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Total_VatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Vat_Nomal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Total_Vat_NomalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Vat_Nomal' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Total_Vat_NomalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORDER_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.ORDER_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDER_NO' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.ORDER_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Document_Copy() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Document_CopyColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_Copy' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Document_CopyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Id_ST() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_Id_STColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Id_ST' in table 'View_Invoice_Final' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_Id_STColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Name_ST() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_Name_STColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Name_ST' in table 'View_Invoice_Final' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_Name_STColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Address_ST() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_Address_STColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Address_ST' in table 'View_Invoice_Final'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_Address_STColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Tel_ST() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_Tel_STColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Tel_ST' in table 'View_Invoice_Final' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_Tel_STColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Shipping_Fax_ST() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Customer_Shipping_Fax_STColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Shipping_Fax_ST' in table 'View_Invoice_Final' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Customer_Shipping_Fax_STColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Line() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.LineColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Line' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.LineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SalesOrder_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.SalesOrder_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesOrder_No' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.SalesOrder_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Discount_items() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Total_Discount_itemsColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Discount_items' in table 'View_Invoice_Final' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Total_Discount_itemsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Per_Discount_items() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Per_Discount_itemsColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Per_Discount_items' in table 'View_Invoice_Final' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Per_Discount_itemsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_RunCopy() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.Invoice_RunCopyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_RunCopy' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.Invoice_RunCopyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ERP_WIN() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Invoice_Final.ERP_WINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ERP_WIN' in table 'View_Invoice_Final' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Invoice_Final.ERP_WINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBarcode_NoNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Barcode_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBarcode_NoNull()
            Me(Me.tableView_Invoice_Final.Barcode_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQRCodeNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.QRCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQRCodeNull()
            Me(Me.tableView_Invoice_Final.QRCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocument_NoNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Document_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocument_NoNull()
            Me(Me.tableView_Invoice_Final.Document_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocument_DateNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Document_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocument_DateNull()
            Me(Me.tableView_Invoice_Final.Document_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_IdNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_IdNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_TaxNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_TaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_TaxNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_TaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_DepartNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_DepartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_DepartNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_DepartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_NameNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_NameNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_AddressNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_AddressNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_TelNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_TelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_TelNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_TelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_FaxNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_FaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_FaxNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_FaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCutomer_Shipping_RemarkNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Cutomer_Shipping_RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCutomer_Shipping_RemarkNull()
            Me(Me.tableView_Invoice_Final.Cutomer_Shipping_RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCredit_dateNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Credit_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCredit_dateNull()
            Me(Me.tableView_Invoice_Final.Credit_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDelivery_dateNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Delivery_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDelivery_dateNull()
            Me(Me.tableView_Invoice_Final.Delivery_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_idNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_idNull()
            Me(Me.tableView_Invoice_Final.Customer_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocation_SalesNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Location_SalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocation_SalesNull()
            Me(Me.tableView_Invoice_Final.Location_SalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransport_idNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Transport_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransport_idNull()
            Me(Me.tableView_Invoice_Final.Transport_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocation_ShippingNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Location_ShippingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocation_ShippingNull()
            Me(Me.tableView_Invoice_Final.Location_ShippingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOrder_dateNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Order_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOrder_dateNull()
            Me(Me.tableView_Invoice_Final.Order_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTransprot_dateNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Transprot_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTransprot_dateNull()
            Me(Me.tableView_Invoice_Final.Transprot_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_idNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Sku_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_idNull()
            Me(Me.tableView_Invoice_Final.Sku_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSku_NameNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Sku_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSku_NameNull()
            Me(Me.tableView_Invoice_Final.Sku_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQty_BalNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Qty_BalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQty_BalNull()
            Me(Me.tableView_Invoice_Final.Qty_BalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPackDesNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.PackDesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPackDesNull()
            Me(Me.tableView_Invoice_Final.PackDesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAmountNull()
            Me(Me.tableView_Invoice_Final.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiscountNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiscountNull()
            Me(Me.tableView_Invoice_Final.DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUnit_PriceNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Unit_PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUnit_PriceNull()
            Me(Me.tableView_Invoice_Final.Unit_PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVatNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.VatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVatNull()
            Me(Me.tableView_Invoice_Final.VatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVat_NomalNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Vat_NomalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVat_NomalNull()
            Me(Me.tableView_Invoice_Final.Vat_NomalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSeqNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.SeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSeqNull()
            Me(Me.tableView_Invoice_Final.SeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_AmountNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Total_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_AmountNull()
            Me(Me.tableView_Invoice_Final.Total_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_DiscountNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Total_DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_DiscountNull()
            Me(Me.tableView_Invoice_Final.Total_DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_TotalNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Sum_TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_TotalNull()
            Me(Me.tableView_Invoice_Final.Sum_TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_VatNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Total_VatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_VatNull()
            Me(Me.tableView_Invoice_Final.Total_VatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_Vat_NomalNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Total_Vat_NomalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_Vat_NomalNull()
            Me(Me.tableView_Invoice_Final.Total_Vat_NomalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORDER_NONull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.ORDER_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORDER_NONull()
            Me(Me.tableView_Invoice_Final.ORDER_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDocument_CopyNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Document_CopyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDocument_CopyNull()
            Me(Me.tableView_Invoice_Final.Document_CopyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_Id_STNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_Id_STColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_Id_STNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_Id_STColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_Name_STNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_Name_STColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_Name_STNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_Name_STColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_Address_STNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_Address_STColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_Address_STNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_Address_STColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_Tel_STNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_Tel_STColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_Tel_STNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_Tel_STColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_Shipping_Fax_STNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Customer_Shipping_Fax_STColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_Shipping_Fax_STNull()
            Me(Me.tableView_Invoice_Final.Customer_Shipping_Fax_STColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLineNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.LineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLineNull()
            Me(Me.tableView_Invoice_Final.LineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSalesOrder_NoNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.SalesOrder_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSalesOrder_NoNull()
            Me(Me.tableView_Invoice_Final.SalesOrder_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_Discount_itemsNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Total_Discount_itemsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_Discount_itemsNull()
            Me(Me.tableView_Invoice_Final.Total_Discount_itemsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPer_Discount_itemsNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Per_Discount_itemsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPer_Discount_itemsNull()
            Me(Me.tableView_Invoice_Final.Per_Discount_itemsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_RunCopyNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.Invoice_RunCopyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_RunCopyNull()
            Me(Me.tableView_Invoice_Final.Invoice_RunCopyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsERP_WINNull() As Boolean
            Return Me.IsNull(Me.tableView_Invoice_Final.ERP_WINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetERP_WINNull()
            Me(Me.tableView_Invoice_Final.ERP_WINColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class View_SeqRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_Seq As View_SeqDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_Seq = CType(Me.Table,View_SeqDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Seq() As Short
            Get
                Return CType(Me(Me.tableView_Seq.SeqColumn),Short)
            End Get
            Set
                Me(Me.tableView_Seq.SeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vat() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.VatColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vat' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.VatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Vat_Nomal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Total_Vat_NomalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Vat_Nomal' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Total_Vat_NomalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Report_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Report_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Report_Name' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Report_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Index() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Customer_IndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Index' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Customer_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Head_Rpt() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Head_RptColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Head_Rpt' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Head_RptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Vat() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Total_VatColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Vat' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Total_VatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sum_Total() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Sum_TotalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sum_Total' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Sum_TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Discount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Total_DiscountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Discount' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Total_DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Total_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total_Amount' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Total_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vat_Nomal() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Vat_NomalColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vat_Nomal' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Vat_NomalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Discount() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.DiscountColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORDER_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.ORDER_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDER_NO' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.ORDER_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ImgUser() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.ImgUserColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImgUser' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.ImgUserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ImgDriver() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.ImgDriverColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImgDriver' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.ImgDriverColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property WinSpeed() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.WinSpeedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WinSpeed' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.WinSpeedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property User_Name_INV() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.User_Name_INVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'User_Name_INV' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.User_Name_INVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Invoice_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.Invoice_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Invoice_Date' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.Invoice_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property intMaster() As Short
            Get
                Try 
                    Return CType(Me(Me.tableView_Seq.intMasterColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'intMaster' in table 'View_Seq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Seq.intMasterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVatNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.VatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVatNull()
            Me(Me.tableView_Seq.VatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_Vat_NomalNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Total_Vat_NomalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_Vat_NomalNull()
            Me(Me.tableView_Seq.Total_Vat_NomalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReport_NameNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Report_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReport_NameNull()
            Me(Me.tableView_Seq.Report_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_IndexNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Customer_IndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_IndexNull()
            Me(Me.tableView_Seq.Customer_IndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHead_RptNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Head_RptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHead_RptNull()
            Me(Me.tableView_Seq.Head_RptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_VatNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Total_VatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_VatNull()
            Me(Me.tableView_Seq.Total_VatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSum_TotalNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Sum_TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSum_TotalNull()
            Me(Me.tableView_Seq.Sum_TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_DiscountNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Total_DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_DiscountNull()
            Me(Me.tableView_Seq.Total_DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotal_AmountNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Total_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotal_AmountNull()
            Me(Me.tableView_Seq.Total_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVat_NomalNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Vat_NomalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVat_NomalNull()
            Me(Me.tableView_Seq.Vat_NomalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiscountNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiscountNull()
            Me(Me.tableView_Seq.DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORDER_NONull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.ORDER_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORDER_NONull()
            Me(Me.tableView_Seq.ORDER_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImgUserNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.ImgUserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImgUserNull()
            Me(Me.tableView_Seq.ImgUserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImgDriverNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.ImgDriverColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImgDriverNull()
            Me(Me.tableView_Seq.ImgDriverColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWinSpeedNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.WinSpeedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWinSpeedNull()
            Me(Me.tableView_Seq.WinSpeedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableView_Seq.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUser_Name_INVNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.User_Name_INVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUser_Name_INVNull()
            Me(Me.tableView_Seq.User_Name_INVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvoice_DateNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.Invoice_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvoice_DateNull()
            Me(Me.tableView_Seq.Invoice_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsintMasterNull() As Boolean
            Return Me.IsNull(Me.tableView_Seq.intMasterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetintMasterNull()
            Me(Me.tableView_Seq.intMasterColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class View_Invoice_FinalRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_Invoice_FinalRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As View_Invoice_FinalRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As View_Invoice_FinalRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class View_SeqRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_SeqRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As View_SeqRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As View_SeqRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
